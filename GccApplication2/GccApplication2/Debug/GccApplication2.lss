
GccApplication2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001534  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00081534  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000a8  20000434  00081968  00020434  2**2
                  ALLOC
  3 .stack        00000404  200004dc  00081a10  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008e0  00081e14  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00006a77  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013c4  00000000  00000000  00026f2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000290  00000000  00000000  000282f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001f0  00000000  00000000  00028581  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00012f55  00000000  00000000  00028771  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000593f  00000000  00000000  0003b6c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000557a9  00000000  00000000  00041005  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000824  00000000  00000000  000967b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000011b9  00000000  00000000  00096fd4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	e0 08 00 20 f1 03 08 00 ed 03 08 00 ed 03 08 00     ... ............
   80010:	ed 03 08 00 ed 03 08 00 ed 03 08 00 00 00 00 00     ................
	...
   8002c:	ed 03 08 00 ed 03 08 00 00 00 00 00 ed 03 08 00     ................
   8003c:	21 0c 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     !...............
   8004c:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   8005c:	ed 03 08 00 cd 0c 08 00 ed 03 08 00 00 00 00 00     ................
   8006c:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
	...
   80084:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   80094:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   800a4:	00 00 00 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   800b4:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   800c4:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   800d4:	ed 03 08 00 ed 03 08 00 ed 03 08 00 ed 03 08 00     ................
   800e4:	ed 03 08 00 ed 03 08 00 1d 03 08 00 ed 03 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00081534 	.word	0x00081534

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00081534 	.word	0x00081534
   80154:	20000438 	.word	0x20000438
   80158:	00081534 	.word	0x00081534
   8015c:	00000000 	.word	0x00000000

00080160 <adc_init>:
   80160:	4b0d      	ldr	r3, [pc, #52]	; (80198 <adc_init+0x38>)
   80162:	2280      	movs	r2, #128	; 0x80
   80164:	605a      	str	r2, [r3, #4]
   80166:	2201      	movs	r2, #1
   80168:	611a      	str	r2, [r3, #16]
   8016a:	f503 3301 	add.w	r3, r3, #132096	; 0x20400
   8016e:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80172:	4a0a      	ldr	r2, [pc, #40]	; (8019c <adc_init+0x3c>)
   80174:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
   80178:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   8017c:	f042 0220 	orr.w	r2, r2, #32
   80180:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
   80184:	4b06      	ldr	r3, [pc, #24]	; (801a0 <adc_init+0x40>)
   80186:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   8018a:	f013 0f20 	tst.w	r3, #32
   8018e:	d0f9      	beq.n	80184 <adc_init+0x24>
   80190:	2202      	movs	r2, #2
   80192:	4b01      	ldr	r3, [pc, #4]	; (80198 <adc_init+0x38>)
   80194:	601a      	str	r2, [r3, #0]
   80196:	4770      	bx	lr
   80198:	400c0000 	.word	0x400c0000
   8019c:	10000025 	.word	0x10000025
   801a0:	400e0600 	.word	0x400e0600

000801a4 <can_init>:
   801a4:	b4f0      	push	{r4, r5, r6, r7}
   801a6:	1857      	adds	r7, r2, r1
   801a8:	2f08      	cmp	r7, #8
   801aa:	bfd4      	ite	le
   801ac:	2300      	movle	r3, #0
   801ae:	2301      	movgt	r3, #1
   801b0:	2908      	cmp	r1, #8
   801b2:	bf98      	it	ls
   801b4:	2a08      	cmpls	r2, #8
   801b6:	d85c      	bhi.n	80272 <can_init+0xce>
   801b8:	460d      	mov	r5, r1
   801ba:	2b00      	cmp	r3, #0
   801bc:	d159      	bne.n	80272 <can_init+0xce>
   801be:	4a2e      	ldr	r2, [pc, #184]	; (80278 <can_init+0xd4>)
   801c0:	6813      	ldr	r3, [r2, #0]
   801c2:	f023 0301 	bic.w	r3, r3, #1
   801c6:	6013      	str	r3, [r2, #0]
   801c8:	6913      	ldr	r3, [r2, #16]
   801ca:	4b2c      	ldr	r3, [pc, #176]	; (8027c <can_init+0xd8>)
   801cc:	f44f 7440 	mov.w	r4, #768	; 0x300
   801d0:	645c      	str	r4, [r3, #68]	; 0x44
   801d2:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   801d4:	f024 0403 	bic.w	r4, r4, #3
   801d8:	671c      	str	r4, [r3, #112]	; 0x70
   801da:	2403      	movs	r4, #3
   801dc:	605c      	str	r4, [r3, #4]
   801de:	665c      	str	r4, [r3, #100]	; 0x64
   801e0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   801e4:	4c26      	ldr	r4, [pc, #152]	; (80280 <can_init+0xdc>)
   801e6:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   801ea:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801ee:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801f2:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   801f6:	6150      	str	r0, [r2, #20]
   801f8:	2400      	movs	r4, #0
   801fa:	e019      	b.n	80230 <can_init+0x8c>
   801fc:	481e      	ldr	r0, [pc, #120]	; (80278 <can_init+0xd4>)
   801fe:	f101 0310 	add.w	r3, r1, #16
   80202:	015b      	lsls	r3, r3, #5
   80204:	18c2      	adds	r2, r0, r3
   80206:	2600      	movs	r6, #0
   80208:	6056      	str	r6, [r2, #4]
   8020a:	eb00 1241 	add.w	r2, r0, r1, lsl #5
   8020e:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   80212:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
   80216:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
   8021a:	50c6      	str	r6, [r0, r3]
   8021c:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
   80220:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   80224:	f8c2 321c 	str.w	r3, [r2, #540]	; 0x21c
   80228:	2301      	movs	r3, #1
   8022a:	408b      	lsls	r3, r1
   8022c:	431c      	orrs	r4, r3
   8022e:	3101      	adds	r1, #1
   80230:	42b9      	cmp	r1, r7
   80232:	dde3      	ble.n	801fc <can_init+0x58>
   80234:	2300      	movs	r3, #0
   80236:	e00d      	b.n	80254 <can_init+0xb0>
   80238:	490f      	ldr	r1, [pc, #60]	; (80278 <can_init+0xd4>)
   8023a:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   8023e:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   80242:	f8c2 0208 	str.w	r0, [r2, #520]	; 0x208
   80246:	f103 0210 	add.w	r2, r3, #16
   8024a:	0152      	lsls	r2, r2, #5
   8024c:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80250:	5088      	str	r0, [r1, r2]
   80252:	3301      	adds	r3, #1
   80254:	42ab      	cmp	r3, r5
   80256:	dbef      	blt.n	80238 <can_init+0x94>
   80258:	4b07      	ldr	r3, [pc, #28]	; (80278 <can_init+0xd4>)
   8025a:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   8025c:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80260:	4a08      	ldr	r2, [pc, #32]	; (80284 <can_init+0xe0>)
   80262:	6051      	str	r1, [r2, #4]
   80264:	681a      	ldr	r2, [r3, #0]
   80266:	f042 0201 	orr.w	r2, r2, #1
   8026a:	601a      	str	r2, [r3, #0]
   8026c:	2000      	movs	r0, #0
   8026e:	bcf0      	pop	{r4, r5, r6, r7}
   80270:	4770      	bx	lr
   80272:	2001      	movs	r0, #1
   80274:	e7fb      	b.n	8026e <can_init+0xca>
   80276:	bf00      	nop
   80278:	400b4000 	.word	0x400b4000
   8027c:	400e0e00 	.word	0x400e0e00
   80280:	1000102b 	.word	0x1000102b
   80284:	e000e100 	.word	0xe000e100

00080288 <can_init_def_tx_rx_mb>:
   80288:	b508      	push	{r3, lr}
   8028a:	2202      	movs	r2, #2
   8028c:	2101      	movs	r1, #1
   8028e:	4b01      	ldr	r3, [pc, #4]	; (80294 <can_init_def_tx_rx_mb+0xc>)
   80290:	4798      	blx	r3
   80292:	bd08      	pop	{r3, pc}
   80294:	000801a5 	.word	0x000801a5

00080298 <can_receive>:
   80298:	014b      	lsls	r3, r1, #5
   8029a:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8029e:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802a2:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   802a6:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   802aa:	d033      	beq.n	80314 <can_receive+0x7c>
   802ac:	b470      	push	{r4, r5, r6}
   802ae:	014b      	lsls	r3, r1, #5
   802b0:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   802b4:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802b8:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
   802bc:	f8d3 2218 	ldr.w	r2, [r3, #536]	; 0x218
   802c0:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   802c4:	f3c5 458a 	ubfx	r5, r5, #18, #11
   802c8:	8005      	strh	r5, [r0, #0]
   802ca:	f8d3 5210 	ldr.w	r5, [r3, #528]	; 0x210
   802ce:	f3c5 4503 	ubfx	r5, r5, #16, #4
   802d2:	7085      	strb	r5, [r0, #2]
   802d4:	2300      	movs	r3, #0
   802d6:	e003      	b.n	802e0 <can_receive+0x48>
   802d8:	18c6      	adds	r6, r0, r3
   802da:	70f2      	strb	r2, [r6, #3]
   802dc:	0a12      	lsrs	r2, r2, #8
   802de:	3301      	adds	r3, #1
   802e0:	42ab      	cmp	r3, r5
   802e2:	da05      	bge.n	802f0 <can_receive+0x58>
   802e4:	2b03      	cmp	r3, #3
   802e6:	dcf7      	bgt.n	802d8 <can_receive+0x40>
   802e8:	18c6      	adds	r6, r0, r3
   802ea:	70f4      	strb	r4, [r6, #3]
   802ec:	0a24      	lsrs	r4, r4, #8
   802ee:	e7f6      	b.n	802de <can_receive+0x46>
   802f0:	4b09      	ldr	r3, [pc, #36]	; (80318 <can_receive+0x80>)
   802f2:	f101 0210 	add.w	r2, r1, #16
   802f6:	0152      	lsls	r2, r2, #5
   802f8:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   802fc:	5098      	str	r0, [r3, r2]
   802fe:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   80302:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   80306:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   8030a:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   8030e:	2000      	movs	r0, #0
   80310:	bc70      	pop	{r4, r5, r6}
   80312:	4770      	bx	lr
   80314:	2001      	movs	r0, #1
   80316:	4770      	bx	lr
   80318:	400b4000 	.word	0x400b4000

0008031c <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   8031c:	b510      	push	{r4, lr}
   8031e:	b084      	sub	sp, #16
	//if(DEBUG_INTERRUPT)printf("CAN0 interrupt\n\r");
	char can_sr = CAN0->CAN_SR; 
   80320:	4b15      	ldr	r3, [pc, #84]	; (80378 <CAN0_Handler+0x5c>)
   80322:	691c      	ldr	r4, [r3, #16]
	
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   80324:	f014 0f06 	tst.w	r4, #6
   80328:	d019      	beq.n	8035e <CAN0_Handler+0x42>
	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   8032a:	f014 0f02 	tst.w	r4, #2
   8032e:	d108      	bne.n	80342 <CAN0_Handler+0x26>
		{
			can_receive(&message, 1);

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   80330:	f014 0f04 	tst.w	r4, #4
   80334:	d00a      	beq.n	8034c <CAN0_Handler+0x30>
		
		{
			can_receive(&message, 2);
   80336:	2102      	movs	r1, #2
   80338:	a801      	add	r0, sp, #4
   8033a:	4b10      	ldr	r3, [pc, #64]	; (8037c <CAN0_Handler+0x60>)
   8033c:	4798      	blx	r3
		}

		//if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
		if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
		if(DEBUG_INTERRUPT)printf("\n\n\r");
		for (int i = 0; i < message.data_length; i++)
   8033e:	2300      	movs	r3, #0
   80340:	e009      	b.n	80356 <CAN0_Handler+0x3a>
			can_receive(&message, 1);
   80342:	2101      	movs	r1, #1
   80344:	a801      	add	r0, sp, #4
   80346:	4b0d      	ldr	r3, [pc, #52]	; (8037c <CAN0_Handler+0x60>)
   80348:	4798      	blx	r3
   8034a:	e7f8      	b.n	8033e <CAN0_Handler+0x22>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   8034c:	480c      	ldr	r0, [pc, #48]	; (80380 <CAN0_Handler+0x64>)
   8034e:	4b0d      	ldr	r3, [pc, #52]	; (80384 <CAN0_Handler+0x68>)
   80350:	4798      	blx	r3
   80352:	e7f4      	b.n	8033e <CAN0_Handler+0x22>
		for (int i = 0; i < message.data_length; i++)
   80354:	3301      	adds	r3, #1
   80356:	f89d 2006 	ldrb.w	r2, [sp, #6]
   8035a:	4293      	cmp	r3, r2
   8035c:	dbfa      	blt.n	80354 <CAN0_Handler+0x38>
			if(DEBUG_INTERRUPT)printf("%d  ", message.data[i]);
		}
		servo_ref = message.data[0];
	}
	
	if(can_sr & CAN_SR_MB0)
   8035e:	f014 0f01 	tst.w	r4, #1
   80362:	d002      	beq.n	8036a <CAN0_Handler+0x4e>
	{
		//if(DEBUG_INTERRUPT) printf("CAN0 MB0 ready to send \n\r");
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   80364:	2201      	movs	r2, #1
   80366:	4b04      	ldr	r3, [pc, #16]	; (80378 <CAN0_Handler+0x5c>)
   80368:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   8036a:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8036e:	4b06      	ldr	r3, [pc, #24]	; (80388 <CAN0_Handler+0x6c>)
   80370:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

	}
	
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/
}
   80374:	b004      	add	sp, #16
   80376:	bd10      	pop	{r4, pc}
   80378:	400b4000 	.word	0x400b4000
   8037c:	00080299 	.word	0x00080299
   80380:	00081498 	.word	0x00081498
   80384:	00080b25 	.word	0x00080b25
   80388:	e000e100 	.word	0xe000e100

0008038c <dac_write>:
   8038c:	4b03      	ldr	r3, [pc, #12]	; (8039c <dac_write+0x10>)
   8038e:	6218      	str	r0, [r3, #32]
   80390:	4b02      	ldr	r3, [pc, #8]	; (8039c <dac_write+0x10>)
   80392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80394:	f013 0f04 	tst.w	r3, #4
   80398:	d0fa      	beq.n	80390 <dac_write+0x4>
   8039a:	4770      	bx	lr
   8039c:	400c8000 	.word	0x400c8000

000803a0 <dac_init>:
   803a0:	b508      	push	{r3, lr}
   803a2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   803a6:	4b0d      	ldr	r3, [pc, #52]	; (803dc <dac_init+0x3c>)
   803a8:	605a      	str	r2, [r3, #4]
   803aa:	f503 33c3 	add.w	r3, r3, #99840	; 0x18600
   803ae:	4a0c      	ldr	r2, [pc, #48]	; (803e0 <dac_init+0x40>)
   803b0:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
   803b4:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   803b8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   803bc:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
   803c0:	4b08      	ldr	r3, [pc, #32]	; (803e4 <dac_init+0x44>)
   803c2:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   803c6:	f013 0f40 	tst.w	r3, #64	; 0x40
   803ca:	d0f9      	beq.n	803c0 <dac_init+0x20>
   803cc:	2202      	movs	r2, #2
   803ce:	4b03      	ldr	r3, [pc, #12]	; (803dc <dac_init+0x3c>)
   803d0:	611a      	str	r2, [r3, #16]
   803d2:	2000      	movs	r0, #0
   803d4:	4b04      	ldr	r3, [pc, #16]	; (803e8 <dac_init+0x48>)
   803d6:	4798      	blx	r3
   803d8:	bd08      	pop	{r3, pc}
   803da:	bf00      	nop
   803dc:	400c8000 	.word	0x400c8000
   803e0:	10000026 	.word	0x10000026
   803e4:	400e0600 	.word	0x400e0600
   803e8:	0008038d 	.word	0x0008038d

000803ec <Dummy_Handler>:
   803ec:	e7fe      	b.n	803ec <Dummy_Handler>
	...

000803f0 <Reset_Handler>:
   803f0:	b508      	push	{r3, lr}
   803f2:	4b11      	ldr	r3, [pc, #68]	; (80438 <Reset_Handler+0x48>)
   803f4:	4a11      	ldr	r2, [pc, #68]	; (8043c <Reset_Handler+0x4c>)
   803f6:	429a      	cmp	r2, r3
   803f8:	d009      	beq.n	8040e <Reset_Handler+0x1e>
   803fa:	4b0f      	ldr	r3, [pc, #60]	; (80438 <Reset_Handler+0x48>)
   803fc:	4a0f      	ldr	r2, [pc, #60]	; (8043c <Reset_Handler+0x4c>)
   803fe:	e003      	b.n	80408 <Reset_Handler+0x18>
   80400:	6811      	ldr	r1, [r2, #0]
   80402:	6019      	str	r1, [r3, #0]
   80404:	3304      	adds	r3, #4
   80406:	3204      	adds	r2, #4
   80408:	490d      	ldr	r1, [pc, #52]	; (80440 <Reset_Handler+0x50>)
   8040a:	428b      	cmp	r3, r1
   8040c:	d3f8      	bcc.n	80400 <Reset_Handler+0x10>
   8040e:	4b0d      	ldr	r3, [pc, #52]	; (80444 <Reset_Handler+0x54>)
   80410:	e002      	b.n	80418 <Reset_Handler+0x28>
   80412:	2200      	movs	r2, #0
   80414:	601a      	str	r2, [r3, #0]
   80416:	3304      	adds	r3, #4
   80418:	4a0b      	ldr	r2, [pc, #44]	; (80448 <Reset_Handler+0x58>)
   8041a:	4293      	cmp	r3, r2
   8041c:	d3f9      	bcc.n	80412 <Reset_Handler+0x22>
   8041e:	4b0b      	ldr	r3, [pc, #44]	; (8044c <Reset_Handler+0x5c>)
   80420:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   80424:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80428:	4a09      	ldr	r2, [pc, #36]	; (80450 <Reset_Handler+0x60>)
   8042a:	6093      	str	r3, [r2, #8]
   8042c:	4b09      	ldr	r3, [pc, #36]	; (80454 <Reset_Handler+0x64>)
   8042e:	4798      	blx	r3
   80430:	4b09      	ldr	r3, [pc, #36]	; (80458 <Reset_Handler+0x68>)
   80432:	4798      	blx	r3
   80434:	e7fe      	b.n	80434 <Reset_Handler+0x44>
   80436:	bf00      	nop
   80438:	20000000 	.word	0x20000000
   8043c:	00081534 	.word	0x00081534
   80440:	20000434 	.word	0x20000434
   80444:	20000434 	.word	0x20000434
   80448:	200004dc 	.word	0x200004dc
   8044c:	00080000 	.word	0x00080000
   80450:	e000ed00 	.word	0xe000ed00
   80454:	00081329 	.word	0x00081329
   80458:	00080501 	.word	0x00080501

0008045c <SystemInit>:
   8045c:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80460:	4a20      	ldr	r2, [pc, #128]	; (804e4 <SystemInit+0x88>)
   80462:	6013      	str	r3, [r2, #0]
   80464:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80468:	6013      	str	r3, [r2, #0]
   8046a:	4b1f      	ldr	r3, [pc, #124]	; (804e8 <SystemInit+0x8c>)
   8046c:	6a1b      	ldr	r3, [r3, #32]
   8046e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80472:	d107      	bne.n	80484 <SystemInit+0x28>
   80474:	4a1d      	ldr	r2, [pc, #116]	; (804ec <SystemInit+0x90>)
   80476:	4b1c      	ldr	r3, [pc, #112]	; (804e8 <SystemInit+0x8c>)
   80478:	621a      	str	r2, [r3, #32]
   8047a:	4b1b      	ldr	r3, [pc, #108]	; (804e8 <SystemInit+0x8c>)
   8047c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8047e:	f013 0f01 	tst.w	r3, #1
   80482:	d0fa      	beq.n	8047a <SystemInit+0x1e>
   80484:	4a1a      	ldr	r2, [pc, #104]	; (804f0 <SystemInit+0x94>)
   80486:	4b18      	ldr	r3, [pc, #96]	; (804e8 <SystemInit+0x8c>)
   80488:	621a      	str	r2, [r3, #32]
   8048a:	4b17      	ldr	r3, [pc, #92]	; (804e8 <SystemInit+0x8c>)
   8048c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8048e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80492:	d0fa      	beq.n	8048a <SystemInit+0x2e>
   80494:	4a14      	ldr	r2, [pc, #80]	; (804e8 <SystemInit+0x8c>)
   80496:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80498:	f023 0303 	bic.w	r3, r3, #3
   8049c:	f043 0301 	orr.w	r3, r3, #1
   804a0:	6313      	str	r3, [r2, #48]	; 0x30
   804a2:	4b11      	ldr	r3, [pc, #68]	; (804e8 <SystemInit+0x8c>)
   804a4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804a6:	f013 0f08 	tst.w	r3, #8
   804aa:	d0fa      	beq.n	804a2 <SystemInit+0x46>
   804ac:	4a11      	ldr	r2, [pc, #68]	; (804f4 <SystemInit+0x98>)
   804ae:	4b0e      	ldr	r3, [pc, #56]	; (804e8 <SystemInit+0x8c>)
   804b0:	629a      	str	r2, [r3, #40]	; 0x28
   804b2:	4b0d      	ldr	r3, [pc, #52]	; (804e8 <SystemInit+0x8c>)
   804b4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804b6:	f013 0f02 	tst.w	r3, #2
   804ba:	d0fa      	beq.n	804b2 <SystemInit+0x56>
   804bc:	2211      	movs	r2, #17
   804be:	4b0a      	ldr	r3, [pc, #40]	; (804e8 <SystemInit+0x8c>)
   804c0:	631a      	str	r2, [r3, #48]	; 0x30
   804c2:	4b09      	ldr	r3, [pc, #36]	; (804e8 <SystemInit+0x8c>)
   804c4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804c6:	f013 0f08 	tst.w	r3, #8
   804ca:	d0fa      	beq.n	804c2 <SystemInit+0x66>
   804cc:	2212      	movs	r2, #18
   804ce:	4b06      	ldr	r3, [pc, #24]	; (804e8 <SystemInit+0x8c>)
   804d0:	631a      	str	r2, [r3, #48]	; 0x30
   804d2:	4b05      	ldr	r3, [pc, #20]	; (804e8 <SystemInit+0x8c>)
   804d4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804d6:	f013 0f08 	tst.w	r3, #8
   804da:	d0fa      	beq.n	804d2 <SystemInit+0x76>
   804dc:	4a06      	ldr	r2, [pc, #24]	; (804f8 <SystemInit+0x9c>)
   804de:	4b07      	ldr	r3, [pc, #28]	; (804fc <SystemInit+0xa0>)
   804e0:	601a      	str	r2, [r3, #0]
   804e2:	4770      	bx	lr
   804e4:	400e0a00 	.word	0x400e0a00
   804e8:	400e0600 	.word	0x400e0600
   804ec:	00370809 	.word	0x00370809
   804f0:	01370809 	.word	0x01370809
   804f4:	200d3f01 	.word	0x200d3f01
   804f8:	0501bd00 	.word	0x0501bd00
   804fc:	20000000 	.word	0x20000000

00080500 <main>:
#include "adc.h"
#include "motorbox_interface.h"
#include "PID.h"


int main(void){
   80500:	b510      	push	{r4, lr}
   80502:	b082      	sub	sp, #8
    /* Initialize the SAM system */
	SystemInit();
   80504:	4b25      	ldr	r3, [pc, #148]	; (8059c <main+0x9c>)
   80506:	4798      	blx	r3
	// disable watchdog
	WDT->WDT_MR = WDT_MR_WDDIS;
   80508:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8050c:	4b24      	ldr	r3, [pc, #144]	; (805a0 <main+0xa0>)
   8050e:	605a      	str	r2, [r3, #4]
	
	
	configure_uart();
   80510:	4b24      	ldr	r3, [pc, #144]	; (805a4 <main+0xa4>)
   80512:	4798      	blx	r3
	
	uint32_t can_br = (SMP << 24) | (BRP << 16) | (SJW << 12) | ((PROSEG - 1) << 8) | ((PS1 - 1) << 4) | (PS2 - 1);
	
	can_init_def_tx_rx_mb(can_br);
   80514:	4824      	ldr	r0, [pc, #144]	; (805a8 <main+0xa8>)
   80516:	4b25      	ldr	r3, [pc, #148]	; (805ac <main+0xac>)
   80518:	4798      	blx	r3
	pwm_init();
   8051a:	4b25      	ldr	r3, [pc, #148]	; (805b0 <main+0xb0>)
   8051c:	4798      	blx	r3
	dac_init();
   8051e:	4b25      	ldr	r3, [pc, #148]	; (805b4 <main+0xb4>)
   80520:	4798      	blx	r3
	adc_init();
   80522:	4b25      	ldr	r3, [pc, #148]	; (805b8 <main+0xb8>)
   80524:	4798      	blx	r3
	motor_init();
   80526:	4b25      	ldr	r3, [pc, #148]	; (805bc <main+0xbc>)
   80528:	4798      	blx	r3
	
	
	set_bit(PIOA->PIO_PER, 19);
   8052a:	4b25      	ldr	r3, [pc, #148]	; (805c0 <main+0xc0>)
   8052c:	681a      	ldr	r2, [r3, #0]
   8052e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80532:	601a      	str	r2, [r3, #0]
	set_bit(PIOA->PIO_PER, 20);
   80534:	681a      	ldr	r2, [r3, #0]
   80536:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   8053a:	601a      	str	r2, [r3, #0]
	set_bit(PIOA->PIO_OER, 19);
   8053c:	691a      	ldr	r2, [r3, #16]
   8053e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80542:	611a      	str	r2, [r3, #16]
	set_bit(PIOA->PIO_OER, 20);
   80544:	691a      	ldr	r2, [r3, #16]
   80546:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   8054a:	611a      	str	r2, [r3, #16]
	
	set_bit(PIOA->PIO_SODR, 19);
   8054c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   8054e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80552:	631a      	str	r2, [r3, #48]	; 0x30
	set_bit(PIOA->PIO_SODR, 20);
   80554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80556:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   8055a:	631a      	str	r2, [r3, #48]	; 0x30
	
	
	printf("Entering loop");
   8055c:	4819      	ldr	r0, [pc, #100]	; (805c4 <main+0xc4>)
   8055e:	4b1a      	ldr	r3, [pc, #104]	; (805c8 <main+0xc8>)
   80560:	4798      	blx	r3
	
	PID_controller_init(100, 10, 0, 0.02, 4095, -4095);
   80562:	4b1a      	ldr	r3, [pc, #104]	; (805cc <main+0xcc>)
   80564:	9301      	str	r3, [sp, #4]
   80566:	4b1a      	ldr	r3, [pc, #104]	; (805d0 <main+0xd0>)
   80568:	9300      	str	r3, [sp, #0]
   8056a:	4b1a      	ldr	r3, [pc, #104]	; (805d4 <main+0xd4>)
   8056c:	2200      	movs	r2, #0
   8056e:	491a      	ldr	r1, [pc, #104]	; (805d8 <main+0xd8>)
   80570:	481a      	ldr	r0, [pc, #104]	; (805dc <main+0xdc>)
   80572:	4c1b      	ldr	r4, [pc, #108]	; (805e0 <main+0xe0>)
   80574:	47a0      	blx	r4
	
	
    while (1){
		change_motor_speed(PID_controller(servo_ref, get_motor_position()));
   80576:	4b1b      	ldr	r3, [pc, #108]	; (805e4 <main+0xe4>)
   80578:	4798      	blx	r3
   8057a:	4b1b      	ldr	r3, [pc, #108]	; (805e8 <main+0xe8>)
   8057c:	4798      	blx	r3
   8057e:	4601      	mov	r1, r0
   80580:	2000      	movs	r0, #0
   80582:	4b1a      	ldr	r3, [pc, #104]	; (805ec <main+0xec>)
   80584:	4798      	blx	r3
   80586:	b200      	sxth	r0, r0
   80588:	4b19      	ldr	r3, [pc, #100]	; (805f0 <main+0xf0>)
   8058a:	4798      	blx	r3
		delay_ms(20);
   8058c:	2014      	movs	r0, #20
   8058e:	4b19      	ldr	r3, [pc, #100]	; (805f4 <main+0xf4>)
   80590:	4798      	blx	r3
		printf("servo_ref: %u\n\r", servo_ref);
   80592:	2100      	movs	r1, #0
   80594:	4818      	ldr	r0, [pc, #96]	; (805f8 <main+0xf8>)
   80596:	4b0c      	ldr	r3, [pc, #48]	; (805c8 <main+0xc8>)
   80598:	4798      	blx	r3
   8059a:	e7ec      	b.n	80576 <main+0x76>
   8059c:	0008045d 	.word	0x0008045d
   805a0:	400e1a50 	.word	0x400e1a50
   805a4:	00080c41 	.word	0x00080c41
   805a8:	00143165 	.word	0x00143165
   805ac:	00080289 	.word	0x00080289
   805b0:	00080b49 	.word	0x00080b49
   805b4:	000803a1 	.word	0x000803a1
   805b8:	00080161 	.word	0x00080161
   805bc:	00080669 	.word	0x00080669
   805c0:	400e0e00 	.word	0x400e0e00
   805c4:	000814c4 	.word	0x000814c4
   805c8:	00080b25 	.word	0x00080b25
   805cc:	c57ff000 	.word	0xc57ff000
   805d0:	457ff000 	.word	0x457ff000
   805d4:	3ca3d70a 	.word	0x3ca3d70a
   805d8:	41200000 	.word	0x41200000
   805dc:	42c80000 	.word	0x42c80000
   805e0:	000807d1 	.word	0x000807d1
   805e4:	00080775 	.word	0x00080775
   805e8:	00080ea9 	.word	0x00080ea9
   805ec:	000807f5 	.word	0x000807f5
   805f0:	0008063d 	.word	0x0008063d
   805f4:	00080be1 	.word	0x00080be1
   805f8:	000814d4 	.word	0x000814d4

000805fc <enable_motor>:
	PMC->PMC_PCR = PMC_PCR_EN | ID_PIOC;
	PMC->PMC_PCER0 |= (0b1 << ID_PIOC);
}

void enable_motor(){
	set_bit(PIOD->PIO_SODR, 9);
   805fc:	4a02      	ldr	r2, [pc, #8]	; (80608 <enable_motor+0xc>)
   805fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80600:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   80604:	6313      	str	r3, [r2, #48]	; 0x30
   80606:	4770      	bx	lr
   80608:	400e1400 	.word	0x400e1400

0008060c <disable_motor>:
}

void disable_motor(){
	set_bit(PIOD->PIO_CODR, 9);
   8060c:	4a02      	ldr	r2, [pc, #8]	; (80618 <disable_motor+0xc>)
   8060e:	6b53      	ldr	r3, [r2, #52]	; 0x34
   80610:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   80614:	6353      	str	r3, [r2, #52]	; 0x34
   80616:	4770      	bx	lr
   80618:	400e1400 	.word	0x400e1400

0008061c <change_motor_direction>:
}

void change_motor_direction(MOTOR_DIRECTION direction){
	if(direction == LEFT){
   8061c:	b128      	cbz	r0, 8062a <change_motor_direction+0xe>
		set_bit(PIOD->PIO_CODR, 10);
	}
	else{
		set_bit(PIOD->PIO_SODR, 10);
   8061e:	4a06      	ldr	r2, [pc, #24]	; (80638 <change_motor_direction+0x1c>)
   80620:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80622:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
   80626:	6313      	str	r3, [r2, #48]	; 0x30
   80628:	4770      	bx	lr
		set_bit(PIOD->PIO_CODR, 10);
   8062a:	4a03      	ldr	r2, [pc, #12]	; (80638 <change_motor_direction+0x1c>)
   8062c:	6b53      	ldr	r3, [r2, #52]	; 0x34
   8062e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
   80632:	6353      	str	r3, [r2, #52]	; 0x34
   80634:	4770      	bx	lr
   80636:	bf00      	nop
   80638:	400e1400 	.word	0x400e1400

0008063c <change_motor_speed>:
	}
}

void change_motor_speed(int16_t speed){
   8063c:	b510      	push	{r4, lr}
	if(speed < 0){
   8063e:	1e04      	subs	r4, r0, #0
   80640:	db06      	blt.n	80650 <change_motor_speed+0x14>
		change_motor_direction(LEFT);
		dac_write(speed * -1);
	}
	else{
		change_motor_direction(RIGHT);
   80642:	2001      	movs	r0, #1
   80644:	4b06      	ldr	r3, [pc, #24]	; (80660 <change_motor_speed+0x24>)
   80646:	4798      	blx	r3
		dac_write(speed);
   80648:	b2a0      	uxth	r0, r4
   8064a:	4b06      	ldr	r3, [pc, #24]	; (80664 <change_motor_speed+0x28>)
   8064c:	4798      	blx	r3
   8064e:	bd10      	pop	{r4, pc}
		change_motor_direction(LEFT);
   80650:	2000      	movs	r0, #0
   80652:	4b03      	ldr	r3, [pc, #12]	; (80660 <change_motor_speed+0x24>)
   80654:	4798      	blx	r3
		dac_write(speed * -1);
   80656:	4260      	negs	r0, r4
   80658:	b280      	uxth	r0, r0
   8065a:	4b02      	ldr	r3, [pc, #8]	; (80664 <change_motor_speed+0x28>)
   8065c:	4798      	blx	r3
   8065e:	bd10      	pop	{r4, pc}
   80660:	0008061d 	.word	0x0008061d
   80664:	0008038d 	.word	0x0008038d

00080668 <motor_init>:
void motor_init(){
   80668:	b538      	push	{r3, r4, r5, lr}
	set_bit(PIOD->PIO_PER, 9);
   8066a:	4c34      	ldr	r4, [pc, #208]	; (8073c <motor_init+0xd4>)
   8066c:	6823      	ldr	r3, [r4, #0]
   8066e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   80672:	6023      	str	r3, [r4, #0]
	set_bit(PIOD->PIO_OER, 9);
   80674:	6923      	ldr	r3, [r4, #16]
   80676:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   8067a:	6123      	str	r3, [r4, #16]
	set_bit(PIOD->PIO_PER, 10);
   8067c:	6823      	ldr	r3, [r4, #0]
   8067e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
   80682:	6023      	str	r3, [r4, #0]
	set_bit(PIOD->PIO_OER, 10);
   80684:	6923      	ldr	r3, [r4, #16]
   80686:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
   8068a:	6123      	str	r3, [r4, #16]
	set_bit(PIOD->PIO_PER, 0);
   8068c:	6823      	ldr	r3, [r4, #0]
   8068e:	f043 0301 	orr.w	r3, r3, #1
   80692:	6023      	str	r3, [r4, #0]
	set_bit(PIOD->PIO_OER, 0);
   80694:	6923      	ldr	r3, [r4, #16]
   80696:	f043 0301 	orr.w	r3, r3, #1
   8069a:	6123      	str	r3, [r4, #16]
	set_bit(PIOD->PIO_SODR, 0);
   8069c:	6b23      	ldr	r3, [r4, #48]	; 0x30
   8069e:	f043 0301 	orr.w	r3, r3, #1
   806a2:	6323      	str	r3, [r4, #48]	; 0x30
	set_bit(PIOD->PIO_PER, 1);
   806a4:	6823      	ldr	r3, [r4, #0]
   806a6:	f043 0302 	orr.w	r3, r3, #2
   806aa:	6023      	str	r3, [r4, #0]
	set_bit(PIOD->PIO_OER, 1);
   806ac:	6923      	ldr	r3, [r4, #16]
   806ae:	f043 0302 	orr.w	r3, r3, #2
   806b2:	6123      	str	r3, [r4, #16]
	set_bit(PIOA->PIO_PER, 3);
   806b4:	4b22      	ldr	r3, [pc, #136]	; (80740 <motor_init+0xd8>)
   806b6:	681a      	ldr	r2, [r3, #0]
   806b8:	f042 0208 	orr.w	r2, r2, #8
   806bc:	601a      	str	r2, [r3, #0]
	set_bit(PIOA->PIO_OER, 3);
   806be:	691a      	ldr	r2, [r3, #16]
   806c0:	f042 0208 	orr.w	r2, r2, #8
   806c4:	611a      	str	r2, [r3, #16]
	set_bit(PIOA->PIO_SODR, 3);
   806c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   806c8:	f042 0208 	orr.w	r2, r2, #8
   806cc:	631a      	str	r2, [r3, #48]	; 0x30
	enable_motor();
   806ce:	4b1d      	ldr	r3, [pc, #116]	; (80744 <motor_init+0xdc>)
   806d0:	4798      	blx	r3
	change_motor_direction(RIGHT);
   806d2:	2001      	movs	r0, #1
   806d4:	4b1c      	ldr	r3, [pc, #112]	; (80748 <motor_init+0xe0>)
   806d6:	4798      	blx	r3
	change_motor_speed(1000);
   806d8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   806dc:	4d1b      	ldr	r5, [pc, #108]	; (8074c <motor_init+0xe4>)
   806de:	47a8      	blx	r5
	delay_ms(2000);
   806e0:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   806e4:	4b1a      	ldr	r3, [pc, #104]	; (80750 <motor_init+0xe8>)
   806e6:	4798      	blx	r3
	disable_motor();
   806e8:	4b1a      	ldr	r3, [pc, #104]	; (80754 <motor_init+0xec>)
   806ea:	4798      	blx	r3
	change_motor_speed(0);
   806ec:	2000      	movs	r0, #0
   806ee:	47a8      	blx	r5
	set_bit(PIOD->PIO_CODR, 1);
   806f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
   806f2:	f043 0302 	orr.w	r3, r3, #2
   806f6:	6363      	str	r3, [r4, #52]	; 0x34
	delay_us(20);
   806f8:	2014      	movs	r0, #20
   806fa:	4b17      	ldr	r3, [pc, #92]	; (80758 <motor_init+0xf0>)
   806fc:	4798      	blx	r3
	set_bit(PIOD->PIO_SODR, 1);
   806fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
   80700:	f043 0302 	orr.w	r3, r3, #2
   80704:	6323      	str	r3, [r4, #48]	; 0x30
	set_bit(PIOD->PIO_PER, 2);
   80706:	6823      	ldr	r3, [r4, #0]
   80708:	f043 0304 	orr.w	r3, r3, #4
   8070c:	6023      	str	r3, [r4, #0]
	set_bit(PIOD->PIO_OER, 2);
   8070e:	6923      	ldr	r3, [r4, #16]
   80710:	f043 0304 	orr.w	r3, r3, #4
   80714:	6123      	str	r3, [r4, #16]
	PIOC->PIO_PER |= ENCODER_DATA_MASK;
   80716:	4b11      	ldr	r3, [pc, #68]	; (8075c <motor_init+0xf4>)
   80718:	681a      	ldr	r2, [r3, #0]
   8071a:	f442 72ff 	orr.w	r2, r2, #510	; 0x1fe
   8071e:	601a      	str	r2, [r3, #0]
	PIOC->PIO_ODR |= ENCODER_DATA_MASK;
   80720:	695a      	ldr	r2, [r3, #20]
   80722:	f442 72ff 	orr.w	r2, r2, #510	; 0x1fe
   80726:	615a      	str	r2, [r3, #20]
	PMC->PMC_PCR = PMC_PCR_EN | ID_PIOC;
   80728:	f5a3 6340 	sub.w	r3, r3, #3072	; 0xc00
   8072c:	4a0c      	ldr	r2, [pc, #48]	; (80760 <motor_init+0xf8>)
   8072e:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCER0 |= (0b1 << ID_PIOC);
   80732:	691a      	ldr	r2, [r3, #16]
   80734:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80738:	611a      	str	r2, [r3, #16]
   8073a:	bd38      	pop	{r3, r4, r5, pc}
   8073c:	400e1400 	.word	0x400e1400
   80740:	400e0e00 	.word	0x400e0e00
   80744:	000805fd 	.word	0x000805fd
   80748:	0008061d 	.word	0x0008061d
   8074c:	0008063d 	.word	0x0008063d
   80750:	00080be1 	.word	0x00080be1
   80754:	0008060d 	.word	0x0008060d
   80758:	00080c01 	.word	0x00080c01
   8075c:	400e1200 	.word	0x400e1200
   80760:	1000000d 	.word	0x1000000d

00080764 <MJ2_read>:
	
	return result;
}

char MJ2_read(){
	uint32_t inter = PIOC->PIO_PDSR;
   80764:	4b02      	ldr	r3, [pc, #8]	; (80770 <MJ2_read+0xc>)
   80766:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
	
	inter >>= 1;
	
	return (char)inter;
}
   80768:	f3c0 0047 	ubfx	r0, r0, #1, #8
   8076c:	4770      	bx	lr
   8076e:	bf00      	nop
   80770:	400e1200 	.word	0x400e1200

00080774 <get_motor_position>:
int16_t get_motor_position(){
   80774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	set_bit(PIOD->PIO_CODR, 0);
   80776:	4c0f      	ldr	r4, [pc, #60]	; (807b4 <get_motor_position+0x40>)
   80778:	6b63      	ldr	r3, [r4, #52]	; 0x34
   8077a:	f043 0301 	orr.w	r3, r3, #1
   8077e:	6363      	str	r3, [r4, #52]	; 0x34
	set_bit(PIOD->PIO_CODR, 2);
   80780:	6b63      	ldr	r3, [r4, #52]	; 0x34
   80782:	f043 0304 	orr.w	r3, r3, #4
   80786:	6363      	str	r3, [r4, #52]	; 0x34
	delay_us(20);
   80788:	2014      	movs	r0, #20
   8078a:	4f0b      	ldr	r7, [pc, #44]	; (807b8 <get_motor_position+0x44>)
   8078c:	47b8      	blx	r7
	result |= (MJ2_read() << 8);
   8078e:	4e0b      	ldr	r6, [pc, #44]	; (807bc <get_motor_position+0x48>)
   80790:	47b0      	blx	r6
   80792:	0200      	lsls	r0, r0, #8
   80794:	b205      	sxth	r5, r0
	set_bit(PIOD->PIO_SODR, 2);
   80796:	6b23      	ldr	r3, [r4, #48]	; 0x30
   80798:	f043 0304 	orr.w	r3, r3, #4
   8079c:	6323      	str	r3, [r4, #48]	; 0x30
	delay_us(20);
   8079e:	2014      	movs	r0, #20
   807a0:	47b8      	blx	r7
	result |= MJ2_read();
   807a2:	47b0      	blx	r6
   807a4:	b200      	sxth	r0, r0
	set_bit(PIOD->PIO_SODR, 0);
   807a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
   807a8:	f043 0301 	orr.w	r3, r3, #1
   807ac:	6323      	str	r3, [r4, #48]	; 0x30
}
   807ae:	4328      	orrs	r0, r5
   807b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   807b2:	bf00      	nop
   807b4:	400e1400 	.word	0x400e1400
   807b8:	00080c01 	.word	0x00080c01
   807bc:	00080765 	.word	0x00080765

000807c0 <PID_controller_reset_error>:
	PID.min_output = min_output;
	
}

void PID_controller_reset_error(){
	PID.previous_error = 0;
   807c0:	4b02      	ldr	r3, [pc, #8]	; (807cc <PID_controller_reset_error+0xc>)
   807c2:	2200      	movs	r2, #0
   807c4:	611a      	str	r2, [r3, #16]
	PID.sum_error = 0;
   807c6:	615a      	str	r2, [r3, #20]
   807c8:	4770      	bx	lr
   807ca:	bf00      	nop
   807cc:	20000450 	.word	0x20000450

000807d0 <PID_controller_init>:
void PID_controller_init(float k_p, float k_i, float k_d, float period, float max_output, float min_output){
   807d0:	b538      	push	{r3, r4, r5, lr}
   807d2:	461d      	mov	r5, r3
	PID.k_p =k_p;
   807d4:	4c05      	ldr	r4, [pc, #20]	; (807ec <PID_controller_init+0x1c>)
   807d6:	6020      	str	r0, [r4, #0]
	PID.k_i =k_i;
   807d8:	6061      	str	r1, [r4, #4]
	PID.k_d =k_d;
   807da:	60a2      	str	r2, [r4, #8]
	PID_controller_reset_error();
   807dc:	4b04      	ldr	r3, [pc, #16]	; (807f0 <PID_controller_init+0x20>)
   807de:	4798      	blx	r3
	PID.period = period;
   807e0:	60e5      	str	r5, [r4, #12]
	PID.max_output = max_output;
   807e2:	9b04      	ldr	r3, [sp, #16]
   807e4:	61a3      	str	r3, [r4, #24]
	PID.min_output = min_output;
   807e6:	9b05      	ldr	r3, [sp, #20]
   807e8:	61e3      	str	r3, [r4, #28]
   807ea:	bd38      	pop	{r3, r4, r5, pc}
   807ec:	20000450 	.word	0x20000450
   807f0:	000807c1 	.word	0x000807c1

000807f4 <PID_controller>:
}

int PID_controller( float referance, float current_value){
   807f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	float error = referance - current_value;
   807f8:	f8df 8094 	ldr.w	r8, [pc, #148]	; 80890 <PID_controller+0x9c>
   807fc:	47c0      	blx	r8
   807fe:	4606      	mov	r6, r0
	PID.sum_error += error;
   80800:	4c1c      	ldr	r4, [pc, #112]	; (80874 <PID_controller+0x80>)
   80802:	4f1d      	ldr	r7, [pc, #116]	; (80878 <PID_controller+0x84>)
   80804:	6961      	ldr	r1, [r4, #20]
   80806:	47b8      	blx	r7
   80808:	4682      	mov	sl, r0
   8080a:	6160      	str	r0, [r4, #20]
	
	float u_p = PID.k_p*error;
   8080c:	4d1b      	ldr	r5, [pc, #108]	; (8087c <PID_controller+0x88>)
   8080e:	6821      	ldr	r1, [r4, #0]
   80810:	4630      	mov	r0, r6
   80812:	47a8      	blx	r5
   80814:	4683      	mov	fp, r0
	float u_i = PID.k_i * PID.period * PID.sum_error;
   80816:	f8d4 900c 	ldr.w	r9, [r4, #12]
   8081a:	4649      	mov	r1, r9
   8081c:	6860      	ldr	r0, [r4, #4]
   8081e:	47a8      	blx	r5
   80820:	4601      	mov	r1, r0
   80822:	4650      	mov	r0, sl
   80824:	47a8      	blx	r5
   80826:	4682      	mov	sl, r0
	float u_d = (PID.k_d/PID.period)*(error-PID.previous_error);
   80828:	4649      	mov	r1, r9
   8082a:	68a0      	ldr	r0, [r4, #8]
   8082c:	4b14      	ldr	r3, [pc, #80]	; (80880 <PID_controller+0x8c>)
   8082e:	4798      	blx	r3
   80830:	4681      	mov	r9, r0
   80832:	6921      	ldr	r1, [r4, #16]
   80834:	4630      	mov	r0, r6
   80836:	47c0      	blx	r8
   80838:	4601      	mov	r1, r0
   8083a:	4648      	mov	r0, r9
   8083c:	47a8      	blx	r5
   8083e:	4605      	mov	r5, r0
	
	float u = u_p + u_i + u_d;
   80840:	4651      	mov	r1, sl
   80842:	4658      	mov	r0, fp
   80844:	47b8      	blx	r7
   80846:	4601      	mov	r1, r0
   80848:	4628      	mov	r0, r5
   8084a:	47b8      	blx	r7
   8084c:	4605      	mov	r5, r0
	
	PID.previous_error = error;
   8084e:	6126      	str	r6, [r4, #16]
	
	if ( u > PID.max_output){
   80850:	69a1      	ldr	r1, [r4, #24]
   80852:	4b0c      	ldr	r3, [pc, #48]	; (80884 <PID_controller+0x90>)
   80854:	4798      	blx	r3
   80856:	b930      	cbnz	r0, 80866 <PID_controller+0x72>
		u =0;
	}
	else if (u < PID.min_output){
   80858:	69e1      	ldr	r1, [r4, #28]
   8085a:	4628      	mov	r0, r5
   8085c:	4b0a      	ldr	r3, [pc, #40]	; (80888 <PID_controller+0x94>)
   8085e:	4798      	blx	r3
   80860:	b110      	cbz	r0, 80868 <PID_controller+0x74>
		u =0;
   80862:	2500      	movs	r5, #0
   80864:	e000      	b.n	80868 <PID_controller+0x74>
		u =0;
   80866:	2500      	movs	r5, #0
	}
	return (int) u;
   80868:	4628      	mov	r0, r5
   8086a:	4b08      	ldr	r3, [pc, #32]	; (8088c <PID_controller+0x98>)
   8086c:	4798      	blx	r3
   8086e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80872:	bf00      	nop
   80874:	20000450 	.word	0x20000450
   80878:	00080d41 	.word	0x00080d41
   8087c:	00080f51 	.word	0x00080f51
   80880:	000810b9 	.word	0x000810b9
   80884:	000812c9 	.word	0x000812c9
   80888:	0008128d 	.word	0x0008128d
   8088c:	000812dd 	.word	0x000812dd
   80890:	00080d3d 	.word	0x00080d3d

00080894 <printchar>:
   80894:	b508      	push	{r3, lr}
   80896:	b2c8      	uxtb	r0, r1
   80898:	4b01      	ldr	r3, [pc, #4]	; (808a0 <printchar+0xc>)
   8089a:	4798      	blx	r3
   8089c:	bd08      	pop	{r3, pc}
   8089e:	bf00      	nop
   808a0:	00080ca9 	.word	0x00080ca9

000808a4 <prints>:
   808a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   808a8:	4607      	mov	r7, r0
   808aa:	460e      	mov	r6, r1
   808ac:	1e15      	subs	r5, r2, #0
   808ae:	dd02      	ble.n	808b6 <prints+0x12>
   808b0:	460a      	mov	r2, r1
   808b2:	2100      	movs	r1, #0
   808b4:	e004      	b.n	808c0 <prints+0x1c>
   808b6:	f04f 0820 	mov.w	r8, #32
   808ba:	e00e      	b.n	808da <prints+0x36>
   808bc:	3101      	adds	r1, #1
   808be:	3201      	adds	r2, #1
   808c0:	7810      	ldrb	r0, [r2, #0]
   808c2:	2800      	cmp	r0, #0
   808c4:	d1fa      	bne.n	808bc <prints+0x18>
   808c6:	42a9      	cmp	r1, r5
   808c8:	da01      	bge.n	808ce <prints+0x2a>
   808ca:	1a6d      	subs	r5, r5, r1
   808cc:	e000      	b.n	808d0 <prints+0x2c>
   808ce:	2500      	movs	r5, #0
   808d0:	f013 0f02 	tst.w	r3, #2
   808d4:	d106      	bne.n	808e4 <prints+0x40>
   808d6:	f04f 0820 	mov.w	r8, #32
   808da:	f013 0401 	ands.w	r4, r3, #1
   808de:	d00a      	beq.n	808f6 <prints+0x52>
   808e0:	2400      	movs	r4, #0
   808e2:	e010      	b.n	80906 <prints+0x62>
   808e4:	f04f 0830 	mov.w	r8, #48	; 0x30
   808e8:	e7f7      	b.n	808da <prints+0x36>
   808ea:	4641      	mov	r1, r8
   808ec:	4638      	mov	r0, r7
   808ee:	4b0d      	ldr	r3, [pc, #52]	; (80924 <prints+0x80>)
   808f0:	4798      	blx	r3
   808f2:	3401      	adds	r4, #1
   808f4:	3d01      	subs	r5, #1
   808f6:	2d00      	cmp	r5, #0
   808f8:	dcf7      	bgt.n	808ea <prints+0x46>
   808fa:	e004      	b.n	80906 <prints+0x62>
   808fc:	4638      	mov	r0, r7
   808fe:	4b09      	ldr	r3, [pc, #36]	; (80924 <prints+0x80>)
   80900:	4798      	blx	r3
   80902:	3401      	adds	r4, #1
   80904:	3601      	adds	r6, #1
   80906:	7831      	ldrb	r1, [r6, #0]
   80908:	2900      	cmp	r1, #0
   8090a:	d1f7      	bne.n	808fc <prints+0x58>
   8090c:	e005      	b.n	8091a <prints+0x76>
   8090e:	4641      	mov	r1, r8
   80910:	4638      	mov	r0, r7
   80912:	4b04      	ldr	r3, [pc, #16]	; (80924 <prints+0x80>)
   80914:	4798      	blx	r3
   80916:	3401      	adds	r4, #1
   80918:	3d01      	subs	r5, #1
   8091a:	2d00      	cmp	r5, #0
   8091c:	dcf7      	bgt.n	8090e <prints+0x6a>
   8091e:	4620      	mov	r0, r4
   80920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80924:	00080895 	.word	0x00080895

00080928 <printi>:
   80928:	b5f0      	push	{r4, r5, r6, r7, lr}
   8092a:	b085      	sub	sp, #20
   8092c:	4607      	mov	r7, r0
   8092e:	980c      	ldr	r0, [sp, #48]	; 0x30
   80930:	b151      	cbz	r1, 80948 <printi+0x20>
   80932:	461e      	mov	r6, r3
   80934:	460c      	mov	r4, r1
   80936:	b113      	cbz	r3, 8093e <printi+0x16>
   80938:	2a0a      	cmp	r2, #10
   8093a:	d012      	beq.n	80962 <printi+0x3a>
   8093c:	2600      	movs	r6, #0
   8093e:	ad04      	add	r5, sp, #16
   80940:	2300      	movs	r3, #0
   80942:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80946:	e018      	b.n	8097a <printi+0x52>
   80948:	2330      	movs	r3, #48	; 0x30
   8094a:	f88d 3004 	strb.w	r3, [sp, #4]
   8094e:	2300      	movs	r3, #0
   80950:	f88d 3005 	strb.w	r3, [sp, #5]
   80954:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80956:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80958:	a901      	add	r1, sp, #4
   8095a:	4638      	mov	r0, r7
   8095c:	4c1b      	ldr	r4, [pc, #108]	; (809cc <printi+0xa4>)
   8095e:	47a0      	blx	r4
   80960:	e029      	b.n	809b6 <printi+0x8e>
   80962:	2900      	cmp	r1, #0
   80964:	db01      	blt.n	8096a <printi+0x42>
   80966:	2600      	movs	r6, #0
   80968:	e7e9      	b.n	8093e <printi+0x16>
   8096a:	424c      	negs	r4, r1
   8096c:	2601      	movs	r6, #1
   8096e:	e7e6      	b.n	8093e <printi+0x16>
   80970:	3330      	adds	r3, #48	; 0x30
   80972:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80976:	fbb4 f4f2 	udiv	r4, r4, r2
   8097a:	b14c      	cbz	r4, 80990 <printi+0x68>
   8097c:	fbb4 f3f2 	udiv	r3, r4, r2
   80980:	fb02 4313 	mls	r3, r2, r3, r4
   80984:	2b09      	cmp	r3, #9
   80986:	ddf3      	ble.n	80970 <printi+0x48>
   80988:	f1a0 013a 	sub.w	r1, r0, #58	; 0x3a
   8098c:	440b      	add	r3, r1
   8098e:	e7ef      	b.n	80970 <printi+0x48>
   80990:	b156      	cbz	r6, 809a8 <printi+0x80>
   80992:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80994:	b11b      	cbz	r3, 8099e <printi+0x76>
   80996:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80998:	f013 0f02 	tst.w	r3, #2
   8099c:	d10d      	bne.n	809ba <printi+0x92>
   8099e:	232d      	movs	r3, #45	; 0x2d
   809a0:	f805 3c01 	strb.w	r3, [r5, #-1]
   809a4:	3d01      	subs	r5, #1
   809a6:	2600      	movs	r6, #0
   809a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   809aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   809ac:	4629      	mov	r1, r5
   809ae:	4638      	mov	r0, r7
   809b0:	4c06      	ldr	r4, [pc, #24]	; (809cc <printi+0xa4>)
   809b2:	47a0      	blx	r4
   809b4:	4430      	add	r0, r6
   809b6:	b005      	add	sp, #20
   809b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   809ba:	212d      	movs	r1, #45	; 0x2d
   809bc:	4638      	mov	r0, r7
   809be:	4b04      	ldr	r3, [pc, #16]	; (809d0 <printi+0xa8>)
   809c0:	4798      	blx	r3
   809c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   809c4:	3b01      	subs	r3, #1
   809c6:	930a      	str	r3, [sp, #40]	; 0x28
   809c8:	e7ee      	b.n	809a8 <printi+0x80>
   809ca:	bf00      	nop
   809cc:	000808a5 	.word	0x000808a5
   809d0:	00080895 	.word	0x00080895

000809d4 <print>:
   809d4:	b5f0      	push	{r4, r5, r6, r7, lr}
   809d6:	b089      	sub	sp, #36	; 0x24
   809d8:	4606      	mov	r6, r0
   809da:	460c      	mov	r4, r1
   809dc:	9205      	str	r2, [sp, #20]
   809de:	2500      	movs	r5, #0
   809e0:	e081      	b.n	80ae6 <print+0x112>
   809e2:	1ca2      	adds	r2, r4, #2
   809e4:	2301      	movs	r3, #1
   809e6:	e08b      	b.n	80b00 <print+0x12c>
   809e8:	3401      	adds	r4, #1
   809ea:	f043 0302 	orr.w	r3, r3, #2
   809ee:	7822      	ldrb	r2, [r4, #0]
   809f0:	2a30      	cmp	r2, #48	; 0x30
   809f2:	d0f9      	beq.n	809e8 <print+0x14>
   809f4:	2200      	movs	r2, #0
   809f6:	e006      	b.n	80a06 <print+0x32>
   809f8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   809fc:	0050      	lsls	r0, r2, #1
   809fe:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   80a02:	4402      	add	r2, r0
   80a04:	3401      	adds	r4, #1
   80a06:	7821      	ldrb	r1, [r4, #0]
   80a08:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   80a0c:	b2c0      	uxtb	r0, r0
   80a0e:	2809      	cmp	r0, #9
   80a10:	d9f2      	bls.n	809f8 <print+0x24>
   80a12:	2973      	cmp	r1, #115	; 0x73
   80a14:	d018      	beq.n	80a48 <print+0x74>
   80a16:	2964      	cmp	r1, #100	; 0x64
   80a18:	d022      	beq.n	80a60 <print+0x8c>
   80a1a:	2978      	cmp	r1, #120	; 0x78
   80a1c:	d02f      	beq.n	80a7e <print+0xaa>
   80a1e:	2958      	cmp	r1, #88	; 0x58
   80a20:	d03c      	beq.n	80a9c <print+0xc8>
   80a22:	2975      	cmp	r1, #117	; 0x75
   80a24:	d049      	beq.n	80aba <print+0xe6>
   80a26:	2963      	cmp	r1, #99	; 0x63
   80a28:	d15c      	bne.n	80ae4 <print+0x110>
   80a2a:	9905      	ldr	r1, [sp, #20]
   80a2c:	1d08      	adds	r0, r1, #4
   80a2e:	9005      	str	r0, [sp, #20]
   80a30:	7809      	ldrb	r1, [r1, #0]
   80a32:	f88d 101c 	strb.w	r1, [sp, #28]
   80a36:	2100      	movs	r1, #0
   80a38:	f88d 101d 	strb.w	r1, [sp, #29]
   80a3c:	a907      	add	r1, sp, #28
   80a3e:	4630      	mov	r0, r6
   80a40:	4f34      	ldr	r7, [pc, #208]	; (80b14 <print+0x140>)
   80a42:	47b8      	blx	r7
   80a44:	4405      	add	r5, r0
   80a46:	e04d      	b.n	80ae4 <print+0x110>
   80a48:	9905      	ldr	r1, [sp, #20]
   80a4a:	1d08      	adds	r0, r1, #4
   80a4c:	9005      	str	r0, [sp, #20]
   80a4e:	6809      	ldr	r1, [r1, #0]
   80a50:	b121      	cbz	r1, 80a5c <print+0x88>
   80a52:	4630      	mov	r0, r6
   80a54:	4f2f      	ldr	r7, [pc, #188]	; (80b14 <print+0x140>)
   80a56:	47b8      	blx	r7
   80a58:	4405      	add	r5, r0
   80a5a:	e043      	b.n	80ae4 <print+0x110>
   80a5c:	492e      	ldr	r1, [pc, #184]	; (80b18 <print+0x144>)
   80a5e:	e7f8      	b.n	80a52 <print+0x7e>
   80a60:	9905      	ldr	r1, [sp, #20]
   80a62:	1d08      	adds	r0, r1, #4
   80a64:	9005      	str	r0, [sp, #20]
   80a66:	6809      	ldr	r1, [r1, #0]
   80a68:	2061      	movs	r0, #97	; 0x61
   80a6a:	9002      	str	r0, [sp, #8]
   80a6c:	9301      	str	r3, [sp, #4]
   80a6e:	9200      	str	r2, [sp, #0]
   80a70:	2301      	movs	r3, #1
   80a72:	220a      	movs	r2, #10
   80a74:	4630      	mov	r0, r6
   80a76:	4f29      	ldr	r7, [pc, #164]	; (80b1c <print+0x148>)
   80a78:	47b8      	blx	r7
   80a7a:	4405      	add	r5, r0
   80a7c:	e032      	b.n	80ae4 <print+0x110>
   80a7e:	9905      	ldr	r1, [sp, #20]
   80a80:	1d08      	adds	r0, r1, #4
   80a82:	9005      	str	r0, [sp, #20]
   80a84:	6809      	ldr	r1, [r1, #0]
   80a86:	2061      	movs	r0, #97	; 0x61
   80a88:	9002      	str	r0, [sp, #8]
   80a8a:	9301      	str	r3, [sp, #4]
   80a8c:	9200      	str	r2, [sp, #0]
   80a8e:	2300      	movs	r3, #0
   80a90:	2210      	movs	r2, #16
   80a92:	4630      	mov	r0, r6
   80a94:	4f21      	ldr	r7, [pc, #132]	; (80b1c <print+0x148>)
   80a96:	47b8      	blx	r7
   80a98:	4405      	add	r5, r0
   80a9a:	e023      	b.n	80ae4 <print+0x110>
   80a9c:	9905      	ldr	r1, [sp, #20]
   80a9e:	1d08      	adds	r0, r1, #4
   80aa0:	9005      	str	r0, [sp, #20]
   80aa2:	6809      	ldr	r1, [r1, #0]
   80aa4:	2041      	movs	r0, #65	; 0x41
   80aa6:	9002      	str	r0, [sp, #8]
   80aa8:	9301      	str	r3, [sp, #4]
   80aaa:	9200      	str	r2, [sp, #0]
   80aac:	2300      	movs	r3, #0
   80aae:	2210      	movs	r2, #16
   80ab0:	4630      	mov	r0, r6
   80ab2:	4f1a      	ldr	r7, [pc, #104]	; (80b1c <print+0x148>)
   80ab4:	47b8      	blx	r7
   80ab6:	4405      	add	r5, r0
   80ab8:	e014      	b.n	80ae4 <print+0x110>
   80aba:	9905      	ldr	r1, [sp, #20]
   80abc:	1d08      	adds	r0, r1, #4
   80abe:	9005      	str	r0, [sp, #20]
   80ac0:	6809      	ldr	r1, [r1, #0]
   80ac2:	2061      	movs	r0, #97	; 0x61
   80ac4:	9002      	str	r0, [sp, #8]
   80ac6:	9301      	str	r3, [sp, #4]
   80ac8:	9200      	str	r2, [sp, #0]
   80aca:	2300      	movs	r3, #0
   80acc:	220a      	movs	r2, #10
   80ace:	4630      	mov	r0, r6
   80ad0:	4f12      	ldr	r7, [pc, #72]	; (80b1c <print+0x148>)
   80ad2:	47b8      	blx	r7
   80ad4:	4405      	add	r5, r0
   80ad6:	e005      	b.n	80ae4 <print+0x110>
   80ad8:	4614      	mov	r4, r2
   80ada:	7821      	ldrb	r1, [r4, #0]
   80adc:	4630      	mov	r0, r6
   80ade:	4b10      	ldr	r3, [pc, #64]	; (80b20 <print+0x14c>)
   80ae0:	4798      	blx	r3
   80ae2:	3501      	adds	r5, #1
   80ae4:	3401      	adds	r4, #1
   80ae6:	7823      	ldrb	r3, [r4, #0]
   80ae8:	b163      	cbz	r3, 80b04 <print+0x130>
   80aea:	2b25      	cmp	r3, #37	; 0x25
   80aec:	d1f5      	bne.n	80ada <print+0x106>
   80aee:	1c62      	adds	r2, r4, #1
   80af0:	7863      	ldrb	r3, [r4, #1]
   80af2:	b13b      	cbz	r3, 80b04 <print+0x130>
   80af4:	2b25      	cmp	r3, #37	; 0x25
   80af6:	d0ef      	beq.n	80ad8 <print+0x104>
   80af8:	2b2d      	cmp	r3, #45	; 0x2d
   80afa:	f43f af72 	beq.w	809e2 <print+0xe>
   80afe:	2300      	movs	r3, #0
   80b00:	4614      	mov	r4, r2
   80b02:	e774      	b.n	809ee <print+0x1a>
   80b04:	b116      	cbz	r6, 80b0c <print+0x138>
   80b06:	6833      	ldr	r3, [r6, #0]
   80b08:	2200      	movs	r2, #0
   80b0a:	701a      	strb	r2, [r3, #0]
   80b0c:	4628      	mov	r0, r5
   80b0e:	b009      	add	sp, #36	; 0x24
   80b10:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80b12:	bf00      	nop
   80b14:	000808a5 	.word	0x000808a5
   80b18:	000814e4 	.word	0x000814e4
   80b1c:	00080929 	.word	0x00080929
   80b20:	00080895 	.word	0x00080895

00080b24 <printf>:
   80b24:	b40f      	push	{r0, r1, r2, r3}
   80b26:	b500      	push	{lr}
   80b28:	b083      	sub	sp, #12
   80b2a:	aa04      	add	r2, sp, #16
   80b2c:	f852 1b04 	ldr.w	r1, [r2], #4
   80b30:	9201      	str	r2, [sp, #4]
   80b32:	2000      	movs	r0, #0
   80b34:	4b03      	ldr	r3, [pc, #12]	; (80b44 <printf+0x20>)
   80b36:	4798      	blx	r3
   80b38:	b003      	add	sp, #12
   80b3a:	f85d eb04 	ldr.w	lr, [sp], #4
   80b3e:	b004      	add	sp, #16
   80b40:	4770      	bx	lr
   80b42:	bf00      	nop
   80b44:	000809d5 	.word	0x000809d5

00080b48 <pwm_init>:
   80b48:	4a15      	ldr	r2, [pc, #84]	; (80ba0 <pwm_init+0x58>)
   80b4a:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80b4e:	f043 0310 	orr.w	r3, r3, #16
   80b52:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   80b56:	4b12      	ldr	r3, [pc, #72]	; (80ba0 <pwm_init+0x58>)
   80b58:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   80b5c:	f013 0f10 	tst.w	r3, #16
   80b60:	d0f9      	beq.n	80b56 <pwm_init+0xe>
   80b62:	4b10      	ldr	r3, [pc, #64]	; (80ba4 <pwm_init+0x5c>)
   80b64:	685a      	ldr	r2, [r3, #4]
   80b66:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80b6a:	605a      	str	r2, [r3, #4]
   80b6c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80b6e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80b72:	671a      	str	r2, [r3, #112]	; 0x70
   80b74:	4b0c      	ldr	r3, [pc, #48]	; (80ba8 <pwm_init+0x60>)
   80b76:	222a      	movs	r2, #42	; 0x2a
   80b78:	601a      	str	r2, [r3, #0]
   80b7a:	220b      	movs	r2, #11
   80b7c:	f8c3 22a0 	str.w	r2, [r3, #672]	; 0x2a0
   80b80:	f649 4240 	movw	r2, #40000	; 0x9c40
   80b84:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
   80b88:	6a1a      	ldr	r2, [r3, #32]
   80b8a:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
   80b8e:	621a      	str	r2, [r3, #32]
   80b90:	f249 0288 	movw	r2, #37000	; 0x9088
   80b94:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
   80b98:	2220      	movs	r2, #32
   80b9a:	605a      	str	r2, [r3, #4]
   80b9c:	4770      	bx	lr
   80b9e:	bf00      	nop
   80ba0:	400e0600 	.word	0x400e0600
   80ba4:	400e1200 	.word	0x400e1200
   80ba8:	40094000 	.word	0x40094000

00080bac <SysTick_init_us>:
#include "timer.h"

volatile uint32_t wait = 0;

static void SysTick_init_us(uint16_t period){
	SysTick->LOAD = ((period * 84) & SysTick_LOAD_RELOAD_Msk) - 1;
   80bac:	2354      	movs	r3, #84	; 0x54
   80bae:	fb03 f000 	mul.w	r0, r3, r0
   80bb2:	3801      	subs	r0, #1
   80bb4:	4b08      	ldr	r3, [pc, #32]	; (80bd8 <SysTick_init_us+0x2c>)
   80bb6:	6058      	str	r0, [r3, #4]
	
	SysTick->VAL = 0;
   80bb8:	2200      	movs	r2, #0
   80bba:	609a      	str	r2, [r3, #8]
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   80bbc:	4907      	ldr	r1, [pc, #28]	; (80bdc <SysTick_init_us+0x30>)
   80bbe:	f881 2023 	strb.w	r2, [r1, #35]	; 0x23
	
	NVIC_SetPriority(SysTick_IRQn, IRQ_priority_SysTick);
	
	SysTick->CTRL = (1 << SysTick_CTRL_CLKSOURCE_Pos) & SysTick_CTRL_CLKSOURCE_Msk;
   80bc2:	2204      	movs	r2, #4
   80bc4:	601a      	str	r2, [r3, #0]
	SysTick->CTRL |= (1 << SysTick_CTRL_TICKINT_Pos) & SysTick_CTRL_TICKINT_Msk;
   80bc6:	681a      	ldr	r2, [r3, #0]
   80bc8:	f042 0202 	orr.w	r2, r2, #2
   80bcc:	601a      	str	r2, [r3, #0]
	SysTick->CTRL |= (1 << SysTick_CTRL_ENABLE_Pos) & SysTick_CTRL_ENABLE_Msk;
   80bce:	681a      	ldr	r2, [r3, #0]
   80bd0:	f042 0201 	orr.w	r2, r2, #1
   80bd4:	601a      	str	r2, [r3, #0]
   80bd6:	4770      	bx	lr
   80bd8:	e000e010 	.word	0xe000e010
   80bdc:	e000ed00 	.word	0xe000ed00

00080be0 <delay_ms>:
	
}

void delay_ms(uint16_t ms){
   80be0:	b508      	push	{r3, lr}
	wait = ms;
   80be2:	4b05      	ldr	r3, [pc, #20]	; (80bf8 <delay_ms+0x18>)
   80be4:	6018      	str	r0, [r3, #0]
	SysTick_init_us(1000);
   80be6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   80bea:	4b04      	ldr	r3, [pc, #16]	; (80bfc <delay_ms+0x1c>)
   80bec:	4798      	blx	r3
	while(wait){
   80bee:	4b02      	ldr	r3, [pc, #8]	; (80bf8 <delay_ms+0x18>)
   80bf0:	681b      	ldr	r3, [r3, #0]
   80bf2:	2b00      	cmp	r3, #0
   80bf4:	d1fb      	bne.n	80bee <delay_ms+0xe>
		
	}
}
   80bf6:	bd08      	pop	{r3, pc}
   80bf8:	20000470 	.word	0x20000470
   80bfc:	00080bad 	.word	0x00080bad

00080c00 <delay_us>:

void delay_us(uint16_t us){
   80c00:	b508      	push	{r3, lr}
	wait = us;
   80c02:	4b05      	ldr	r3, [pc, #20]	; (80c18 <delay_us+0x18>)
   80c04:	6018      	str	r0, [r3, #0]
	SysTick_init_us(1);
   80c06:	2001      	movs	r0, #1
   80c08:	4b04      	ldr	r3, [pc, #16]	; (80c1c <delay_us+0x1c>)
   80c0a:	4798      	blx	r3
	while(wait){
   80c0c:	4b02      	ldr	r3, [pc, #8]	; (80c18 <delay_us+0x18>)
   80c0e:	681b      	ldr	r3, [r3, #0]
   80c10:	2b00      	cmp	r3, #0
   80c12:	d1fb      	bne.n	80c0c <delay_us+0xc>
		
	}
}
   80c14:	bd08      	pop	{r3, pc}
   80c16:	bf00      	nop
   80c18:	20000470 	.word	0x20000470
   80c1c:	00080bad 	.word	0x00080bad

00080c20 <SysTick_Handler>:

void SysTick_Handler(){
	if(wait){
   80c20:	4b05      	ldr	r3, [pc, #20]	; (80c38 <SysTick_Handler+0x18>)
   80c22:	681b      	ldr	r3, [r3, #0]
   80c24:	b91b      	cbnz	r3, 80c2e <SysTick_Handler+0xe>
		wait--;
	}
	else{
		SysTick->CTRL = 0;
   80c26:	2200      	movs	r2, #0
   80c28:	4b04      	ldr	r3, [pc, #16]	; (80c3c <SysTick_Handler+0x1c>)
   80c2a:	601a      	str	r2, [r3, #0]
   80c2c:	4770      	bx	lr
		wait--;
   80c2e:	4a02      	ldr	r2, [pc, #8]	; (80c38 <SysTick_Handler+0x18>)
   80c30:	6813      	ldr	r3, [r2, #0]
   80c32:	3b01      	subs	r3, #1
   80c34:	6013      	str	r3, [r2, #0]
   80c36:	4770      	bx	lr
   80c38:	20000470 	.word	0x20000470
   80c3c:	e000e010 	.word	0xe000e010

00080c40 <configure_uart>:
   80c40:	4b16      	ldr	r3, [pc, #88]	; (80c9c <configure_uart+0x5c>)
   80c42:	2200      	movs	r2, #0
   80c44:	701a      	strb	r2, [r3, #0]
   80c46:	705a      	strb	r2, [r3, #1]
   80c48:	4b15      	ldr	r3, [pc, #84]	; (80ca0 <configure_uart+0x60>)
   80c4a:	f44f 7140 	mov.w	r1, #768	; 0x300
   80c4e:	6459      	str	r1, [r3, #68]	; 0x44
   80c50:	6059      	str	r1, [r3, #4]
   80c52:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80c54:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80c56:	4002      	ands	r2, r0
   80c58:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80c5c:	671a      	str	r2, [r3, #112]	; 0x70
   80c5e:	6659      	str	r1, [r3, #100]	; 0x64
   80c60:	f44f 7280 	mov.w	r2, #256	; 0x100
   80c64:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80c68:	611a      	str	r2, [r3, #16]
   80c6a:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80c6e:	21ac      	movs	r1, #172	; 0xac
   80c70:	6019      	str	r1, [r3, #0]
   80c72:	f240 2123 	movw	r1, #547	; 0x223
   80c76:	6219      	str	r1, [r3, #32]
   80c78:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80c7c:	6059      	str	r1, [r3, #4]
   80c7e:	f240 2102 	movw	r1, #514	; 0x202
   80c82:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80c86:	f04f 31ff 	mov.w	r1, #4294967295
   80c8a:	60d9      	str	r1, [r3, #12]
   80c8c:	21e1      	movs	r1, #225	; 0xe1
   80c8e:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80c90:	4904      	ldr	r1, [pc, #16]	; (80ca4 <configure_uart+0x64>)
   80c92:	600a      	str	r2, [r1, #0]
   80c94:	2250      	movs	r2, #80	; 0x50
   80c96:	601a      	str	r2, [r3, #0]
   80c98:	4770      	bx	lr
   80c9a:	bf00      	nop
   80c9c:	20000474 	.word	0x20000474
   80ca0:	400e0e00 	.word	0x400e0e00
   80ca4:	e000e100 	.word	0xe000e100

00080ca8 <uart_putchar>:
   80ca8:	4b07      	ldr	r3, [pc, #28]	; (80cc8 <uart_putchar+0x20>)
   80caa:	695b      	ldr	r3, [r3, #20]
   80cac:	f013 0f02 	tst.w	r3, #2
   80cb0:	d008      	beq.n	80cc4 <uart_putchar+0x1c>
   80cb2:	4b05      	ldr	r3, [pc, #20]	; (80cc8 <uart_putchar+0x20>)
   80cb4:	61d8      	str	r0, [r3, #28]
   80cb6:	4b04      	ldr	r3, [pc, #16]	; (80cc8 <uart_putchar+0x20>)
   80cb8:	695b      	ldr	r3, [r3, #20]
   80cba:	f413 7f00 	tst.w	r3, #512	; 0x200
   80cbe:	d0fa      	beq.n	80cb6 <uart_putchar+0xe>
   80cc0:	2000      	movs	r0, #0
   80cc2:	4770      	bx	lr
   80cc4:	2001      	movs	r0, #1
   80cc6:	4770      	bx	lr
   80cc8:	400e0800 	.word	0x400e0800

00080ccc <UART_Handler>:
   80ccc:	b508      	push	{r3, lr}
   80cce:	4b15      	ldr	r3, [pc, #84]	; (80d24 <UART_Handler+0x58>)
   80cd0:	695b      	ldr	r3, [r3, #20]
   80cd2:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80cd6:	d003      	beq.n	80ce0 <UART_Handler+0x14>
   80cd8:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80cdc:	4a11      	ldr	r2, [pc, #68]	; (80d24 <UART_Handler+0x58>)
   80cde:	6011      	str	r1, [r2, #0]
   80ce0:	f013 0f01 	tst.w	r3, #1
   80ce4:	d012      	beq.n	80d0c <UART_Handler+0x40>
   80ce6:	4810      	ldr	r0, [pc, #64]	; (80d28 <UART_Handler+0x5c>)
   80ce8:	7842      	ldrb	r2, [r0, #1]
   80cea:	1c53      	adds	r3, r2, #1
   80cec:	4259      	negs	r1, r3
   80cee:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80cf2:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80cf6:	bf58      	it	pl
   80cf8:	424b      	negpl	r3, r1
   80cfa:	7801      	ldrb	r1, [r0, #0]
   80cfc:	428b      	cmp	r3, r1
   80cfe:	d006      	beq.n	80d0e <UART_Handler+0x42>
   80d00:	4908      	ldr	r1, [pc, #32]	; (80d24 <UART_Handler+0x58>)
   80d02:	6988      	ldr	r0, [r1, #24]
   80d04:	4908      	ldr	r1, [pc, #32]	; (80d28 <UART_Handler+0x5c>)
   80d06:	440a      	add	r2, r1
   80d08:	7090      	strb	r0, [r2, #2]
   80d0a:	704b      	strb	r3, [r1, #1]
   80d0c:	bd08      	pop	{r3, pc}
   80d0e:	4807      	ldr	r0, [pc, #28]	; (80d2c <UART_Handler+0x60>)
   80d10:	4b07      	ldr	r3, [pc, #28]	; (80d30 <UART_Handler+0x64>)
   80d12:	4798      	blx	r3
   80d14:	4b04      	ldr	r3, [pc, #16]	; (80d28 <UART_Handler+0x5c>)
   80d16:	7859      	ldrb	r1, [r3, #1]
   80d18:	4a02      	ldr	r2, [pc, #8]	; (80d24 <UART_Handler+0x58>)
   80d1a:	6992      	ldr	r2, [r2, #24]
   80d1c:	440b      	add	r3, r1
   80d1e:	709a      	strb	r2, [r3, #2]
   80d20:	bd08      	pop	{r3, pc}
   80d22:	bf00      	nop
   80d24:	400e0800 	.word	0x400e0800
   80d28:	20000474 	.word	0x20000474
   80d2c:	000814ec 	.word	0x000814ec
   80d30:	00080b25 	.word	0x00080b25

00080d34 <__aeabi_frsub>:
   80d34:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   80d38:	e002      	b.n	80d40 <__addsf3>
   80d3a:	bf00      	nop

00080d3c <__aeabi_fsub>:
   80d3c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00080d40 <__addsf3>:
   80d40:	0042      	lsls	r2, r0, #1
   80d42:	bf1f      	itttt	ne
   80d44:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   80d48:	ea92 0f03 	teqne	r2, r3
   80d4c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   80d50:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   80d54:	d06a      	beq.n	80e2c <__addsf3+0xec>
   80d56:	ea4f 6212 	mov.w	r2, r2, lsr #24
   80d5a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   80d5e:	bfc1      	itttt	gt
   80d60:	18d2      	addgt	r2, r2, r3
   80d62:	4041      	eorgt	r1, r0
   80d64:	4048      	eorgt	r0, r1
   80d66:	4041      	eorgt	r1, r0
   80d68:	bfb8      	it	lt
   80d6a:	425b      	neglt	r3, r3
   80d6c:	2b19      	cmp	r3, #25
   80d6e:	bf88      	it	hi
   80d70:	4770      	bxhi	lr
   80d72:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   80d76:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80d7a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   80d7e:	bf18      	it	ne
   80d80:	4240      	negne	r0, r0
   80d82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80d86:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   80d8a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   80d8e:	bf18      	it	ne
   80d90:	4249      	negne	r1, r1
   80d92:	ea92 0f03 	teq	r2, r3
   80d96:	d03f      	beq.n	80e18 <__addsf3+0xd8>
   80d98:	f1a2 0201 	sub.w	r2, r2, #1
   80d9c:	fa41 fc03 	asr.w	ip, r1, r3
   80da0:	eb10 000c 	adds.w	r0, r0, ip
   80da4:	f1c3 0320 	rsb	r3, r3, #32
   80da8:	fa01 f103 	lsl.w	r1, r1, r3
   80dac:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   80db0:	d502      	bpl.n	80db8 <__addsf3+0x78>
   80db2:	4249      	negs	r1, r1
   80db4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   80db8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   80dbc:	d313      	bcc.n	80de6 <__addsf3+0xa6>
   80dbe:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   80dc2:	d306      	bcc.n	80dd2 <__addsf3+0x92>
   80dc4:	0840      	lsrs	r0, r0, #1
   80dc6:	ea4f 0131 	mov.w	r1, r1, rrx
   80dca:	f102 0201 	add.w	r2, r2, #1
   80dce:	2afe      	cmp	r2, #254	; 0xfe
   80dd0:	d251      	bcs.n	80e76 <__addsf3+0x136>
   80dd2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   80dd6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80dda:	bf08      	it	eq
   80ddc:	f020 0001 	biceq.w	r0, r0, #1
   80de0:	ea40 0003 	orr.w	r0, r0, r3
   80de4:	4770      	bx	lr
   80de6:	0049      	lsls	r1, r1, #1
   80de8:	eb40 0000 	adc.w	r0, r0, r0
   80dec:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   80df0:	f1a2 0201 	sub.w	r2, r2, #1
   80df4:	d1ed      	bne.n	80dd2 <__addsf3+0x92>
   80df6:	fab0 fc80 	clz	ip, r0
   80dfa:	f1ac 0c08 	sub.w	ip, ip, #8
   80dfe:	ebb2 020c 	subs.w	r2, r2, ip
   80e02:	fa00 f00c 	lsl.w	r0, r0, ip
   80e06:	bfaa      	itet	ge
   80e08:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   80e0c:	4252      	neglt	r2, r2
   80e0e:	4318      	orrge	r0, r3
   80e10:	bfbc      	itt	lt
   80e12:	40d0      	lsrlt	r0, r2
   80e14:	4318      	orrlt	r0, r3
   80e16:	4770      	bx	lr
   80e18:	f092 0f00 	teq	r2, #0
   80e1c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   80e20:	bf06      	itte	eq
   80e22:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   80e26:	3201      	addeq	r2, #1
   80e28:	3b01      	subne	r3, #1
   80e2a:	e7b5      	b.n	80d98 <__addsf3+0x58>
   80e2c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   80e30:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   80e34:	bf18      	it	ne
   80e36:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   80e3a:	d021      	beq.n	80e80 <__addsf3+0x140>
   80e3c:	ea92 0f03 	teq	r2, r3
   80e40:	d004      	beq.n	80e4c <__addsf3+0x10c>
   80e42:	f092 0f00 	teq	r2, #0
   80e46:	bf08      	it	eq
   80e48:	4608      	moveq	r0, r1
   80e4a:	4770      	bx	lr
   80e4c:	ea90 0f01 	teq	r0, r1
   80e50:	bf1c      	itt	ne
   80e52:	2000      	movne	r0, #0
   80e54:	4770      	bxne	lr
   80e56:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   80e5a:	d104      	bne.n	80e66 <__addsf3+0x126>
   80e5c:	0040      	lsls	r0, r0, #1
   80e5e:	bf28      	it	cs
   80e60:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   80e64:	4770      	bx	lr
   80e66:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   80e6a:	bf3c      	itt	cc
   80e6c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   80e70:	4770      	bxcc	lr
   80e72:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   80e76:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   80e7a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80e7e:	4770      	bx	lr
   80e80:	ea7f 6222 	mvns.w	r2, r2, asr #24
   80e84:	bf16      	itet	ne
   80e86:	4608      	movne	r0, r1
   80e88:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   80e8c:	4601      	movne	r1, r0
   80e8e:	0242      	lsls	r2, r0, #9
   80e90:	bf06      	itte	eq
   80e92:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   80e96:	ea90 0f01 	teqeq	r0, r1
   80e9a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   80e9e:	4770      	bx	lr

00080ea0 <__aeabi_ui2f>:
   80ea0:	f04f 0300 	mov.w	r3, #0
   80ea4:	e004      	b.n	80eb0 <__aeabi_i2f+0x8>
   80ea6:	bf00      	nop

00080ea8 <__aeabi_i2f>:
   80ea8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   80eac:	bf48      	it	mi
   80eae:	4240      	negmi	r0, r0
   80eb0:	ea5f 0c00 	movs.w	ip, r0
   80eb4:	bf08      	it	eq
   80eb6:	4770      	bxeq	lr
   80eb8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   80ebc:	4601      	mov	r1, r0
   80ebe:	f04f 0000 	mov.w	r0, #0
   80ec2:	e01c      	b.n	80efe <__aeabi_l2f+0x2a>

00080ec4 <__aeabi_ul2f>:
   80ec4:	ea50 0201 	orrs.w	r2, r0, r1
   80ec8:	bf08      	it	eq
   80eca:	4770      	bxeq	lr
   80ecc:	f04f 0300 	mov.w	r3, #0
   80ed0:	e00a      	b.n	80ee8 <__aeabi_l2f+0x14>
   80ed2:	bf00      	nop

00080ed4 <__aeabi_l2f>:
   80ed4:	ea50 0201 	orrs.w	r2, r0, r1
   80ed8:	bf08      	it	eq
   80eda:	4770      	bxeq	lr
   80edc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   80ee0:	d502      	bpl.n	80ee8 <__aeabi_l2f+0x14>
   80ee2:	4240      	negs	r0, r0
   80ee4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80ee8:	ea5f 0c01 	movs.w	ip, r1
   80eec:	bf02      	ittt	eq
   80eee:	4684      	moveq	ip, r0
   80ef0:	4601      	moveq	r1, r0
   80ef2:	2000      	moveq	r0, #0
   80ef4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   80ef8:	bf08      	it	eq
   80efa:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   80efe:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   80f02:	fabc f28c 	clz	r2, ip
   80f06:	3a08      	subs	r2, #8
   80f08:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   80f0c:	db10      	blt.n	80f30 <__aeabi_l2f+0x5c>
   80f0e:	fa01 fc02 	lsl.w	ip, r1, r2
   80f12:	4463      	add	r3, ip
   80f14:	fa00 fc02 	lsl.w	ip, r0, r2
   80f18:	f1c2 0220 	rsb	r2, r2, #32
   80f1c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80f20:	fa20 f202 	lsr.w	r2, r0, r2
   80f24:	eb43 0002 	adc.w	r0, r3, r2
   80f28:	bf08      	it	eq
   80f2a:	f020 0001 	biceq.w	r0, r0, #1
   80f2e:	4770      	bx	lr
   80f30:	f102 0220 	add.w	r2, r2, #32
   80f34:	fa01 fc02 	lsl.w	ip, r1, r2
   80f38:	f1c2 0220 	rsb	r2, r2, #32
   80f3c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   80f40:	fa21 f202 	lsr.w	r2, r1, r2
   80f44:	eb43 0002 	adc.w	r0, r3, r2
   80f48:	bf08      	it	eq
   80f4a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   80f4e:	4770      	bx	lr

00080f50 <__aeabi_fmul>:
   80f50:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80f54:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   80f58:	bf1e      	ittt	ne
   80f5a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   80f5e:	ea92 0f0c 	teqne	r2, ip
   80f62:	ea93 0f0c 	teqne	r3, ip
   80f66:	d06f      	beq.n	81048 <__aeabi_fmul+0xf8>
   80f68:	441a      	add	r2, r3
   80f6a:	ea80 0c01 	eor.w	ip, r0, r1
   80f6e:	0240      	lsls	r0, r0, #9
   80f70:	bf18      	it	ne
   80f72:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   80f76:	d01e      	beq.n	80fb6 <__aeabi_fmul+0x66>
   80f78:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   80f7c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   80f80:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   80f84:	fba0 3101 	umull	r3, r1, r0, r1
   80f88:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   80f8c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   80f90:	bf3e      	ittt	cc
   80f92:	0049      	lslcc	r1, r1, #1
   80f94:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   80f98:	005b      	lslcc	r3, r3, #1
   80f9a:	ea40 0001 	orr.w	r0, r0, r1
   80f9e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   80fa2:	2afd      	cmp	r2, #253	; 0xfd
   80fa4:	d81d      	bhi.n	80fe2 <__aeabi_fmul+0x92>
   80fa6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   80faa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80fae:	bf08      	it	eq
   80fb0:	f020 0001 	biceq.w	r0, r0, #1
   80fb4:	4770      	bx	lr
   80fb6:	f090 0f00 	teq	r0, #0
   80fba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   80fbe:	bf08      	it	eq
   80fc0:	0249      	lsleq	r1, r1, #9
   80fc2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   80fc6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   80fca:	3a7f      	subs	r2, #127	; 0x7f
   80fcc:	bfc2      	ittt	gt
   80fce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   80fd2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   80fd6:	4770      	bxgt	lr
   80fd8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80fdc:	f04f 0300 	mov.w	r3, #0
   80fe0:	3a01      	subs	r2, #1
   80fe2:	dc5d      	bgt.n	810a0 <__aeabi_fmul+0x150>
   80fe4:	f112 0f19 	cmn.w	r2, #25
   80fe8:	bfdc      	itt	le
   80fea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   80fee:	4770      	bxle	lr
   80ff0:	f1c2 0200 	rsb	r2, r2, #0
   80ff4:	0041      	lsls	r1, r0, #1
   80ff6:	fa21 f102 	lsr.w	r1, r1, r2
   80ffa:	f1c2 0220 	rsb	r2, r2, #32
   80ffe:	fa00 fc02 	lsl.w	ip, r0, r2
   81002:	ea5f 0031 	movs.w	r0, r1, rrx
   81006:	f140 0000 	adc.w	r0, r0, #0
   8100a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   8100e:	bf08      	it	eq
   81010:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   81014:	4770      	bx	lr
   81016:	f092 0f00 	teq	r2, #0
   8101a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   8101e:	bf02      	ittt	eq
   81020:	0040      	lsleq	r0, r0, #1
   81022:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   81026:	3a01      	subeq	r2, #1
   81028:	d0f9      	beq.n	8101e <__aeabi_fmul+0xce>
   8102a:	ea40 000c 	orr.w	r0, r0, ip
   8102e:	f093 0f00 	teq	r3, #0
   81032:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   81036:	bf02      	ittt	eq
   81038:	0049      	lsleq	r1, r1, #1
   8103a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   8103e:	3b01      	subeq	r3, #1
   81040:	d0f9      	beq.n	81036 <__aeabi_fmul+0xe6>
   81042:	ea41 010c 	orr.w	r1, r1, ip
   81046:	e78f      	b.n	80f68 <__aeabi_fmul+0x18>
   81048:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   8104c:	ea92 0f0c 	teq	r2, ip
   81050:	bf18      	it	ne
   81052:	ea93 0f0c 	teqne	r3, ip
   81056:	d00a      	beq.n	8106e <__aeabi_fmul+0x11e>
   81058:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   8105c:	bf18      	it	ne
   8105e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   81062:	d1d8      	bne.n	81016 <__aeabi_fmul+0xc6>
   81064:	ea80 0001 	eor.w	r0, r0, r1
   81068:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   8106c:	4770      	bx	lr
   8106e:	f090 0f00 	teq	r0, #0
   81072:	bf17      	itett	ne
   81074:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   81078:	4608      	moveq	r0, r1
   8107a:	f091 0f00 	teqne	r1, #0
   8107e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   81082:	d014      	beq.n	810ae <__aeabi_fmul+0x15e>
   81084:	ea92 0f0c 	teq	r2, ip
   81088:	d101      	bne.n	8108e <__aeabi_fmul+0x13e>
   8108a:	0242      	lsls	r2, r0, #9
   8108c:	d10f      	bne.n	810ae <__aeabi_fmul+0x15e>
   8108e:	ea93 0f0c 	teq	r3, ip
   81092:	d103      	bne.n	8109c <__aeabi_fmul+0x14c>
   81094:	024b      	lsls	r3, r1, #9
   81096:	bf18      	it	ne
   81098:	4608      	movne	r0, r1
   8109a:	d108      	bne.n	810ae <__aeabi_fmul+0x15e>
   8109c:	ea80 0001 	eor.w	r0, r0, r1
   810a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   810a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   810a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   810ac:	4770      	bx	lr
   810ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   810b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   810b6:	4770      	bx	lr

000810b8 <__aeabi_fdiv>:
   810b8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   810bc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   810c0:	bf1e      	ittt	ne
   810c2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   810c6:	ea92 0f0c 	teqne	r2, ip
   810ca:	ea93 0f0c 	teqne	r3, ip
   810ce:	d069      	beq.n	811a4 <__aeabi_fdiv+0xec>
   810d0:	eba2 0203 	sub.w	r2, r2, r3
   810d4:	ea80 0c01 	eor.w	ip, r0, r1
   810d8:	0249      	lsls	r1, r1, #9
   810da:	ea4f 2040 	mov.w	r0, r0, lsl #9
   810de:	d037      	beq.n	81150 <__aeabi_fdiv+0x98>
   810e0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   810e4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   810e8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   810ec:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   810f0:	428b      	cmp	r3, r1
   810f2:	bf38      	it	cc
   810f4:	005b      	lslcc	r3, r3, #1
   810f6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   810fa:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   810fe:	428b      	cmp	r3, r1
   81100:	bf24      	itt	cs
   81102:	1a5b      	subcs	r3, r3, r1
   81104:	ea40 000c 	orrcs.w	r0, r0, ip
   81108:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   8110c:	bf24      	itt	cs
   8110e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   81112:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   81116:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   8111a:	bf24      	itt	cs
   8111c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   81120:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81124:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   81128:	bf24      	itt	cs
   8112a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   8112e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81132:	011b      	lsls	r3, r3, #4
   81134:	bf18      	it	ne
   81136:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   8113a:	d1e0      	bne.n	810fe <__aeabi_fdiv+0x46>
   8113c:	2afd      	cmp	r2, #253	; 0xfd
   8113e:	f63f af50 	bhi.w	80fe2 <__aeabi_fmul+0x92>
   81142:	428b      	cmp	r3, r1
   81144:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   81148:	bf08      	it	eq
   8114a:	f020 0001 	biceq.w	r0, r0, #1
   8114e:	4770      	bx	lr
   81150:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   81154:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   81158:	327f      	adds	r2, #127	; 0x7f
   8115a:	bfc2      	ittt	gt
   8115c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   81160:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   81164:	4770      	bxgt	lr
   81166:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   8116a:	f04f 0300 	mov.w	r3, #0
   8116e:	3a01      	subs	r2, #1
   81170:	e737      	b.n	80fe2 <__aeabi_fmul+0x92>
   81172:	f092 0f00 	teq	r2, #0
   81176:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   8117a:	bf02      	ittt	eq
   8117c:	0040      	lsleq	r0, r0, #1
   8117e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   81182:	3a01      	subeq	r2, #1
   81184:	d0f9      	beq.n	8117a <__aeabi_fdiv+0xc2>
   81186:	ea40 000c 	orr.w	r0, r0, ip
   8118a:	f093 0f00 	teq	r3, #0
   8118e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   81192:	bf02      	ittt	eq
   81194:	0049      	lsleq	r1, r1, #1
   81196:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   8119a:	3b01      	subeq	r3, #1
   8119c:	d0f9      	beq.n	81192 <__aeabi_fdiv+0xda>
   8119e:	ea41 010c 	orr.w	r1, r1, ip
   811a2:	e795      	b.n	810d0 <__aeabi_fdiv+0x18>
   811a4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   811a8:	ea92 0f0c 	teq	r2, ip
   811ac:	d108      	bne.n	811c0 <__aeabi_fdiv+0x108>
   811ae:	0242      	lsls	r2, r0, #9
   811b0:	f47f af7d 	bne.w	810ae <__aeabi_fmul+0x15e>
   811b4:	ea93 0f0c 	teq	r3, ip
   811b8:	f47f af70 	bne.w	8109c <__aeabi_fmul+0x14c>
   811bc:	4608      	mov	r0, r1
   811be:	e776      	b.n	810ae <__aeabi_fmul+0x15e>
   811c0:	ea93 0f0c 	teq	r3, ip
   811c4:	d104      	bne.n	811d0 <__aeabi_fdiv+0x118>
   811c6:	024b      	lsls	r3, r1, #9
   811c8:	f43f af4c 	beq.w	81064 <__aeabi_fmul+0x114>
   811cc:	4608      	mov	r0, r1
   811ce:	e76e      	b.n	810ae <__aeabi_fmul+0x15e>
   811d0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   811d4:	bf18      	it	ne
   811d6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   811da:	d1ca      	bne.n	81172 <__aeabi_fdiv+0xba>
   811dc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   811e0:	f47f af5c 	bne.w	8109c <__aeabi_fmul+0x14c>
   811e4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   811e8:	f47f af3c 	bne.w	81064 <__aeabi_fmul+0x114>
   811ec:	e75f      	b.n	810ae <__aeabi_fmul+0x15e>
   811ee:	bf00      	nop

000811f0 <__gesf2>:
   811f0:	f04f 3cff 	mov.w	ip, #4294967295
   811f4:	e006      	b.n	81204 <__cmpsf2+0x4>
   811f6:	bf00      	nop

000811f8 <__lesf2>:
   811f8:	f04f 0c01 	mov.w	ip, #1
   811fc:	e002      	b.n	81204 <__cmpsf2+0x4>
   811fe:	bf00      	nop

00081200 <__cmpsf2>:
   81200:	f04f 0c01 	mov.w	ip, #1
   81204:	f84d cd04 	str.w	ip, [sp, #-4]!
   81208:	ea4f 0240 	mov.w	r2, r0, lsl #1
   8120c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   81210:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   81214:	bf18      	it	ne
   81216:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   8121a:	d011      	beq.n	81240 <__cmpsf2+0x40>
   8121c:	b001      	add	sp, #4
   8121e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
   81222:	bf18      	it	ne
   81224:	ea90 0f01 	teqne	r0, r1
   81228:	bf58      	it	pl
   8122a:	ebb2 0003 	subspl.w	r0, r2, r3
   8122e:	bf88      	it	hi
   81230:	17c8      	asrhi	r0, r1, #31
   81232:	bf38      	it	cc
   81234:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   81238:	bf18      	it	ne
   8123a:	f040 0001 	orrne.w	r0, r0, #1
   8123e:	4770      	bx	lr
   81240:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   81244:	d102      	bne.n	8124c <__cmpsf2+0x4c>
   81246:	ea5f 2c40 	movs.w	ip, r0, lsl #9
   8124a:	d105      	bne.n	81258 <__cmpsf2+0x58>
   8124c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
   81250:	d1e4      	bne.n	8121c <__cmpsf2+0x1c>
   81252:	ea5f 2c41 	movs.w	ip, r1, lsl #9
   81256:	d0e1      	beq.n	8121c <__cmpsf2+0x1c>
   81258:	f85d 0b04 	ldr.w	r0, [sp], #4
   8125c:	4770      	bx	lr
   8125e:	bf00      	nop

00081260 <__aeabi_cfrcmple>:
   81260:	4684      	mov	ip, r0
   81262:	4608      	mov	r0, r1
   81264:	4661      	mov	r1, ip
   81266:	e7ff      	b.n	81268 <__aeabi_cfcmpeq>

00081268 <__aeabi_cfcmpeq>:
   81268:	b50f      	push	{r0, r1, r2, r3, lr}
   8126a:	f7ff ffc9 	bl	81200 <__cmpsf2>
   8126e:	2800      	cmp	r0, #0
   81270:	bf48      	it	mi
   81272:	f110 0f00 	cmnmi.w	r0, #0
   81276:	bd0f      	pop	{r0, r1, r2, r3, pc}

00081278 <__aeabi_fcmpeq>:
   81278:	f84d ed08 	str.w	lr, [sp, #-8]!
   8127c:	f7ff fff4 	bl	81268 <__aeabi_cfcmpeq>
   81280:	bf0c      	ite	eq
   81282:	2001      	moveq	r0, #1
   81284:	2000      	movne	r0, #0
   81286:	f85d fb08 	ldr.w	pc, [sp], #8
   8128a:	bf00      	nop

0008128c <__aeabi_fcmplt>:
   8128c:	f84d ed08 	str.w	lr, [sp, #-8]!
   81290:	f7ff ffea 	bl	81268 <__aeabi_cfcmpeq>
   81294:	bf34      	ite	cc
   81296:	2001      	movcc	r0, #1
   81298:	2000      	movcs	r0, #0
   8129a:	f85d fb08 	ldr.w	pc, [sp], #8
   8129e:	bf00      	nop

000812a0 <__aeabi_fcmple>:
   812a0:	f84d ed08 	str.w	lr, [sp, #-8]!
   812a4:	f7ff ffe0 	bl	81268 <__aeabi_cfcmpeq>
   812a8:	bf94      	ite	ls
   812aa:	2001      	movls	r0, #1
   812ac:	2000      	movhi	r0, #0
   812ae:	f85d fb08 	ldr.w	pc, [sp], #8
   812b2:	bf00      	nop

000812b4 <__aeabi_fcmpge>:
   812b4:	f84d ed08 	str.w	lr, [sp, #-8]!
   812b8:	f7ff ffd2 	bl	81260 <__aeabi_cfrcmple>
   812bc:	bf94      	ite	ls
   812be:	2001      	movls	r0, #1
   812c0:	2000      	movhi	r0, #0
   812c2:	f85d fb08 	ldr.w	pc, [sp], #8
   812c6:	bf00      	nop

000812c8 <__aeabi_fcmpgt>:
   812c8:	f84d ed08 	str.w	lr, [sp, #-8]!
   812cc:	f7ff ffc8 	bl	81260 <__aeabi_cfrcmple>
   812d0:	bf34      	ite	cc
   812d2:	2001      	movcc	r0, #1
   812d4:	2000      	movcs	r0, #0
   812d6:	f85d fb08 	ldr.w	pc, [sp], #8
   812da:	bf00      	nop

000812dc <__aeabi_f2iz>:
   812dc:	ea4f 0240 	mov.w	r2, r0, lsl #1
   812e0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   812e4:	d30f      	bcc.n	81306 <__aeabi_f2iz+0x2a>
   812e6:	f04f 039e 	mov.w	r3, #158	; 0x9e
   812ea:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   812ee:	d90d      	bls.n	8130c <__aeabi_f2iz+0x30>
   812f0:	ea4f 2300 	mov.w	r3, r0, lsl #8
   812f4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   812f8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   812fc:	fa23 f002 	lsr.w	r0, r3, r2
   81300:	bf18      	it	ne
   81302:	4240      	negne	r0, r0
   81304:	4770      	bx	lr
   81306:	f04f 0000 	mov.w	r0, #0
   8130a:	4770      	bx	lr
   8130c:	f112 0f61 	cmn.w	r2, #97	; 0x61
   81310:	d101      	bne.n	81316 <__aeabi_f2iz+0x3a>
   81312:	0242      	lsls	r2, r0, #9
   81314:	d105      	bne.n	81322 <__aeabi_f2iz+0x46>
   81316:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   8131a:	bf08      	it	eq
   8131c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   81320:	4770      	bx	lr
   81322:	f04f 0000 	mov.w	r0, #0
   81326:	4770      	bx	lr

00081328 <__libc_init_array>:
   81328:	b570      	push	{r4, r5, r6, lr}
   8132a:	4e0f      	ldr	r6, [pc, #60]	; (81368 <__libc_init_array+0x40>)
   8132c:	4d0f      	ldr	r5, [pc, #60]	; (8136c <__libc_init_array+0x44>)
   8132e:	1b76      	subs	r6, r6, r5
   81330:	10b6      	asrs	r6, r6, #2
   81332:	bf18      	it	ne
   81334:	2400      	movne	r4, #0
   81336:	d005      	beq.n	81344 <__libc_init_array+0x1c>
   81338:	3401      	adds	r4, #1
   8133a:	f855 3b04 	ldr.w	r3, [r5], #4
   8133e:	4798      	blx	r3
   81340:	42a6      	cmp	r6, r4
   81342:	d1f9      	bne.n	81338 <__libc_init_array+0x10>
   81344:	4e0a      	ldr	r6, [pc, #40]	; (81370 <__libc_init_array+0x48>)
   81346:	4d0b      	ldr	r5, [pc, #44]	; (81374 <__libc_init_array+0x4c>)
   81348:	f000 f8e2 	bl	81510 <_init>
   8134c:	1b76      	subs	r6, r6, r5
   8134e:	10b6      	asrs	r6, r6, #2
   81350:	bf18      	it	ne
   81352:	2400      	movne	r4, #0
   81354:	d006      	beq.n	81364 <__libc_init_array+0x3c>
   81356:	3401      	adds	r4, #1
   81358:	f855 3b04 	ldr.w	r3, [r5], #4
   8135c:	4798      	blx	r3
   8135e:	42a6      	cmp	r6, r4
   81360:	d1f9      	bne.n	81356 <__libc_init_array+0x2e>
   81362:	bd70      	pop	{r4, r5, r6, pc}
   81364:	bd70      	pop	{r4, r5, r6, pc}
   81366:	bf00      	nop
   81368:	0008151c 	.word	0x0008151c
   8136c:	0008151c 	.word	0x0008151c
   81370:	00081524 	.word	0x00081524
   81374:	0008151c 	.word	0x0008151c

00081378 <register_fini>:
   81378:	4b02      	ldr	r3, [pc, #8]	; (81384 <register_fini+0xc>)
   8137a:	b113      	cbz	r3, 81382 <register_fini+0xa>
   8137c:	4802      	ldr	r0, [pc, #8]	; (81388 <register_fini+0x10>)
   8137e:	f000 b805 	b.w	8138c <atexit>
   81382:	4770      	bx	lr
   81384:	00000000 	.word	0x00000000
   81388:	00081399 	.word	0x00081399

0008138c <atexit>:
   8138c:	2300      	movs	r3, #0
   8138e:	4601      	mov	r1, r0
   81390:	461a      	mov	r2, r3
   81392:	4618      	mov	r0, r3
   81394:	f000 b81e 	b.w	813d4 <__register_exitproc>

00081398 <__libc_fini_array>:
   81398:	b538      	push	{r3, r4, r5, lr}
   8139a:	4c0a      	ldr	r4, [pc, #40]	; (813c4 <__libc_fini_array+0x2c>)
   8139c:	4d0a      	ldr	r5, [pc, #40]	; (813c8 <__libc_fini_array+0x30>)
   8139e:	1b64      	subs	r4, r4, r5
   813a0:	10a4      	asrs	r4, r4, #2
   813a2:	d00a      	beq.n	813ba <__libc_fini_array+0x22>
   813a4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   813a8:	3b01      	subs	r3, #1
   813aa:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   813ae:	3c01      	subs	r4, #1
   813b0:	f855 3904 	ldr.w	r3, [r5], #-4
   813b4:	4798      	blx	r3
   813b6:	2c00      	cmp	r4, #0
   813b8:	d1f9      	bne.n	813ae <__libc_fini_array+0x16>
   813ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   813be:	f000 b8b1 	b.w	81524 <_fini>
   813c2:	bf00      	nop
   813c4:	00081534 	.word	0x00081534
   813c8:	00081530 	.word	0x00081530

000813cc <__retarget_lock_acquire_recursive>:
   813cc:	4770      	bx	lr
   813ce:	bf00      	nop

000813d0 <__retarget_lock_release_recursive>:
   813d0:	4770      	bx	lr
   813d2:	bf00      	nop

000813d4 <__register_exitproc>:
   813d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   813d8:	4d2c      	ldr	r5, [pc, #176]	; (8148c <__register_exitproc+0xb8>)
   813da:	4606      	mov	r6, r0
   813dc:	6828      	ldr	r0, [r5, #0]
   813de:	4698      	mov	r8, r3
   813e0:	460f      	mov	r7, r1
   813e2:	4691      	mov	r9, r2
   813e4:	f7ff fff2 	bl	813cc <__retarget_lock_acquire_recursive>
   813e8:	4b29      	ldr	r3, [pc, #164]	; (81490 <__register_exitproc+0xbc>)
   813ea:	681c      	ldr	r4, [r3, #0]
   813ec:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   813f0:	2b00      	cmp	r3, #0
   813f2:	d03e      	beq.n	81472 <__register_exitproc+0x9e>
   813f4:	685a      	ldr	r2, [r3, #4]
   813f6:	2a1f      	cmp	r2, #31
   813f8:	dc1c      	bgt.n	81434 <__register_exitproc+0x60>
   813fa:	f102 0e01 	add.w	lr, r2, #1
   813fe:	b176      	cbz	r6, 8141e <__register_exitproc+0x4a>
   81400:	2101      	movs	r1, #1
   81402:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   81406:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8140a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   8140e:	4091      	lsls	r1, r2
   81410:	4308      	orrs	r0, r1
   81412:	2e02      	cmp	r6, #2
   81414:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81418:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   8141c:	d023      	beq.n	81466 <__register_exitproc+0x92>
   8141e:	3202      	adds	r2, #2
   81420:	f8c3 e004 	str.w	lr, [r3, #4]
   81424:	6828      	ldr	r0, [r5, #0]
   81426:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   8142a:	f7ff ffd1 	bl	813d0 <__retarget_lock_release_recursive>
   8142e:	2000      	movs	r0, #0
   81430:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81434:	4b17      	ldr	r3, [pc, #92]	; (81494 <__register_exitproc+0xc0>)
   81436:	b30b      	cbz	r3, 8147c <__register_exitproc+0xa8>
   81438:	f44f 70c8 	mov.w	r0, #400	; 0x190
   8143c:	f3af 8000 	nop.w
   81440:	4603      	mov	r3, r0
   81442:	b1d8      	cbz	r0, 8147c <__register_exitproc+0xa8>
   81444:	2000      	movs	r0, #0
   81446:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8144a:	f04f 0e01 	mov.w	lr, #1
   8144e:	6058      	str	r0, [r3, #4]
   81450:	6019      	str	r1, [r3, #0]
   81452:	4602      	mov	r2, r0
   81454:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81458:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   8145c:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   81460:	2e00      	cmp	r6, #0
   81462:	d0dc      	beq.n	8141e <__register_exitproc+0x4a>
   81464:	e7cc      	b.n	81400 <__register_exitproc+0x2c>
   81466:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   8146a:	4301      	orrs	r1, r0
   8146c:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   81470:	e7d5      	b.n	8141e <__register_exitproc+0x4a>
   81472:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   81476:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8147a:	e7bb      	b.n	813f4 <__register_exitproc+0x20>
   8147c:	6828      	ldr	r0, [r5, #0]
   8147e:	f7ff ffa7 	bl	813d0 <__retarget_lock_release_recursive>
   81482:	f04f 30ff 	mov.w	r0, #4294967295
   81486:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8148a:	bf00      	nop
   8148c:	20000430 	.word	0x20000430
   81490:	0008150c 	.word	0x0008150c
   81494:	00000000 	.word	0x00000000
   81498:	304e4143 	.word	0x304e4143
   8149c:	73656d20 	.word	0x73656d20
   814a0:	65676173 	.word	0x65676173
   814a4:	72726120 	.word	0x72726120
   814a8:	64657669 	.word	0x64657669
   814ac:	206e6920 	.word	0x206e6920
   814b0:	2d6e6f6e 	.word	0x2d6e6f6e
   814b4:	64657375 	.word	0x64657375
   814b8:	69616d20 	.word	0x69616d20
   814bc:	786f626c 	.word	0x786f626c
   814c0:	00000d0a 	.word	0x00000d0a
   814c4:	65746e45 	.word	0x65746e45
   814c8:	676e6972 	.word	0x676e6972
   814cc:	6f6f6c20 	.word	0x6f6f6c20
   814d0:	00000070 	.word	0x00000070
   814d4:	76726573 	.word	0x76726573
   814d8:	65725f6f 	.word	0x65725f6f
   814dc:	25203a66 	.word	0x25203a66
   814e0:	000d0a75 	.word	0x000d0a75
   814e4:	6c756e28 	.word	0x6c756e28
   814e8:	0000296c 	.word	0x0000296c
   814ec:	3a525245 	.word	0x3a525245
   814f0:	52415520 	.word	0x52415520
   814f4:	58522054 	.word	0x58522054
   814f8:	66756220 	.word	0x66756220
   814fc:	20726566 	.word	0x20726566
   81500:	66207369 	.word	0x66207369
   81504:	0a6c6c75 	.word	0x0a6c6c75
   81508:	0000000d 	.word	0x0000000d

0008150c <_global_impure_ptr>:
   8150c:	20000008                                ... 

00081510 <_init>:
   81510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81512:	bf00      	nop
   81514:	bcf8      	pop	{r3, r4, r5, r6, r7}
   81516:	bc08      	pop	{r3}
   81518:	469e      	mov	lr, r3
   8151a:	4770      	bx	lr

0008151c <__init_array_start>:
   8151c:	00081379 	.word	0x00081379

00081520 <__frame_dummy_init_array_entry>:
   81520:	00080119                                ....

00081524 <_fini>:
   81524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81526:	bf00      	nop
   81528:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8152a:	bc08      	pop	{r3}
   8152c:	469e      	mov	lr, r3
   8152e:	4770      	bx	lr

00081530 <__fini_array_start>:
   81530:	000800f5 	.word	0x000800f5
