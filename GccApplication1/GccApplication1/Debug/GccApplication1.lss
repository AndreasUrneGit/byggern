
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000c68  00000cfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080017a  0080017a  00000d76  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d76  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dd4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000e10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b56  00000000  00000000  00000e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ff  00000000  00000000  000019e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c4  00000000  00000000  000022e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  000028ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048d  00000000  00000000  0000298c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000244  00000000  00000000  00002e19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000305d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e6       	ldi	r30, 0x68	; 104
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 37       	cpi	r26, 0x7A	; 122
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e7       	ldi	r26, 0x7A	; 122
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a4 38       	cpi	r26, 0x84	; 132
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 c4 00 	call	0x188	; 0x188 <main>
  a6:	0c 94 32 06 	jmp	0xc64	; 0xc64 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_transmit>:
}

void USART_transmit(unsigned char data){
	// wait for empty transmit buffer

	loop_until_bit_is_set(UCSR0A, UDRE0);
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_transmit>
	//put data into buffer, sends the data
	UDR0 = data;
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <USART_receive>:
}
unsigned char USART_receive( void ){
	// Wait for data to be received

	loop_until_bit_is_set(UCSR0A, RXC0);
  b6:	5f 9b       	sbis	0x0b, 7	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <USART_receive>
	// Get and return received data from buffer
	return UDR0;
  ba:	8c b1       	in	r24, 0x0c	; 12
  bc:	08 95       	ret

000000be <USART_init>:
 */ 
#include "ATmega162_programdriver.h"

void USART_init(unsigned int ubrr){
	// Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
  be:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
  c0:	89 b9       	out	0x09, r24	; 9
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  c2:	88 e1       	ldi	r24, 0x18	; 24
  c4:	8a b9       	out	0x0a, r24	; 10
	// Set frame format: 8data, 2stop bit
	UCSR0C = (1<<URSEL0)| (1 << USBS0) |(3<<UCSZ00);
  c6:	8e e8       	ldi	r24, 0x8E	; 142
  c8:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_transmit, USART_receive);
  ca:	6b e5       	ldi	r22, 0x5B	; 91
  cc:	70 e0       	ldi	r23, 0x00	; 0
  ce:	87 e5       	ldi	r24, 0x57	; 87
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 32 01 	call	0x264	; 0x264 <fdevopen>
  d6:	08 95       	ret

000000d8 <SRAM_test>:
 *  Author: andreurn
 */ 

#include "sram.h"

void SRAM_test(void){
  d8:	ef 92       	push	r14
  da:	ff 92       	push	r15
  dc:	0f 93       	push	r16
  de:	1f 93       	push	r17
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  e4:	8a e0       	ldi	r24, 0x0A	; 10
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	0e 94 93 01 	call	0x326	; 0x326 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  ec:	0e 94 22 01 	call	0x244	; 0x244 <rand>
  f0:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  f2:	0e 94 27 01 	call	0x24e	; 0x24e <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  f6:	c0 e0       	ldi	r28, 0x00	; 0
  f8:	d0 e0       	ldi	r29, 0x00	; 0
#include "sram.h"

void SRAM_test(void){
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  fa:	00 e0       	ldi	r16, 0x00	; 0
  fc:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  fe:	0b c0       	rjmp	.+22     	; 0x116 <SRAM_test+0x3e>
		uint8_t some_value = rand();
 100:	0e 94 22 01 	call	0x244	; 0x244 <rand>
		ext_ram[i] = some_value;
 104:	fe 01       	movw	r30, r28
 106:	f8 5e       	subi	r31, 0xE8	; 232
 108:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 10a:	90 81       	ld	r25, Z
		if (retreived_value != some_value) {
 10c:	89 17       	cp	r24, r25
 10e:	11 f0       	breq	.+4      	; 0x114 <SRAM_test+0x3c>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
 110:	0f 5f       	subi	r16, 0xFF	; 255
 112:	1f 4f       	sbci	r17, 0xFF	; 255
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 114:	21 96       	adiw	r28, 0x01	; 1
 116:	c1 15       	cp	r28, r1
 118:	88 e0       	ldi	r24, 0x08	; 8
 11a:	d8 07       	cpc	r29, r24
 11c:	88 f3       	brcs	.-30     	; 0x100 <SRAM_test+0x28>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 11e:	c7 01       	movw	r24, r14
 120:	0e 94 27 01 	call	0x24e	; 0x24e <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 124:	c0 e0       	ldi	r28, 0x00	; 0
 126:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void){
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 128:	e1 2c       	mov	r14, r1
 12a:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12c:	0b c0       	rjmp	.+22     	; 0x144 <SRAM_test+0x6c>
		uint8_t some_value = rand();
 12e:	0e 94 22 01 	call	0x244	; 0x244 <rand>
		uint8_t retreived_value = ext_ram[i];
 132:	fe 01       	movw	r30, r28
 134:	f8 5e       	subi	r31, 0xE8	; 232
 136:	90 81       	ld	r25, Z
		if (retreived_value != some_value) {
 138:	89 17       	cp	r24, r25
 13a:	19 f0       	breq	.+6      	; 0x142 <SRAM_test+0x6a>
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	e8 1a       	sub	r14, r24
 140:	f8 0a       	sbc	r15, r24
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 142:	21 96       	adiw	r28, 0x01	; 1
 144:	c1 15       	cp	r28, r1
 146:	88 e0       	ldi	r24, 0x08	; 8
 148:	d8 07       	cpc	r29, r24
 14a:	88 f3       	brcs	.-30     	; 0x12e <SRAM_test+0x56>
		if (retreived_value != some_value) {
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 14c:	ff 92       	push	r15
 14e:	ef 92       	push	r14
 150:	1f 93       	push	r17
 152:	0f 93       	push	r16
 154:	80 e2       	ldi	r24, 0x20	; 32
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	9f 93       	push	r25
 15a:	8f 93       	push	r24
 15c:	0e 94 7d 01 	call	0x2fa	; 0x2fa <printf>
}
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	1f 91       	pop	r17
 172:	0f 91       	pop	r16
 174:	ff 90       	pop	r15
 176:	ef 90       	pop	r14
 178:	08 95       	ret

0000017a <SRAM_init>:

void SRAM_init(){
	set_bit(MCUCR, SRE);
 17a:	85 b7       	in	r24, 0x35	; 53
 17c:	80 68       	ori	r24, 0x80	; 128
 17e:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM2);
 180:	80 b7       	in	r24, 0x30	; 48
 182:	80 62       	ori	r24, 0x20	; 32
 184:	80 bf       	out	0x30, r24	; 48
 186:	08 95       	ret

00000188 <main>:
#include "ATmega162_programdriver.h"
#include "sram.h"

int main(void){
    /* Replace with your application code */
	USART_init(MYUBRR);
 188:	8f e1       	ldi	r24, 0x1F	; 31
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_init>
	SRAM_init();
 190:	0e 94 bd 00 	call	0x17a	; 0x17a <SRAM_init>
	SRAM_test();
 194:	0e 94 6c 00 	call	0xd8	; 0xd8 <SRAM_test>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 198:	2f ef       	ldi	r18, 0xFF	; 255
 19a:	8f ef       	ldi	r24, 0xFF	; 255
 19c:	9e e0       	ldi	r25, 0x0E	; 14
 19e:	21 50       	subi	r18, 0x01	; 1
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	90 40       	sbci	r25, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <main+0x16>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x20>
 1a8:	00 00       	nop
 1aa:	f6 cf       	rjmp	.-20     	; 0x198 <main+0x10>

000001ac <do_rand>:
 1ac:	8f 92       	push	r8
 1ae:	9f 92       	push	r9
 1b0:	af 92       	push	r10
 1b2:	bf 92       	push	r11
 1b4:	cf 92       	push	r12
 1b6:	df 92       	push	r13
 1b8:	ef 92       	push	r14
 1ba:	ff 92       	push	r15
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	ec 01       	movw	r28, r24
 1c2:	68 81       	ld	r22, Y
 1c4:	79 81       	ldd	r23, Y+1	; 0x01
 1c6:	8a 81       	ldd	r24, Y+2	; 0x02
 1c8:	9b 81       	ldd	r25, Y+3	; 0x03
 1ca:	61 15       	cp	r22, r1
 1cc:	71 05       	cpc	r23, r1
 1ce:	81 05       	cpc	r24, r1
 1d0:	91 05       	cpc	r25, r1
 1d2:	21 f4       	brne	.+8      	; 0x1dc <do_rand+0x30>
 1d4:	64 e2       	ldi	r22, 0x24	; 36
 1d6:	79 ed       	ldi	r23, 0xD9	; 217
 1d8:	8b e5       	ldi	r24, 0x5B	; 91
 1da:	97 e0       	ldi	r25, 0x07	; 7
 1dc:	2d e1       	ldi	r18, 0x1D	; 29
 1de:	33 ef       	ldi	r19, 0xF3	; 243
 1e0:	41 e0       	ldi	r20, 0x01	; 1
 1e2:	50 e0       	ldi	r21, 0x00	; 0
 1e4:	0e 94 98 05 	call	0xb30	; 0xb30 <__divmodsi4>
 1e8:	49 01       	movw	r8, r18
 1ea:	5a 01       	movw	r10, r20
 1ec:	9b 01       	movw	r18, r22
 1ee:	ac 01       	movw	r20, r24
 1f0:	a7 ea       	ldi	r26, 0xA7	; 167
 1f2:	b1 e4       	ldi	r27, 0x41	; 65
 1f4:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__muluhisi3>
 1f8:	6b 01       	movw	r12, r22
 1fa:	7c 01       	movw	r14, r24
 1fc:	ac ee       	ldi	r26, 0xEC	; 236
 1fe:	b4 ef       	ldi	r27, 0xF4	; 244
 200:	a5 01       	movw	r20, r10
 202:	94 01       	movw	r18, r8
 204:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__mulohisi3>
 208:	dc 01       	movw	r26, r24
 20a:	cb 01       	movw	r24, r22
 20c:	8c 0d       	add	r24, r12
 20e:	9d 1d       	adc	r25, r13
 210:	ae 1d       	adc	r26, r14
 212:	bf 1d       	adc	r27, r15
 214:	b7 ff       	sbrs	r27, 7
 216:	03 c0       	rjmp	.+6      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	a1 09       	sbc	r26, r1
 21c:	b0 48       	sbci	r27, 0x80	; 128
 21e:	88 83       	st	Y, r24
 220:	99 83       	std	Y+1, r25	; 0x01
 222:	aa 83       	std	Y+2, r26	; 0x02
 224:	bb 83       	std	Y+3, r27	; 0x03
 226:	9f 77       	andi	r25, 0x7F	; 127
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	ff 90       	pop	r15
 22e:	ef 90       	pop	r14
 230:	df 90       	pop	r13
 232:	cf 90       	pop	r12
 234:	bf 90       	pop	r11
 236:	af 90       	pop	r10
 238:	9f 90       	pop	r9
 23a:	8f 90       	pop	r8
 23c:	08 95       	ret

0000023e <rand_r>:
 23e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <do_rand>
 242:	08 95       	ret

00000244 <rand>:
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	91 e0       	ldi	r25, 0x01	; 1
 248:	0e 94 d6 00 	call	0x1ac	; 0x1ac <do_rand>
 24c:	08 95       	ret

0000024e <srand>:
 24e:	a0 e0       	ldi	r26, 0x00	; 0
 250:	b0 e0       	ldi	r27, 0x00	; 0
 252:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 256:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 25a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 25e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 262:	08 95       	ret

00000264 <fdevopen>:
 264:	0f 93       	push	r16
 266:	1f 93       	push	r17
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	00 97       	sbiw	r24, 0x00	; 0
 26e:	31 f4       	brne	.+12     	; 0x27c <fdevopen+0x18>
 270:	61 15       	cp	r22, r1
 272:	71 05       	cpc	r23, r1
 274:	19 f4       	brne	.+6      	; 0x27c <fdevopen+0x18>
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	3a c0       	rjmp	.+116    	; 0x2f0 <fdevopen+0x8c>
 27c:	8b 01       	movw	r16, r22
 27e:	ec 01       	movw	r28, r24
 280:	6e e0       	ldi	r22, 0x0E	; 14
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 a4 03 	call	0x748	; 0x748 <calloc>
 28c:	fc 01       	movw	r30, r24
 28e:	89 2b       	or	r24, r25
 290:	91 f3       	breq	.-28     	; 0x276 <fdevopen+0x12>
 292:	80 e8       	ldi	r24, 0x80	; 128
 294:	83 83       	std	Z+3, r24	; 0x03
 296:	01 15       	cp	r16, r1
 298:	11 05       	cpc	r17, r1
 29a:	71 f0       	breq	.+28     	; 0x2b8 <fdevopen+0x54>
 29c:	13 87       	std	Z+11, r17	; 0x0b
 29e:	02 87       	std	Z+10, r16	; 0x0a
 2a0:	81 e8       	ldi	r24, 0x81	; 129
 2a2:	83 83       	std	Z+3, r24	; 0x03
 2a4:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__data_end>
 2a8:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__data_end+0x1>
 2ac:	89 2b       	or	r24, r25
 2ae:	21 f4       	brne	.+8      	; 0x2b8 <fdevopen+0x54>
 2b0:	f0 93 7b 01 	sts	0x017B, r31	; 0x80017b <__data_end+0x1>
 2b4:	e0 93 7a 01 	sts	0x017A, r30	; 0x80017a <__data_end>
 2b8:	20 97       	sbiw	r28, 0x00	; 0
 2ba:	c9 f0       	breq	.+50     	; 0x2ee <fdevopen+0x8a>
 2bc:	d1 87       	std	Z+9, r29	; 0x09
 2be:	c0 87       	std	Z+8, r28	; 0x08
 2c0:	83 81       	ldd	r24, Z+3	; 0x03
 2c2:	82 60       	ori	r24, 0x02	; 2
 2c4:	83 83       	std	Z+3, r24	; 0x03
 2c6:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__data_end+0x2>
 2ca:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <__data_end+0x3>
 2ce:	89 2b       	or	r24, r25
 2d0:	71 f4       	brne	.+28     	; 0x2ee <fdevopen+0x8a>
 2d2:	f0 93 7d 01 	sts	0x017D, r31	; 0x80017d <__data_end+0x3>
 2d6:	e0 93 7c 01 	sts	0x017C, r30	; 0x80017c <__data_end+0x2>
 2da:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end+0x4>
 2de:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x5>
 2e2:	89 2b       	or	r24, r25
 2e4:	21 f4       	brne	.+8      	; 0x2ee <fdevopen+0x8a>
 2e6:	f0 93 7f 01 	sts	0x017F, r31	; 0x80017f <__data_end+0x5>
 2ea:	e0 93 7e 01 	sts	0x017E, r30	; 0x80017e <__data_end+0x4>
 2ee:	cf 01       	movw	r24, r30
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	1f 91       	pop	r17
 2f6:	0f 91       	pop	r16
 2f8:	08 95       	ret

000002fa <printf>:
 2fa:	a0 e0       	ldi	r26, 0x00	; 0
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	e3 e8       	ldi	r30, 0x83	; 131
 300:	f1 e0       	ldi	r31, 0x01	; 1
 302:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <__prologue_saves__+0x20>
 306:	ae 01       	movw	r20, r28
 308:	4b 5f       	subi	r20, 0xFB	; 251
 30a:	5f 4f       	sbci	r21, 0xFF	; 255
 30c:	fa 01       	movw	r30, r20
 30e:	61 91       	ld	r22, Z+
 310:	71 91       	ld	r23, Z+
 312:	af 01       	movw	r20, r30
 314:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__data_end+0x2>
 318:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <__data_end+0x3>
 31c:	0e 94 c3 01 	call	0x386	; 0x386 <vfprintf>
 320:	e2 e0       	ldi	r30, 0x02	; 2
 322:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__epilogue_restores__+0x20>

00000326 <puts>:
 326:	0f 93       	push	r16
 328:	1f 93       	push	r17
 32a:	cf 93       	push	r28
 32c:	df 93       	push	r29
 32e:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <__data_end+0x2>
 332:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <__data_end+0x3>
 336:	23 81       	ldd	r18, Z+3	; 0x03
 338:	21 ff       	sbrs	r18, 1
 33a:	1b c0       	rjmp	.+54     	; 0x372 <puts+0x4c>
 33c:	8c 01       	movw	r16, r24
 33e:	d0 e0       	ldi	r29, 0x00	; 0
 340:	c0 e0       	ldi	r28, 0x00	; 0
 342:	f8 01       	movw	r30, r16
 344:	81 91       	ld	r24, Z+
 346:	8f 01       	movw	r16, r30
 348:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end+0x2>
 34c:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x3>
 350:	db 01       	movw	r26, r22
 352:	18 96       	adiw	r26, 0x08	; 8
 354:	ed 91       	ld	r30, X+
 356:	fc 91       	ld	r31, X
 358:	19 97       	sbiw	r26, 0x09	; 9
 35a:	88 23       	and	r24, r24
 35c:	31 f0       	breq	.+12     	; 0x36a <puts+0x44>
 35e:	09 95       	icall
 360:	89 2b       	or	r24, r25
 362:	79 f3       	breq	.-34     	; 0x342 <puts+0x1c>
 364:	df ef       	ldi	r29, 0xFF	; 255
 366:	cf ef       	ldi	r28, 0xFF	; 255
 368:	ec cf       	rjmp	.-40     	; 0x342 <puts+0x1c>
 36a:	8a e0       	ldi	r24, 0x0A	; 10
 36c:	09 95       	icall
 36e:	89 2b       	or	r24, r25
 370:	19 f0       	breq	.+6      	; 0x378 <puts+0x52>
 372:	8f ef       	ldi	r24, 0xFF	; 255
 374:	9f ef       	ldi	r25, 0xFF	; 255
 376:	02 c0       	rjmp	.+4      	; 0x37c <puts+0x56>
 378:	8d 2f       	mov	r24, r29
 37a:	9c 2f       	mov	r25, r28
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	1f 91       	pop	r17
 382:	0f 91       	pop	r16
 384:	08 95       	ret

00000386 <vfprintf>:
 386:	ab e0       	ldi	r26, 0x0B	; 11
 388:	b0 e0       	ldi	r27, 0x00	; 0
 38a:	e9 ec       	ldi	r30, 0xC9	; 201
 38c:	f1 e0       	ldi	r31, 0x01	; 1
 38e:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__prologue_saves__>
 392:	6c 01       	movw	r12, r24
 394:	7b 01       	movw	r14, r22
 396:	8a 01       	movw	r16, r20
 398:	fc 01       	movw	r30, r24
 39a:	17 82       	std	Z+7, r1	; 0x07
 39c:	16 82       	std	Z+6, r1	; 0x06
 39e:	83 81       	ldd	r24, Z+3	; 0x03
 3a0:	81 ff       	sbrs	r24, 1
 3a2:	cc c1       	rjmp	.+920    	; 0x73c <__stack+0x23d>
 3a4:	ce 01       	movw	r24, r28
 3a6:	01 96       	adiw	r24, 0x01	; 1
 3a8:	3c 01       	movw	r6, r24
 3aa:	f6 01       	movw	r30, r12
 3ac:	93 81       	ldd	r25, Z+3	; 0x03
 3ae:	f7 01       	movw	r30, r14
 3b0:	93 fd       	sbrc	r25, 3
 3b2:	85 91       	lpm	r24, Z+
 3b4:	93 ff       	sbrs	r25, 3
 3b6:	81 91       	ld	r24, Z+
 3b8:	7f 01       	movw	r14, r30
 3ba:	88 23       	and	r24, r24
 3bc:	09 f4       	brne	.+2      	; 0x3c0 <vfprintf+0x3a>
 3be:	ba c1       	rjmp	.+884    	; 0x734 <__stack+0x235>
 3c0:	85 32       	cpi	r24, 0x25	; 37
 3c2:	39 f4       	brne	.+14     	; 0x3d2 <vfprintf+0x4c>
 3c4:	93 fd       	sbrc	r25, 3
 3c6:	85 91       	lpm	r24, Z+
 3c8:	93 ff       	sbrs	r25, 3
 3ca:	81 91       	ld	r24, Z+
 3cc:	7f 01       	movw	r14, r30
 3ce:	85 32       	cpi	r24, 0x25	; 37
 3d0:	29 f4       	brne	.+10     	; 0x3dc <vfprintf+0x56>
 3d2:	b6 01       	movw	r22, r12
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 3da:	e7 cf       	rjmp	.-50     	; 0x3aa <vfprintf+0x24>
 3dc:	91 2c       	mov	r9, r1
 3de:	21 2c       	mov	r2, r1
 3e0:	31 2c       	mov	r3, r1
 3e2:	ff e1       	ldi	r31, 0x1F	; 31
 3e4:	f3 15       	cp	r31, r3
 3e6:	d8 f0       	brcs	.+54     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 3e8:	8b 32       	cpi	r24, 0x2B	; 43
 3ea:	79 f0       	breq	.+30     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 3ec:	38 f4       	brcc	.+14     	; 0x3fc <vfprintf+0x76>
 3ee:	80 32       	cpi	r24, 0x20	; 32
 3f0:	79 f0       	breq	.+30     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3f2:	83 32       	cpi	r24, 0x23	; 35
 3f4:	a1 f4       	brne	.+40     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 3f6:	23 2d       	mov	r18, r3
 3f8:	20 61       	ori	r18, 0x10	; 16
 3fa:	1d c0       	rjmp	.+58     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 3fc:	8d 32       	cpi	r24, 0x2D	; 45
 3fe:	61 f0       	breq	.+24     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 400:	80 33       	cpi	r24, 0x30	; 48
 402:	69 f4       	brne	.+26     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 404:	23 2d       	mov	r18, r3
 406:	21 60       	ori	r18, 0x01	; 1
 408:	16 c0       	rjmp	.+44     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 40a:	83 2d       	mov	r24, r3
 40c:	82 60       	ori	r24, 0x02	; 2
 40e:	38 2e       	mov	r3, r24
 410:	e3 2d       	mov	r30, r3
 412:	e4 60       	ori	r30, 0x04	; 4
 414:	3e 2e       	mov	r3, r30
 416:	2a c0       	rjmp	.+84     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 418:	f3 2d       	mov	r31, r3
 41a:	f8 60       	ori	r31, 0x08	; 8
 41c:	1d c0       	rjmp	.+58     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 41e:	37 fc       	sbrc	r3, 7
 420:	2d c0       	rjmp	.+90     	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 422:	20 ed       	ldi	r18, 0xD0	; 208
 424:	28 0f       	add	r18, r24
 426:	2a 30       	cpi	r18, 0x0A	; 10
 428:	40 f0       	brcs	.+16     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 42a:	8e 32       	cpi	r24, 0x2E	; 46
 42c:	b9 f4       	brne	.+46     	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
 42e:	36 fc       	sbrc	r3, 6
 430:	81 c1       	rjmp	.+770    	; 0x734 <__stack+0x235>
 432:	23 2d       	mov	r18, r3
 434:	20 64       	ori	r18, 0x40	; 64
 436:	32 2e       	mov	r3, r18
 438:	19 c0       	rjmp	.+50     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 43a:	36 fe       	sbrs	r3, 6
 43c:	06 c0       	rjmp	.+12     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 43e:	8a e0       	ldi	r24, 0x0A	; 10
 440:	98 9e       	mul	r9, r24
 442:	20 0d       	add	r18, r0
 444:	11 24       	eor	r1, r1
 446:	92 2e       	mov	r9, r18
 448:	11 c0       	rjmp	.+34     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 44a:	ea e0       	ldi	r30, 0x0A	; 10
 44c:	2e 9e       	mul	r2, r30
 44e:	20 0d       	add	r18, r0
 450:	11 24       	eor	r1, r1
 452:	22 2e       	mov	r2, r18
 454:	f3 2d       	mov	r31, r3
 456:	f0 62       	ori	r31, 0x20	; 32
 458:	3f 2e       	mov	r3, r31
 45a:	08 c0       	rjmp	.+16     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 45c:	8c 36       	cpi	r24, 0x6C	; 108
 45e:	21 f4       	brne	.+8      	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 460:	83 2d       	mov	r24, r3
 462:	80 68       	ori	r24, 0x80	; 128
 464:	38 2e       	mov	r3, r24
 466:	02 c0       	rjmp	.+4      	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 468:	88 36       	cpi	r24, 0x68	; 104
 46a:	41 f4       	brne	.+16     	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 46c:	f7 01       	movw	r30, r14
 46e:	93 fd       	sbrc	r25, 3
 470:	85 91       	lpm	r24, Z+
 472:	93 ff       	sbrs	r25, 3
 474:	81 91       	ld	r24, Z+
 476:	7f 01       	movw	r14, r30
 478:	81 11       	cpse	r24, r1
 47a:	b3 cf       	rjmp	.-154    	; 0x3e2 <vfprintf+0x5c>
 47c:	98 2f       	mov	r25, r24
 47e:	9f 7d       	andi	r25, 0xDF	; 223
 480:	95 54       	subi	r25, 0x45	; 69
 482:	93 30       	cpi	r25, 0x03	; 3
 484:	28 f4       	brcc	.+10     	; 0x490 <__DATA_REGION_LENGTH__+0x90>
 486:	0c 5f       	subi	r16, 0xFC	; 252
 488:	1f 4f       	sbci	r17, 0xFF	; 255
 48a:	9f e3       	ldi	r25, 0x3F	; 63
 48c:	99 83       	std	Y+1, r25	; 0x01
 48e:	0d c0       	rjmp	.+26     	; 0x4aa <__DATA_REGION_LENGTH__+0xaa>
 490:	83 36       	cpi	r24, 0x63	; 99
 492:	31 f0       	breq	.+12     	; 0x4a0 <__DATA_REGION_LENGTH__+0xa0>
 494:	83 37       	cpi	r24, 0x73	; 115
 496:	71 f0       	breq	.+28     	; 0x4b4 <__DATA_REGION_LENGTH__+0xb4>
 498:	83 35       	cpi	r24, 0x53	; 83
 49a:	09 f0       	breq	.+2      	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
 49c:	59 c0       	rjmp	.+178    	; 0x550 <__stack+0x51>
 49e:	21 c0       	rjmp	.+66     	; 0x4e2 <__DATA_REGION_LENGTH__+0xe2>
 4a0:	f8 01       	movw	r30, r16
 4a2:	80 81       	ld	r24, Z
 4a4:	89 83       	std	Y+1, r24	; 0x01
 4a6:	0e 5f       	subi	r16, 0xFE	; 254
 4a8:	1f 4f       	sbci	r17, 0xFF	; 255
 4aa:	88 24       	eor	r8, r8
 4ac:	83 94       	inc	r8
 4ae:	91 2c       	mov	r9, r1
 4b0:	53 01       	movw	r10, r6
 4b2:	13 c0       	rjmp	.+38     	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 4b4:	28 01       	movw	r4, r16
 4b6:	f2 e0       	ldi	r31, 0x02	; 2
 4b8:	4f 0e       	add	r4, r31
 4ba:	51 1c       	adc	r5, r1
 4bc:	f8 01       	movw	r30, r16
 4be:	a0 80       	ld	r10, Z
 4c0:	b1 80       	ldd	r11, Z+1	; 0x01
 4c2:	36 fe       	sbrs	r3, 6
 4c4:	03 c0       	rjmp	.+6      	; 0x4cc <__DATA_REGION_LENGTH__+0xcc>
 4c6:	69 2d       	mov	r22, r9
 4c8:	70 e0       	ldi	r23, 0x00	; 0
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
 4cc:	6f ef       	ldi	r22, 0xFF	; 255
 4ce:	7f ef       	ldi	r23, 0xFF	; 255
 4d0:	c5 01       	movw	r24, r10
 4d2:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <strnlen>
 4d6:	4c 01       	movw	r8, r24
 4d8:	82 01       	movw	r16, r4
 4da:	f3 2d       	mov	r31, r3
 4dc:	ff 77       	andi	r31, 0x7F	; 127
 4de:	3f 2e       	mov	r3, r31
 4e0:	16 c0       	rjmp	.+44     	; 0x50e <__stack+0xf>
 4e2:	28 01       	movw	r4, r16
 4e4:	22 e0       	ldi	r18, 0x02	; 2
 4e6:	42 0e       	add	r4, r18
 4e8:	51 1c       	adc	r5, r1
 4ea:	f8 01       	movw	r30, r16
 4ec:	a0 80       	ld	r10, Z
 4ee:	b1 80       	ldd	r11, Z+1	; 0x01
 4f0:	36 fe       	sbrs	r3, 6
 4f2:	03 c0       	rjmp	.+6      	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4f4:	69 2d       	mov	r22, r9
 4f6:	70 e0       	ldi	r23, 0x00	; 0
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4fa:	6f ef       	ldi	r22, 0xFF	; 255
 4fc:	7f ef       	ldi	r23, 0xFF	; 255
 4fe:	c5 01       	movw	r24, r10
 500:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <strnlen_P>
 504:	4c 01       	movw	r8, r24
 506:	f3 2d       	mov	r31, r3
 508:	f0 68       	ori	r31, 0x80	; 128
 50a:	3f 2e       	mov	r3, r31
 50c:	82 01       	movw	r16, r4
 50e:	33 fc       	sbrc	r3, 3
 510:	1b c0       	rjmp	.+54     	; 0x548 <__stack+0x49>
 512:	82 2d       	mov	r24, r2
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	88 16       	cp	r8, r24
 518:	99 06       	cpc	r9, r25
 51a:	b0 f4       	brcc	.+44     	; 0x548 <__stack+0x49>
 51c:	b6 01       	movw	r22, r12
 51e:	80 e2       	ldi	r24, 0x20	; 32
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 526:	2a 94       	dec	r2
 528:	f4 cf       	rjmp	.-24     	; 0x512 <__stack+0x13>
 52a:	f5 01       	movw	r30, r10
 52c:	37 fc       	sbrc	r3, 7
 52e:	85 91       	lpm	r24, Z+
 530:	37 fe       	sbrs	r3, 7
 532:	81 91       	ld	r24, Z+
 534:	5f 01       	movw	r10, r30
 536:	b6 01       	movw	r22, r12
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 53e:	21 10       	cpse	r2, r1
 540:	2a 94       	dec	r2
 542:	21 e0       	ldi	r18, 0x01	; 1
 544:	82 1a       	sub	r8, r18
 546:	91 08       	sbc	r9, r1
 548:	81 14       	cp	r8, r1
 54a:	91 04       	cpc	r9, r1
 54c:	71 f7       	brne	.-36     	; 0x52a <__stack+0x2b>
 54e:	e8 c0       	rjmp	.+464    	; 0x720 <__stack+0x221>
 550:	84 36       	cpi	r24, 0x64	; 100
 552:	11 f0       	breq	.+4      	; 0x558 <__stack+0x59>
 554:	89 36       	cpi	r24, 0x69	; 105
 556:	41 f5       	brne	.+80     	; 0x5a8 <__stack+0xa9>
 558:	f8 01       	movw	r30, r16
 55a:	37 fe       	sbrs	r3, 7
 55c:	07 c0       	rjmp	.+14     	; 0x56c <__stack+0x6d>
 55e:	60 81       	ld	r22, Z
 560:	71 81       	ldd	r23, Z+1	; 0x01
 562:	82 81       	ldd	r24, Z+2	; 0x02
 564:	93 81       	ldd	r25, Z+3	; 0x03
 566:	0c 5f       	subi	r16, 0xFC	; 252
 568:	1f 4f       	sbci	r17, 0xFF	; 255
 56a:	08 c0       	rjmp	.+16     	; 0x57c <__stack+0x7d>
 56c:	60 81       	ld	r22, Z
 56e:	71 81       	ldd	r23, Z+1	; 0x01
 570:	07 2e       	mov	r0, r23
 572:	00 0c       	add	r0, r0
 574:	88 0b       	sbc	r24, r24
 576:	99 0b       	sbc	r25, r25
 578:	0e 5f       	subi	r16, 0xFE	; 254
 57a:	1f 4f       	sbci	r17, 0xFF	; 255
 57c:	f3 2d       	mov	r31, r3
 57e:	ff 76       	andi	r31, 0x6F	; 111
 580:	3f 2e       	mov	r3, r31
 582:	97 ff       	sbrs	r25, 7
 584:	09 c0       	rjmp	.+18     	; 0x598 <__stack+0x99>
 586:	90 95       	com	r25
 588:	80 95       	com	r24
 58a:	70 95       	com	r23
 58c:	61 95       	neg	r22
 58e:	7f 4f       	sbci	r23, 0xFF	; 255
 590:	8f 4f       	sbci	r24, 0xFF	; 255
 592:	9f 4f       	sbci	r25, 0xFF	; 255
 594:	f0 68       	ori	r31, 0x80	; 128
 596:	3f 2e       	mov	r3, r31
 598:	2a e0       	ldi	r18, 0x0A	; 10
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	a3 01       	movw	r20, r6
 59e:	0e 94 3a 05 	call	0xa74	; 0xa74 <__ultoa_invert>
 5a2:	88 2e       	mov	r8, r24
 5a4:	86 18       	sub	r8, r6
 5a6:	45 c0       	rjmp	.+138    	; 0x632 <__stack+0x133>
 5a8:	85 37       	cpi	r24, 0x75	; 117
 5aa:	31 f4       	brne	.+12     	; 0x5b8 <__stack+0xb9>
 5ac:	23 2d       	mov	r18, r3
 5ae:	2f 7e       	andi	r18, 0xEF	; 239
 5b0:	b2 2e       	mov	r11, r18
 5b2:	2a e0       	ldi	r18, 0x0A	; 10
 5b4:	30 e0       	ldi	r19, 0x00	; 0
 5b6:	25 c0       	rjmp	.+74     	; 0x602 <__stack+0x103>
 5b8:	93 2d       	mov	r25, r3
 5ba:	99 7f       	andi	r25, 0xF9	; 249
 5bc:	b9 2e       	mov	r11, r25
 5be:	8f 36       	cpi	r24, 0x6F	; 111
 5c0:	c1 f0       	breq	.+48     	; 0x5f2 <__stack+0xf3>
 5c2:	18 f4       	brcc	.+6      	; 0x5ca <__stack+0xcb>
 5c4:	88 35       	cpi	r24, 0x58	; 88
 5c6:	79 f0       	breq	.+30     	; 0x5e6 <__stack+0xe7>
 5c8:	b5 c0       	rjmp	.+362    	; 0x734 <__stack+0x235>
 5ca:	80 37       	cpi	r24, 0x70	; 112
 5cc:	19 f0       	breq	.+6      	; 0x5d4 <__stack+0xd5>
 5ce:	88 37       	cpi	r24, 0x78	; 120
 5d0:	21 f0       	breq	.+8      	; 0x5da <__stack+0xdb>
 5d2:	b0 c0       	rjmp	.+352    	; 0x734 <__stack+0x235>
 5d4:	e9 2f       	mov	r30, r25
 5d6:	e0 61       	ori	r30, 0x10	; 16
 5d8:	be 2e       	mov	r11, r30
 5da:	b4 fe       	sbrs	r11, 4
 5dc:	0d c0       	rjmp	.+26     	; 0x5f8 <__stack+0xf9>
 5de:	fb 2d       	mov	r31, r11
 5e0:	f4 60       	ori	r31, 0x04	; 4
 5e2:	bf 2e       	mov	r11, r31
 5e4:	09 c0       	rjmp	.+18     	; 0x5f8 <__stack+0xf9>
 5e6:	34 fe       	sbrs	r3, 4
 5e8:	0a c0       	rjmp	.+20     	; 0x5fe <__stack+0xff>
 5ea:	29 2f       	mov	r18, r25
 5ec:	26 60       	ori	r18, 0x06	; 6
 5ee:	b2 2e       	mov	r11, r18
 5f0:	06 c0       	rjmp	.+12     	; 0x5fe <__stack+0xff>
 5f2:	28 e0       	ldi	r18, 0x08	; 8
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	05 c0       	rjmp	.+10     	; 0x602 <__stack+0x103>
 5f8:	20 e1       	ldi	r18, 0x10	; 16
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <__stack+0x103>
 5fe:	20 e1       	ldi	r18, 0x10	; 16
 600:	32 e0       	ldi	r19, 0x02	; 2
 602:	f8 01       	movw	r30, r16
 604:	b7 fe       	sbrs	r11, 7
 606:	07 c0       	rjmp	.+14     	; 0x616 <__stack+0x117>
 608:	60 81       	ld	r22, Z
 60a:	71 81       	ldd	r23, Z+1	; 0x01
 60c:	82 81       	ldd	r24, Z+2	; 0x02
 60e:	93 81       	ldd	r25, Z+3	; 0x03
 610:	0c 5f       	subi	r16, 0xFC	; 252
 612:	1f 4f       	sbci	r17, 0xFF	; 255
 614:	06 c0       	rjmp	.+12     	; 0x622 <__stack+0x123>
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	0e 5f       	subi	r16, 0xFE	; 254
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	a3 01       	movw	r20, r6
 624:	0e 94 3a 05 	call	0xa74	; 0xa74 <__ultoa_invert>
 628:	88 2e       	mov	r8, r24
 62a:	86 18       	sub	r8, r6
 62c:	fb 2d       	mov	r31, r11
 62e:	ff 77       	andi	r31, 0x7F	; 127
 630:	3f 2e       	mov	r3, r31
 632:	36 fe       	sbrs	r3, 6
 634:	0d c0       	rjmp	.+26     	; 0x650 <__stack+0x151>
 636:	23 2d       	mov	r18, r3
 638:	2e 7f       	andi	r18, 0xFE	; 254
 63a:	a2 2e       	mov	r10, r18
 63c:	89 14       	cp	r8, r9
 63e:	58 f4       	brcc	.+22     	; 0x656 <__stack+0x157>
 640:	34 fe       	sbrs	r3, 4
 642:	0b c0       	rjmp	.+22     	; 0x65a <__stack+0x15b>
 644:	32 fc       	sbrc	r3, 2
 646:	09 c0       	rjmp	.+18     	; 0x65a <__stack+0x15b>
 648:	83 2d       	mov	r24, r3
 64a:	8e 7e       	andi	r24, 0xEE	; 238
 64c:	a8 2e       	mov	r10, r24
 64e:	05 c0       	rjmp	.+10     	; 0x65a <__stack+0x15b>
 650:	b8 2c       	mov	r11, r8
 652:	a3 2c       	mov	r10, r3
 654:	03 c0       	rjmp	.+6      	; 0x65c <__stack+0x15d>
 656:	b8 2c       	mov	r11, r8
 658:	01 c0       	rjmp	.+2      	; 0x65c <__stack+0x15d>
 65a:	b9 2c       	mov	r11, r9
 65c:	a4 fe       	sbrs	r10, 4
 65e:	0f c0       	rjmp	.+30     	; 0x67e <__stack+0x17f>
 660:	fe 01       	movw	r30, r28
 662:	e8 0d       	add	r30, r8
 664:	f1 1d       	adc	r31, r1
 666:	80 81       	ld	r24, Z
 668:	80 33       	cpi	r24, 0x30	; 48
 66a:	21 f4       	brne	.+8      	; 0x674 <__stack+0x175>
 66c:	9a 2d       	mov	r25, r10
 66e:	99 7e       	andi	r25, 0xE9	; 233
 670:	a9 2e       	mov	r10, r25
 672:	09 c0       	rjmp	.+18     	; 0x686 <__stack+0x187>
 674:	a2 fe       	sbrs	r10, 2
 676:	06 c0       	rjmp	.+12     	; 0x684 <__stack+0x185>
 678:	b3 94       	inc	r11
 67a:	b3 94       	inc	r11
 67c:	04 c0       	rjmp	.+8      	; 0x686 <__stack+0x187>
 67e:	8a 2d       	mov	r24, r10
 680:	86 78       	andi	r24, 0x86	; 134
 682:	09 f0       	breq	.+2      	; 0x686 <__stack+0x187>
 684:	b3 94       	inc	r11
 686:	a3 fc       	sbrc	r10, 3
 688:	11 c0       	rjmp	.+34     	; 0x6ac <__stack+0x1ad>
 68a:	a0 fe       	sbrs	r10, 0
 68c:	06 c0       	rjmp	.+12     	; 0x69a <__stack+0x19b>
 68e:	b2 14       	cp	r11, r2
 690:	88 f4       	brcc	.+34     	; 0x6b4 <__stack+0x1b5>
 692:	28 0c       	add	r2, r8
 694:	92 2c       	mov	r9, r2
 696:	9b 18       	sub	r9, r11
 698:	0e c0       	rjmp	.+28     	; 0x6b6 <__stack+0x1b7>
 69a:	b2 14       	cp	r11, r2
 69c:	60 f4       	brcc	.+24     	; 0x6b6 <__stack+0x1b7>
 69e:	b6 01       	movw	r22, r12
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 6a8:	b3 94       	inc	r11
 6aa:	f7 cf       	rjmp	.-18     	; 0x69a <__stack+0x19b>
 6ac:	b2 14       	cp	r11, r2
 6ae:	18 f4       	brcc	.+6      	; 0x6b6 <__stack+0x1b7>
 6b0:	2b 18       	sub	r2, r11
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <__stack+0x1b9>
 6b4:	98 2c       	mov	r9, r8
 6b6:	21 2c       	mov	r2, r1
 6b8:	a4 fe       	sbrs	r10, 4
 6ba:	10 c0       	rjmp	.+32     	; 0x6dc <__stack+0x1dd>
 6bc:	b6 01       	movw	r22, r12
 6be:	80 e3       	ldi	r24, 0x30	; 48
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 6c6:	a2 fe       	sbrs	r10, 2
 6c8:	17 c0       	rjmp	.+46     	; 0x6f8 <__stack+0x1f9>
 6ca:	a1 fc       	sbrc	r10, 1
 6cc:	03 c0       	rjmp	.+6      	; 0x6d4 <__stack+0x1d5>
 6ce:	88 e7       	ldi	r24, 0x78	; 120
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <__stack+0x1d9>
 6d4:	88 e5       	ldi	r24, 0x58	; 88
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	b6 01       	movw	r22, r12
 6da:	0c c0       	rjmp	.+24     	; 0x6f4 <__stack+0x1f5>
 6dc:	8a 2d       	mov	r24, r10
 6de:	86 78       	andi	r24, 0x86	; 134
 6e0:	59 f0       	breq	.+22     	; 0x6f8 <__stack+0x1f9>
 6e2:	a1 fe       	sbrs	r10, 1
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <__stack+0x1eb>
 6e6:	8b e2       	ldi	r24, 0x2B	; 43
 6e8:	01 c0       	rjmp	.+2      	; 0x6ec <__stack+0x1ed>
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	a7 fc       	sbrc	r10, 7
 6ee:	8d e2       	ldi	r24, 0x2D	; 45
 6f0:	b6 01       	movw	r22, r12
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 6f8:	89 14       	cp	r8, r9
 6fa:	38 f4       	brcc	.+14     	; 0x70a <__stack+0x20b>
 6fc:	b6 01       	movw	r22, r12
 6fe:	80 e3       	ldi	r24, 0x30	; 48
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 706:	9a 94       	dec	r9
 708:	f7 cf       	rjmp	.-18     	; 0x6f8 <__stack+0x1f9>
 70a:	8a 94       	dec	r8
 70c:	f3 01       	movw	r30, r6
 70e:	e8 0d       	add	r30, r8
 710:	f1 1d       	adc	r31, r1
 712:	80 81       	ld	r24, Z
 714:	b6 01       	movw	r22, r12
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 71c:	81 10       	cpse	r8, r1
 71e:	f5 cf       	rjmp	.-22     	; 0x70a <__stack+0x20b>
 720:	22 20       	and	r2, r2
 722:	09 f4       	brne	.+2      	; 0x726 <__stack+0x227>
 724:	42 ce       	rjmp	.-892    	; 0x3aa <vfprintf+0x24>
 726:	b6 01       	movw	r22, r12
 728:	80 e2       	ldi	r24, 0x20	; 32
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	0e 94 fe 04 	call	0x9fc	; 0x9fc <fputc>
 730:	2a 94       	dec	r2
 732:	f6 cf       	rjmp	.-20     	; 0x720 <__stack+0x221>
 734:	f6 01       	movw	r30, r12
 736:	86 81       	ldd	r24, Z+6	; 0x06
 738:	97 81       	ldd	r25, Z+7	; 0x07
 73a:	02 c0       	rjmp	.+4      	; 0x740 <__stack+0x241>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f ef       	ldi	r25, 0xFF	; 255
 740:	2b 96       	adiw	r28, 0x0b	; 11
 742:	e2 e1       	ldi	r30, 0x12	; 18
 744:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__epilogue_restores__>

00000748 <calloc>:
 748:	0f 93       	push	r16
 74a:	1f 93       	push	r17
 74c:	cf 93       	push	r28
 74e:	df 93       	push	r29
 750:	86 9f       	mul	r24, r22
 752:	80 01       	movw	r16, r0
 754:	87 9f       	mul	r24, r23
 756:	10 0d       	add	r17, r0
 758:	96 9f       	mul	r25, r22
 75a:	10 0d       	add	r17, r0
 75c:	11 24       	eor	r1, r1
 75e:	c8 01       	movw	r24, r16
 760:	0e 94 c0 03 	call	0x780	; 0x780 <malloc>
 764:	ec 01       	movw	r28, r24
 766:	00 97       	sbiw	r24, 0x00	; 0
 768:	29 f0       	breq	.+10     	; 0x774 <calloc+0x2c>
 76a:	a8 01       	movw	r20, r16
 76c:	60 e0       	ldi	r22, 0x00	; 0
 76e:	70 e0       	ldi	r23, 0x00	; 0
 770:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <memset>
 774:	ce 01       	movw	r24, r28
 776:	df 91       	pop	r29
 778:	cf 91       	pop	r28
 77a:	1f 91       	pop	r17
 77c:	0f 91       	pop	r16
 77e:	08 95       	ret

00000780 <malloc>:
 780:	0f 93       	push	r16
 782:	1f 93       	push	r17
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	82 30       	cpi	r24, 0x02	; 2
 78a:	91 05       	cpc	r25, r1
 78c:	10 f4       	brcc	.+4      	; 0x792 <malloc+0x12>
 78e:	82 e0       	ldi	r24, 0x02	; 2
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <__flp>
 796:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <__flp+0x1>
 79a:	20 e0       	ldi	r18, 0x00	; 0
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	a0 e0       	ldi	r26, 0x00	; 0
 7a0:	b0 e0       	ldi	r27, 0x00	; 0
 7a2:	30 97       	sbiw	r30, 0x00	; 0
 7a4:	19 f1       	breq	.+70     	; 0x7ec <malloc+0x6c>
 7a6:	40 81       	ld	r20, Z
 7a8:	51 81       	ldd	r21, Z+1	; 0x01
 7aa:	02 81       	ldd	r16, Z+2	; 0x02
 7ac:	13 81       	ldd	r17, Z+3	; 0x03
 7ae:	48 17       	cp	r20, r24
 7b0:	59 07       	cpc	r21, r25
 7b2:	c8 f0       	brcs	.+50     	; 0x7e6 <malloc+0x66>
 7b4:	84 17       	cp	r24, r20
 7b6:	95 07       	cpc	r25, r21
 7b8:	69 f4       	brne	.+26     	; 0x7d4 <malloc+0x54>
 7ba:	10 97       	sbiw	r26, 0x00	; 0
 7bc:	31 f0       	breq	.+12     	; 0x7ca <malloc+0x4a>
 7be:	12 96       	adiw	r26, 0x02	; 2
 7c0:	0c 93       	st	X, r16
 7c2:	12 97       	sbiw	r26, 0x02	; 2
 7c4:	13 96       	adiw	r26, 0x03	; 3
 7c6:	1c 93       	st	X, r17
 7c8:	27 c0       	rjmp	.+78     	; 0x818 <malloc+0x98>
 7ca:	00 93 82 01 	sts	0x0182, r16	; 0x800182 <__flp>
 7ce:	10 93 83 01 	sts	0x0183, r17	; 0x800183 <__flp+0x1>
 7d2:	22 c0       	rjmp	.+68     	; 0x818 <malloc+0x98>
 7d4:	21 15       	cp	r18, r1
 7d6:	31 05       	cpc	r19, r1
 7d8:	19 f0       	breq	.+6      	; 0x7e0 <malloc+0x60>
 7da:	42 17       	cp	r20, r18
 7dc:	53 07       	cpc	r21, r19
 7de:	18 f4       	brcc	.+6      	; 0x7e6 <malloc+0x66>
 7e0:	9a 01       	movw	r18, r20
 7e2:	bd 01       	movw	r22, r26
 7e4:	ef 01       	movw	r28, r30
 7e6:	df 01       	movw	r26, r30
 7e8:	f8 01       	movw	r30, r16
 7ea:	db cf       	rjmp	.-74     	; 0x7a2 <malloc+0x22>
 7ec:	21 15       	cp	r18, r1
 7ee:	31 05       	cpc	r19, r1
 7f0:	f9 f0       	breq	.+62     	; 0x830 <malloc+0xb0>
 7f2:	28 1b       	sub	r18, r24
 7f4:	39 0b       	sbc	r19, r25
 7f6:	24 30       	cpi	r18, 0x04	; 4
 7f8:	31 05       	cpc	r19, r1
 7fa:	80 f4       	brcc	.+32     	; 0x81c <malloc+0x9c>
 7fc:	8a 81       	ldd	r24, Y+2	; 0x02
 7fe:	9b 81       	ldd	r25, Y+3	; 0x03
 800:	61 15       	cp	r22, r1
 802:	71 05       	cpc	r23, r1
 804:	21 f0       	breq	.+8      	; 0x80e <malloc+0x8e>
 806:	fb 01       	movw	r30, r22
 808:	93 83       	std	Z+3, r25	; 0x03
 80a:	82 83       	std	Z+2, r24	; 0x02
 80c:	04 c0       	rjmp	.+8      	; 0x816 <malloc+0x96>
 80e:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <__flp+0x1>
 812:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__flp>
 816:	fe 01       	movw	r30, r28
 818:	32 96       	adiw	r30, 0x02	; 2
 81a:	44 c0       	rjmp	.+136    	; 0x8a4 <malloc+0x124>
 81c:	fe 01       	movw	r30, r28
 81e:	e2 0f       	add	r30, r18
 820:	f3 1f       	adc	r31, r19
 822:	81 93       	st	Z+, r24
 824:	91 93       	st	Z+, r25
 826:	22 50       	subi	r18, 0x02	; 2
 828:	31 09       	sbc	r19, r1
 82a:	39 83       	std	Y+1, r19	; 0x01
 82c:	28 83       	st	Y, r18
 82e:	3a c0       	rjmp	.+116    	; 0x8a4 <malloc+0x124>
 830:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__brkval>
 834:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__brkval+0x1>
 838:	23 2b       	or	r18, r19
 83a:	41 f4       	brne	.+16     	; 0x84c <malloc+0xcc>
 83c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 840:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 844:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <__brkval+0x1>
 848:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <__brkval>
 84c:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 850:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 854:	21 15       	cp	r18, r1
 856:	31 05       	cpc	r19, r1
 858:	41 f4       	brne	.+16     	; 0x86a <malloc+0xea>
 85a:	2d b7       	in	r18, 0x3d	; 61
 85c:	3e b7       	in	r19, 0x3e	; 62
 85e:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 862:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 866:	24 1b       	sub	r18, r20
 868:	35 0b       	sbc	r19, r21
 86a:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <__brkval>
 86e:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <__brkval+0x1>
 872:	e2 17       	cp	r30, r18
 874:	f3 07       	cpc	r31, r19
 876:	a0 f4       	brcc	.+40     	; 0x8a0 <malloc+0x120>
 878:	2e 1b       	sub	r18, r30
 87a:	3f 0b       	sbc	r19, r31
 87c:	28 17       	cp	r18, r24
 87e:	39 07       	cpc	r19, r25
 880:	78 f0       	brcs	.+30     	; 0x8a0 <malloc+0x120>
 882:	ac 01       	movw	r20, r24
 884:	4e 5f       	subi	r20, 0xFE	; 254
 886:	5f 4f       	sbci	r21, 0xFF	; 255
 888:	24 17       	cp	r18, r20
 88a:	35 07       	cpc	r19, r21
 88c:	48 f0       	brcs	.+18     	; 0x8a0 <malloc+0x120>
 88e:	4e 0f       	add	r20, r30
 890:	5f 1f       	adc	r21, r31
 892:	50 93 81 01 	sts	0x0181, r21	; 0x800181 <__brkval+0x1>
 896:	40 93 80 01 	sts	0x0180, r20	; 0x800180 <__brkval>
 89a:	81 93       	st	Z+, r24
 89c:	91 93       	st	Z+, r25
 89e:	02 c0       	rjmp	.+4      	; 0x8a4 <malloc+0x124>
 8a0:	e0 e0       	ldi	r30, 0x00	; 0
 8a2:	f0 e0       	ldi	r31, 0x00	; 0
 8a4:	cf 01       	movw	r24, r30
 8a6:	df 91       	pop	r29
 8a8:	cf 91       	pop	r28
 8aa:	1f 91       	pop	r17
 8ac:	0f 91       	pop	r16
 8ae:	08 95       	ret

000008b0 <free>:
 8b0:	cf 93       	push	r28
 8b2:	df 93       	push	r29
 8b4:	00 97       	sbiw	r24, 0x00	; 0
 8b6:	09 f4       	brne	.+2      	; 0x8ba <free+0xa>
 8b8:	81 c0       	rjmp	.+258    	; 0x9bc <free+0x10c>
 8ba:	fc 01       	movw	r30, r24
 8bc:	32 97       	sbiw	r30, 0x02	; 2
 8be:	13 82       	std	Z+3, r1	; 0x03
 8c0:	12 82       	std	Z+2, r1	; 0x02
 8c2:	a0 91 82 01 	lds	r26, 0x0182	; 0x800182 <__flp>
 8c6:	b0 91 83 01 	lds	r27, 0x0183	; 0x800183 <__flp+0x1>
 8ca:	10 97       	sbiw	r26, 0x00	; 0
 8cc:	81 f4       	brne	.+32     	; 0x8ee <free+0x3e>
 8ce:	20 81       	ld	r18, Z
 8d0:	31 81       	ldd	r19, Z+1	; 0x01
 8d2:	82 0f       	add	r24, r18
 8d4:	93 1f       	adc	r25, r19
 8d6:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__brkval>
 8da:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__brkval+0x1>
 8de:	28 17       	cp	r18, r24
 8e0:	39 07       	cpc	r19, r25
 8e2:	51 f5       	brne	.+84     	; 0x938 <free+0x88>
 8e4:	f0 93 81 01 	sts	0x0181, r31	; 0x800181 <__brkval+0x1>
 8e8:	e0 93 80 01 	sts	0x0180, r30	; 0x800180 <__brkval>
 8ec:	67 c0       	rjmp	.+206    	; 0x9bc <free+0x10c>
 8ee:	ed 01       	movw	r28, r26
 8f0:	20 e0       	ldi	r18, 0x00	; 0
 8f2:	30 e0       	ldi	r19, 0x00	; 0
 8f4:	ce 17       	cp	r28, r30
 8f6:	df 07       	cpc	r29, r31
 8f8:	40 f4       	brcc	.+16     	; 0x90a <free+0x5a>
 8fa:	4a 81       	ldd	r20, Y+2	; 0x02
 8fc:	5b 81       	ldd	r21, Y+3	; 0x03
 8fe:	9e 01       	movw	r18, r28
 900:	41 15       	cp	r20, r1
 902:	51 05       	cpc	r21, r1
 904:	f1 f0       	breq	.+60     	; 0x942 <free+0x92>
 906:	ea 01       	movw	r28, r20
 908:	f5 cf       	rjmp	.-22     	; 0x8f4 <free+0x44>
 90a:	d3 83       	std	Z+3, r29	; 0x03
 90c:	c2 83       	std	Z+2, r28	; 0x02
 90e:	40 81       	ld	r20, Z
 910:	51 81       	ldd	r21, Z+1	; 0x01
 912:	84 0f       	add	r24, r20
 914:	95 1f       	adc	r25, r21
 916:	c8 17       	cp	r28, r24
 918:	d9 07       	cpc	r29, r25
 91a:	59 f4       	brne	.+22     	; 0x932 <free+0x82>
 91c:	88 81       	ld	r24, Y
 91e:	99 81       	ldd	r25, Y+1	; 0x01
 920:	84 0f       	add	r24, r20
 922:	95 1f       	adc	r25, r21
 924:	02 96       	adiw	r24, 0x02	; 2
 926:	91 83       	std	Z+1, r25	; 0x01
 928:	80 83       	st	Z, r24
 92a:	8a 81       	ldd	r24, Y+2	; 0x02
 92c:	9b 81       	ldd	r25, Y+3	; 0x03
 92e:	93 83       	std	Z+3, r25	; 0x03
 930:	82 83       	std	Z+2, r24	; 0x02
 932:	21 15       	cp	r18, r1
 934:	31 05       	cpc	r19, r1
 936:	29 f4       	brne	.+10     	; 0x942 <free+0x92>
 938:	f0 93 83 01 	sts	0x0183, r31	; 0x800183 <__flp+0x1>
 93c:	e0 93 82 01 	sts	0x0182, r30	; 0x800182 <__flp>
 940:	3d c0       	rjmp	.+122    	; 0x9bc <free+0x10c>
 942:	e9 01       	movw	r28, r18
 944:	fb 83       	std	Y+3, r31	; 0x03
 946:	ea 83       	std	Y+2, r30	; 0x02
 948:	49 91       	ld	r20, Y+
 94a:	59 91       	ld	r21, Y+
 94c:	c4 0f       	add	r28, r20
 94e:	d5 1f       	adc	r29, r21
 950:	ec 17       	cp	r30, r28
 952:	fd 07       	cpc	r31, r29
 954:	61 f4       	brne	.+24     	; 0x96e <free+0xbe>
 956:	80 81       	ld	r24, Z
 958:	91 81       	ldd	r25, Z+1	; 0x01
 95a:	84 0f       	add	r24, r20
 95c:	95 1f       	adc	r25, r21
 95e:	02 96       	adiw	r24, 0x02	; 2
 960:	e9 01       	movw	r28, r18
 962:	99 83       	std	Y+1, r25	; 0x01
 964:	88 83       	st	Y, r24
 966:	82 81       	ldd	r24, Z+2	; 0x02
 968:	93 81       	ldd	r25, Z+3	; 0x03
 96a:	9b 83       	std	Y+3, r25	; 0x03
 96c:	8a 83       	std	Y+2, r24	; 0x02
 96e:	e0 e0       	ldi	r30, 0x00	; 0
 970:	f0 e0       	ldi	r31, 0x00	; 0
 972:	12 96       	adiw	r26, 0x02	; 2
 974:	8d 91       	ld	r24, X+
 976:	9c 91       	ld	r25, X
 978:	13 97       	sbiw	r26, 0x03	; 3
 97a:	00 97       	sbiw	r24, 0x00	; 0
 97c:	19 f0       	breq	.+6      	; 0x984 <free+0xd4>
 97e:	fd 01       	movw	r30, r26
 980:	dc 01       	movw	r26, r24
 982:	f7 cf       	rjmp	.-18     	; 0x972 <free+0xc2>
 984:	8d 91       	ld	r24, X+
 986:	9c 91       	ld	r25, X
 988:	11 97       	sbiw	r26, 0x01	; 1
 98a:	9d 01       	movw	r18, r26
 98c:	2e 5f       	subi	r18, 0xFE	; 254
 98e:	3f 4f       	sbci	r19, 0xFF	; 255
 990:	82 0f       	add	r24, r18
 992:	93 1f       	adc	r25, r19
 994:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__brkval>
 998:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__brkval+0x1>
 99c:	28 17       	cp	r18, r24
 99e:	39 07       	cpc	r19, r25
 9a0:	69 f4       	brne	.+26     	; 0x9bc <free+0x10c>
 9a2:	30 97       	sbiw	r30, 0x00	; 0
 9a4:	29 f4       	brne	.+10     	; 0x9b0 <free+0x100>
 9a6:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <__flp+0x1>
 9aa:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <__flp>
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <free+0x104>
 9b0:	13 82       	std	Z+3, r1	; 0x03
 9b2:	12 82       	std	Z+2, r1	; 0x02
 9b4:	b0 93 81 01 	sts	0x0181, r27	; 0x800181 <__brkval+0x1>
 9b8:	a0 93 80 01 	sts	0x0180, r26	; 0x800180 <__brkval>
 9bc:	df 91       	pop	r29
 9be:	cf 91       	pop	r28
 9c0:	08 95       	ret

000009c2 <strnlen_P>:
 9c2:	fc 01       	movw	r30, r24
 9c4:	05 90       	lpm	r0, Z+
 9c6:	61 50       	subi	r22, 0x01	; 1
 9c8:	70 40       	sbci	r23, 0x00	; 0
 9ca:	01 10       	cpse	r0, r1
 9cc:	d8 f7       	brcc	.-10     	; 0x9c4 <strnlen_P+0x2>
 9ce:	80 95       	com	r24
 9d0:	90 95       	com	r25
 9d2:	8e 0f       	add	r24, r30
 9d4:	9f 1f       	adc	r25, r31
 9d6:	08 95       	ret

000009d8 <memset>:
 9d8:	dc 01       	movw	r26, r24
 9da:	01 c0       	rjmp	.+2      	; 0x9de <memset+0x6>
 9dc:	6d 93       	st	X+, r22
 9de:	41 50       	subi	r20, 0x01	; 1
 9e0:	50 40       	sbci	r21, 0x00	; 0
 9e2:	e0 f7       	brcc	.-8      	; 0x9dc <memset+0x4>
 9e4:	08 95       	ret

000009e6 <strnlen>:
 9e6:	fc 01       	movw	r30, r24
 9e8:	61 50       	subi	r22, 0x01	; 1
 9ea:	70 40       	sbci	r23, 0x00	; 0
 9ec:	01 90       	ld	r0, Z+
 9ee:	01 10       	cpse	r0, r1
 9f0:	d8 f7       	brcc	.-10     	; 0x9e8 <strnlen+0x2>
 9f2:	80 95       	com	r24
 9f4:	90 95       	com	r25
 9f6:	8e 0f       	add	r24, r30
 9f8:	9f 1f       	adc	r25, r31
 9fa:	08 95       	ret

000009fc <fputc>:
 9fc:	0f 93       	push	r16
 9fe:	1f 93       	push	r17
 a00:	cf 93       	push	r28
 a02:	df 93       	push	r29
 a04:	fb 01       	movw	r30, r22
 a06:	23 81       	ldd	r18, Z+3	; 0x03
 a08:	21 fd       	sbrc	r18, 1
 a0a:	03 c0       	rjmp	.+6      	; 0xa12 <fputc+0x16>
 a0c:	8f ef       	ldi	r24, 0xFF	; 255
 a0e:	9f ef       	ldi	r25, 0xFF	; 255
 a10:	2c c0       	rjmp	.+88     	; 0xa6a <fputc+0x6e>
 a12:	22 ff       	sbrs	r18, 2
 a14:	16 c0       	rjmp	.+44     	; 0xa42 <fputc+0x46>
 a16:	46 81       	ldd	r20, Z+6	; 0x06
 a18:	57 81       	ldd	r21, Z+7	; 0x07
 a1a:	24 81       	ldd	r18, Z+4	; 0x04
 a1c:	35 81       	ldd	r19, Z+5	; 0x05
 a1e:	42 17       	cp	r20, r18
 a20:	53 07       	cpc	r21, r19
 a22:	44 f4       	brge	.+16     	; 0xa34 <fputc+0x38>
 a24:	a0 81       	ld	r26, Z
 a26:	b1 81       	ldd	r27, Z+1	; 0x01
 a28:	9d 01       	movw	r18, r26
 a2a:	2f 5f       	subi	r18, 0xFF	; 255
 a2c:	3f 4f       	sbci	r19, 0xFF	; 255
 a2e:	31 83       	std	Z+1, r19	; 0x01
 a30:	20 83       	st	Z, r18
 a32:	8c 93       	st	X, r24
 a34:	26 81       	ldd	r18, Z+6	; 0x06
 a36:	37 81       	ldd	r19, Z+7	; 0x07
 a38:	2f 5f       	subi	r18, 0xFF	; 255
 a3a:	3f 4f       	sbci	r19, 0xFF	; 255
 a3c:	37 83       	std	Z+7, r19	; 0x07
 a3e:	26 83       	std	Z+6, r18	; 0x06
 a40:	14 c0       	rjmp	.+40     	; 0xa6a <fputc+0x6e>
 a42:	8b 01       	movw	r16, r22
 a44:	ec 01       	movw	r28, r24
 a46:	fb 01       	movw	r30, r22
 a48:	00 84       	ldd	r0, Z+8	; 0x08
 a4a:	f1 85       	ldd	r31, Z+9	; 0x09
 a4c:	e0 2d       	mov	r30, r0
 a4e:	09 95       	icall
 a50:	89 2b       	or	r24, r25
 a52:	e1 f6       	brne	.-72     	; 0xa0c <fputc+0x10>
 a54:	d8 01       	movw	r26, r16
 a56:	16 96       	adiw	r26, 0x06	; 6
 a58:	8d 91       	ld	r24, X+
 a5a:	9c 91       	ld	r25, X
 a5c:	17 97       	sbiw	r26, 0x07	; 7
 a5e:	01 96       	adiw	r24, 0x01	; 1
 a60:	17 96       	adiw	r26, 0x07	; 7
 a62:	9c 93       	st	X, r25
 a64:	8e 93       	st	-X, r24
 a66:	16 97       	sbiw	r26, 0x06	; 6
 a68:	ce 01       	movw	r24, r28
 a6a:	df 91       	pop	r29
 a6c:	cf 91       	pop	r28
 a6e:	1f 91       	pop	r17
 a70:	0f 91       	pop	r16
 a72:	08 95       	ret

00000a74 <__ultoa_invert>:
 a74:	fa 01       	movw	r30, r20
 a76:	aa 27       	eor	r26, r26
 a78:	28 30       	cpi	r18, 0x08	; 8
 a7a:	51 f1       	breq	.+84     	; 0xad0 <__ultoa_invert+0x5c>
 a7c:	20 31       	cpi	r18, 0x10	; 16
 a7e:	81 f1       	breq	.+96     	; 0xae0 <__ultoa_invert+0x6c>
 a80:	e8 94       	clt
 a82:	6f 93       	push	r22
 a84:	6e 7f       	andi	r22, 0xFE	; 254
 a86:	6e 5f       	subi	r22, 0xFE	; 254
 a88:	7f 4f       	sbci	r23, 0xFF	; 255
 a8a:	8f 4f       	sbci	r24, 0xFF	; 255
 a8c:	9f 4f       	sbci	r25, 0xFF	; 255
 a8e:	af 4f       	sbci	r26, 0xFF	; 255
 a90:	b1 e0       	ldi	r27, 0x01	; 1
 a92:	3e d0       	rcall	.+124    	; 0xb10 <__ultoa_invert+0x9c>
 a94:	b4 e0       	ldi	r27, 0x04	; 4
 a96:	3c d0       	rcall	.+120    	; 0xb10 <__ultoa_invert+0x9c>
 a98:	67 0f       	add	r22, r23
 a9a:	78 1f       	adc	r23, r24
 a9c:	89 1f       	adc	r24, r25
 a9e:	9a 1f       	adc	r25, r26
 aa0:	a1 1d       	adc	r26, r1
 aa2:	68 0f       	add	r22, r24
 aa4:	79 1f       	adc	r23, r25
 aa6:	8a 1f       	adc	r24, r26
 aa8:	91 1d       	adc	r25, r1
 aaa:	a1 1d       	adc	r26, r1
 aac:	6a 0f       	add	r22, r26
 aae:	71 1d       	adc	r23, r1
 ab0:	81 1d       	adc	r24, r1
 ab2:	91 1d       	adc	r25, r1
 ab4:	a1 1d       	adc	r26, r1
 ab6:	20 d0       	rcall	.+64     	; 0xaf8 <__ultoa_invert+0x84>
 ab8:	09 f4       	brne	.+2      	; 0xabc <__ultoa_invert+0x48>
 aba:	68 94       	set
 abc:	3f 91       	pop	r19
 abe:	2a e0       	ldi	r18, 0x0A	; 10
 ac0:	26 9f       	mul	r18, r22
 ac2:	11 24       	eor	r1, r1
 ac4:	30 19       	sub	r19, r0
 ac6:	30 5d       	subi	r19, 0xD0	; 208
 ac8:	31 93       	st	Z+, r19
 aca:	de f6       	brtc	.-74     	; 0xa82 <__ultoa_invert+0xe>
 acc:	cf 01       	movw	r24, r30
 ace:	08 95       	ret
 ad0:	46 2f       	mov	r20, r22
 ad2:	47 70       	andi	r20, 0x07	; 7
 ad4:	40 5d       	subi	r20, 0xD0	; 208
 ad6:	41 93       	st	Z+, r20
 ad8:	b3 e0       	ldi	r27, 0x03	; 3
 ada:	0f d0       	rcall	.+30     	; 0xafa <__ultoa_invert+0x86>
 adc:	c9 f7       	brne	.-14     	; 0xad0 <__ultoa_invert+0x5c>
 ade:	f6 cf       	rjmp	.-20     	; 0xacc <__ultoa_invert+0x58>
 ae0:	46 2f       	mov	r20, r22
 ae2:	4f 70       	andi	r20, 0x0F	; 15
 ae4:	40 5d       	subi	r20, 0xD0	; 208
 ae6:	4a 33       	cpi	r20, 0x3A	; 58
 ae8:	18 f0       	brcs	.+6      	; 0xaf0 <__ultoa_invert+0x7c>
 aea:	49 5d       	subi	r20, 0xD9	; 217
 aec:	31 fd       	sbrc	r19, 1
 aee:	40 52       	subi	r20, 0x20	; 32
 af0:	41 93       	st	Z+, r20
 af2:	02 d0       	rcall	.+4      	; 0xaf8 <__ultoa_invert+0x84>
 af4:	a9 f7       	brne	.-22     	; 0xae0 <__ultoa_invert+0x6c>
 af6:	ea cf       	rjmp	.-44     	; 0xacc <__ultoa_invert+0x58>
 af8:	b4 e0       	ldi	r27, 0x04	; 4
 afa:	a6 95       	lsr	r26
 afc:	97 95       	ror	r25
 afe:	87 95       	ror	r24
 b00:	77 95       	ror	r23
 b02:	67 95       	ror	r22
 b04:	ba 95       	dec	r27
 b06:	c9 f7       	brne	.-14     	; 0xafa <__ultoa_invert+0x86>
 b08:	00 97       	sbiw	r24, 0x00	; 0
 b0a:	61 05       	cpc	r22, r1
 b0c:	71 05       	cpc	r23, r1
 b0e:	08 95       	ret
 b10:	9b 01       	movw	r18, r22
 b12:	ac 01       	movw	r20, r24
 b14:	0a 2e       	mov	r0, r26
 b16:	06 94       	lsr	r0
 b18:	57 95       	ror	r21
 b1a:	47 95       	ror	r20
 b1c:	37 95       	ror	r19
 b1e:	27 95       	ror	r18
 b20:	ba 95       	dec	r27
 b22:	c9 f7       	brne	.-14     	; 0xb16 <__ultoa_invert+0xa2>
 b24:	62 0f       	add	r22, r18
 b26:	73 1f       	adc	r23, r19
 b28:	84 1f       	adc	r24, r20
 b2a:	95 1f       	adc	r25, r21
 b2c:	a0 1d       	adc	r26, r0
 b2e:	08 95       	ret

00000b30 <__divmodsi4>:
 b30:	05 2e       	mov	r0, r21
 b32:	97 fb       	bst	r25, 7
 b34:	1e f4       	brtc	.+6      	; 0xb3c <__divmodsi4+0xc>
 b36:	00 94       	com	r0
 b38:	0e 94 af 05 	call	0xb5e	; 0xb5e <__negsi2>
 b3c:	57 fd       	sbrc	r21, 7
 b3e:	07 d0       	rcall	.+14     	; 0xb4e <__divmodsi4_neg2>
 b40:	0e 94 01 06 	call	0xc02	; 0xc02 <__udivmodsi4>
 b44:	07 fc       	sbrc	r0, 7
 b46:	03 d0       	rcall	.+6      	; 0xb4e <__divmodsi4_neg2>
 b48:	4e f4       	brtc	.+18     	; 0xb5c <__divmodsi4_exit>
 b4a:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <__negsi2>

00000b4e <__divmodsi4_neg2>:
 b4e:	50 95       	com	r21
 b50:	40 95       	com	r20
 b52:	30 95       	com	r19
 b54:	21 95       	neg	r18
 b56:	3f 4f       	sbci	r19, 0xFF	; 255
 b58:	4f 4f       	sbci	r20, 0xFF	; 255
 b5a:	5f 4f       	sbci	r21, 0xFF	; 255

00000b5c <__divmodsi4_exit>:
 b5c:	08 95       	ret

00000b5e <__negsi2>:
 b5e:	90 95       	com	r25
 b60:	80 95       	com	r24
 b62:	70 95       	com	r23
 b64:	61 95       	neg	r22
 b66:	7f 4f       	sbci	r23, 0xFF	; 255
 b68:	8f 4f       	sbci	r24, 0xFF	; 255
 b6a:	9f 4f       	sbci	r25, 0xFF	; 255
 b6c:	08 95       	ret

00000b6e <__muluhisi3>:
 b6e:	0e 94 23 06 	call	0xc46	; 0xc46 <__umulhisi3>
 b72:	a5 9f       	mul	r26, r21
 b74:	90 0d       	add	r25, r0
 b76:	b4 9f       	mul	r27, r20
 b78:	90 0d       	add	r25, r0
 b7a:	a4 9f       	mul	r26, r20
 b7c:	80 0d       	add	r24, r0
 b7e:	91 1d       	adc	r25, r1
 b80:	11 24       	eor	r1, r1
 b82:	08 95       	ret

00000b84 <__mulshisi3>:
 b84:	b7 ff       	sbrs	r27, 7
 b86:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__muluhisi3>

00000b8a <__mulohisi3>:
 b8a:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__muluhisi3>
 b8e:	82 1b       	sub	r24, r18
 b90:	93 0b       	sbc	r25, r19
 b92:	08 95       	ret

00000b94 <__prologue_saves__>:
 b94:	2f 92       	push	r2
 b96:	3f 92       	push	r3
 b98:	4f 92       	push	r4
 b9a:	5f 92       	push	r5
 b9c:	6f 92       	push	r6
 b9e:	7f 92       	push	r7
 ba0:	8f 92       	push	r8
 ba2:	9f 92       	push	r9
 ba4:	af 92       	push	r10
 ba6:	bf 92       	push	r11
 ba8:	cf 92       	push	r12
 baa:	df 92       	push	r13
 bac:	ef 92       	push	r14
 bae:	ff 92       	push	r15
 bb0:	0f 93       	push	r16
 bb2:	1f 93       	push	r17
 bb4:	cf 93       	push	r28
 bb6:	df 93       	push	r29
 bb8:	cd b7       	in	r28, 0x3d	; 61
 bba:	de b7       	in	r29, 0x3e	; 62
 bbc:	ca 1b       	sub	r28, r26
 bbe:	db 0b       	sbc	r29, r27
 bc0:	0f b6       	in	r0, 0x3f	; 63
 bc2:	f8 94       	cli
 bc4:	de bf       	out	0x3e, r29	; 62
 bc6:	0f be       	out	0x3f, r0	; 63
 bc8:	cd bf       	out	0x3d, r28	; 61
 bca:	09 94       	ijmp

00000bcc <__epilogue_restores__>:
 bcc:	2a 88       	ldd	r2, Y+18	; 0x12
 bce:	39 88       	ldd	r3, Y+17	; 0x11
 bd0:	48 88       	ldd	r4, Y+16	; 0x10
 bd2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bd4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bd6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bd8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bda:	9b 84       	ldd	r9, Y+11	; 0x0b
 bdc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bde:	b9 84       	ldd	r11, Y+9	; 0x09
 be0:	c8 84       	ldd	r12, Y+8	; 0x08
 be2:	df 80       	ldd	r13, Y+7	; 0x07
 be4:	ee 80       	ldd	r14, Y+6	; 0x06
 be6:	fd 80       	ldd	r15, Y+5	; 0x05
 be8:	0c 81       	ldd	r16, Y+4	; 0x04
 bea:	1b 81       	ldd	r17, Y+3	; 0x03
 bec:	aa 81       	ldd	r26, Y+2	; 0x02
 bee:	b9 81       	ldd	r27, Y+1	; 0x01
 bf0:	ce 0f       	add	r28, r30
 bf2:	d1 1d       	adc	r29, r1
 bf4:	0f b6       	in	r0, 0x3f	; 63
 bf6:	f8 94       	cli
 bf8:	de bf       	out	0x3e, r29	; 62
 bfa:	0f be       	out	0x3f, r0	; 63
 bfc:	cd bf       	out	0x3d, r28	; 61
 bfe:	ed 01       	movw	r28, r26
 c00:	08 95       	ret

00000c02 <__udivmodsi4>:
 c02:	a1 e2       	ldi	r26, 0x21	; 33
 c04:	1a 2e       	mov	r1, r26
 c06:	aa 1b       	sub	r26, r26
 c08:	bb 1b       	sub	r27, r27
 c0a:	fd 01       	movw	r30, r26
 c0c:	0d c0       	rjmp	.+26     	; 0xc28 <__udivmodsi4_ep>

00000c0e <__udivmodsi4_loop>:
 c0e:	aa 1f       	adc	r26, r26
 c10:	bb 1f       	adc	r27, r27
 c12:	ee 1f       	adc	r30, r30
 c14:	ff 1f       	adc	r31, r31
 c16:	a2 17       	cp	r26, r18
 c18:	b3 07       	cpc	r27, r19
 c1a:	e4 07       	cpc	r30, r20
 c1c:	f5 07       	cpc	r31, r21
 c1e:	20 f0       	brcs	.+8      	; 0xc28 <__udivmodsi4_ep>
 c20:	a2 1b       	sub	r26, r18
 c22:	b3 0b       	sbc	r27, r19
 c24:	e4 0b       	sbc	r30, r20
 c26:	f5 0b       	sbc	r31, r21

00000c28 <__udivmodsi4_ep>:
 c28:	66 1f       	adc	r22, r22
 c2a:	77 1f       	adc	r23, r23
 c2c:	88 1f       	adc	r24, r24
 c2e:	99 1f       	adc	r25, r25
 c30:	1a 94       	dec	r1
 c32:	69 f7       	brne	.-38     	; 0xc0e <__udivmodsi4_loop>
 c34:	60 95       	com	r22
 c36:	70 95       	com	r23
 c38:	80 95       	com	r24
 c3a:	90 95       	com	r25
 c3c:	9b 01       	movw	r18, r22
 c3e:	ac 01       	movw	r20, r24
 c40:	bd 01       	movw	r22, r26
 c42:	cf 01       	movw	r24, r30
 c44:	08 95       	ret

00000c46 <__umulhisi3>:
 c46:	a2 9f       	mul	r26, r18
 c48:	b0 01       	movw	r22, r0
 c4a:	b3 9f       	mul	r27, r19
 c4c:	c0 01       	movw	r24, r0
 c4e:	a3 9f       	mul	r26, r19
 c50:	70 0d       	add	r23, r0
 c52:	81 1d       	adc	r24, r1
 c54:	11 24       	eor	r1, r1
 c56:	91 1d       	adc	r25, r1
 c58:	b2 9f       	mul	r27, r18
 c5a:	70 0d       	add	r23, r0
 c5c:	81 1d       	adc	r24, r1
 c5e:	11 24       	eor	r1, r1
 c60:	91 1d       	adc	r25, r1
 c62:	08 95       	ret

00000c64 <_exit>:
 c64:	f8 94       	cli

00000c66 <__stop_program>:
 c66:	ff cf       	rjmp	.-2      	; 0xc66 <__stop_program>
