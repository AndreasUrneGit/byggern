
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c2  00800100  00001570  00001604  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001570  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001c2  008001c2  000016c6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001724  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000177f  00000000  00000000  000018d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c86  00000000  00000000  0000304f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c2d  00000000  00000000  00003cd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  00004904  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000063a  00000000  00000000  00004c04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000091c  00000000  00000000  0000523e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00005b5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__ctors_end>
       4:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
       8:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
       c:	0c 94 db 03 	jmp	0x7b6	; 0x7b6 <__vector_3>
      10:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      14:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      18:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      1c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      20:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      24:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      28:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      2c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      30:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      34:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      38:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      3c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      40:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      44:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      48:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      4c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      50:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      54:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      58:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      5c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      60:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      64:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      68:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      6c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font5>:
     1ec:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     1fc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     20c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     21c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     22c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     23c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     24c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     25c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     26c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     27c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     28c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     29c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     2ac:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     2bc:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     2cc:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     2dc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     2ec:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     2fc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     30c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     31c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     32c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     33c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     34c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     35c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     36c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     37c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     38c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     39c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     3ac:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     3bc:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000003c7 <font8>:
	...
     3cf:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     3df:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     3ef:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     3ff:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     40f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     41f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     42f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     43f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     44f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     45f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     46f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     47f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     48f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     49f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     4af:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     4bf:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     4cf:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     4df:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     4ef:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     4ff:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     50f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     51f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     52f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     53f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     54f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     55f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     56f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     57f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     58f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     59f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     5af:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     5bf:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     5cf:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     5df:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     5ef:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     5ff:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     60f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     61f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     62f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     63f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     64f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     65f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     66f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     67f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     68f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     69f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     6af:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000006c0 <__ctors_end>:
     6c0:	11 24       	eor	r1, r1
     6c2:	1f be       	out	0x3f, r1	; 63
     6c4:	cf ef       	ldi	r28, 0xFF	; 255
     6c6:	d4 e0       	ldi	r29, 0x04	; 4
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	cd bf       	out	0x3d, r28	; 61

000006cc <__do_copy_data>:
     6cc:	11 e0       	ldi	r17, 0x01	; 1
     6ce:	a0 e0       	ldi	r26, 0x00	; 0
     6d0:	b1 e0       	ldi	r27, 0x01	; 1
     6d2:	e0 e7       	ldi	r30, 0x70	; 112
     6d4:	f5 e1       	ldi	r31, 0x15	; 21
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__do_copy_data+0x10>
     6d8:	05 90       	lpm	r0, Z+
     6da:	0d 92       	st	X+, r0
     6dc:	a2 3c       	cpi	r26, 0xC2	; 194
     6de:	b1 07       	cpc	r27, r17
     6e0:	d9 f7       	brne	.-10     	; 0x6d8 <__do_copy_data+0xc>

000006e2 <__do_clear_bss>:
     6e2:	21 e0       	ldi	r18, 0x01	; 1
     6e4:	a2 ec       	ldi	r26, 0xC2	; 194
     6e6:	b1 e0       	ldi	r27, 0x01	; 1
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <.do_clear_bss_start>

000006ea <.do_clear_bss_loop>:
     6ea:	1d 92       	st	X+, r1

000006ec <.do_clear_bss_start>:
     6ec:	ac 3c       	cpi	r26, 0xCC	; 204
     6ee:	b2 07       	cpc	r27, r18
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <.do_clear_bss_loop>
     6f2:	0e 94 55 05 	call	0xaaa	; 0xaaa <main>
     6f6:	0c 94 b6 0a 	jmp	0x156c	; 0x156c <_exit>

000006fa <__bad_interrupt>:
     6fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006fe <ADC_init>:
	*slider_right = adc_addr[0];
	*slider_left = adc_addr[0];
	*joystick_x = adc_addr[0];
	
	adc_addr[0] = 0;
}
     6fe:	eb e8       	ldi	r30, 0x8B	; 139
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	80 81       	ld	r24, Z
     704:	80 64       	ori	r24, 0x40	; 64
     706:	80 83       	st	Z, r24
     708:	ea e8       	ldi	r30, 0x8A	; 138
     70a:	f0 e0       	ldi	r31, 0x00	; 0
     70c:	80 81       	ld	r24, Z
     70e:	81 60       	ori	r24, 0x01	; 1
     710:	80 83       	st	Z, r24
     712:	80 81       	ld	r24, Z
     714:	88 60       	ori	r24, 0x08	; 8
     716:	80 83       	st	Z, r24
     718:	81 b3       	in	r24, 0x11	; 17
     71a:	80 61       	ori	r24, 0x10	; 16
     71c:	81 bb       	out	0x11, r24	; 17
     71e:	08 95       	ret

00000720 <ADC_test>:


void ADC_test(){
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
	volatile char* adc_addr = (char*)0x1400;
	uint8_t data;
	
	
	data = adc_addr[0];
     728:	c0 e0       	ldi	r28, 0x00	; 0
     72a:	d4 e1       	ldi	r29, 0x14	; 20
     72c:	88 81       	ld	r24, Y
	printf("%8d\r", data);
     72e:	1f 92       	push	r1
     730:	8f 93       	push	r24
     732:	8a e0       	ldi	r24, 0x0A	; 10
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	9f 93       	push	r25
     738:	8f 93       	push	r24
     73a:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
	data = adc_addr[0];
     73e:	88 81       	ld	r24, Y
	printf("%8d", data);
     740:	1f 92       	push	r1
     742:	8f 93       	push	r24
     744:	0f e0       	ldi	r16, 0x0F	; 15
     746:	11 e0       	ldi	r17, 0x01	; 1
     748:	1f 93       	push	r17
     74a:	0f 93       	push	r16
     74c:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
	data = adc_addr[0];
     750:	88 81       	ld	r24, Y
	printf("%8d", data);
     752:	1f 92       	push	r1
     754:	8f 93       	push	r24
     756:	1f 93       	push	r17
     758:	0f 93       	push	r16
     75a:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
	data = adc_addr[0];
     75e:	88 81       	ld	r24, Y
	printf("%8d\n\n", data);
     760:	1f 92       	push	r1
     762:	8f 93       	push	r24
     764:	83 e1       	ldi	r24, 0x13	; 19
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	9f 93       	push	r25
     76a:	8f 93       	push	r24
     76c:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
	
	adc_addr[0] = 0;
     770:	18 82       	st	Y, r1
     772:	8d b7       	in	r24, 0x3d	; 61
     774:	9e b7       	in	r25, 0x3e	; 62
     776:	40 96       	adiw	r24, 0x10	; 16
     778:	0f b6       	in	r0, 0x3f	; 63
     77a:	f8 94       	cli
     77c:	9e bf       	out	0x3e, r25	; 62
     77e:	0f be       	out	0x3f, r0	; 63
     780:	8d bf       	out	0x3d, r24	; 61
     782:	df 91       	pop	r29
     784:	cf 91       	pop	r28
     786:	1f 91       	pop	r17
     788:	0f 91       	pop	r16
     78a:	08 95       	ret

0000078c <USART_transmit>:
}

void USART_transmit(unsigned char data){
	// wait for empty transmit buffer

	loop_until_bit_is_set(UCSR0A, UDRE0);
     78c:	5d 9b       	sbis	0x0b, 5	; 11
     78e:	fe cf       	rjmp	.-4      	; 0x78c <USART_transmit>
	//put data into buffer, sends the data
	UDR0 = data;
     790:	8c b9       	out	0x0c, r24	; 12
     792:	08 95       	ret

00000794 <USART_receive>:
}
unsigned char USART_receive( void ){
	// Wait for data to be received

	loop_until_bit_is_set(UCSR0A, RXC0);
     794:	5f 9b       	sbis	0x0b, 7	; 11
     796:	fe cf       	rjmp	.-4      	; 0x794 <USART_receive>
	// Get and return received data from buffer
	return UDR0;
     798:	8c b1       	in	r24, 0x0c	; 12
     79a:	08 95       	ret

0000079c <USART_init>:
 */ 
#include "ATmega162_programdriver.h"

void USART_init(unsigned int ubrr){
	// Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     79c:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     79e:	89 b9       	out	0x09, r24	; 9
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     7a0:	88 e1       	ldi	r24, 0x18	; 24
     7a2:	8a b9       	out	0x0a, r24	; 10
	// Set frame format: 8data, 2stop bit
	UCSR0C = (1<<URSEL0)| (1 << USBS0) |(3<<UCSZ00);
     7a4:	8e e8       	ldi	r24, 0x8E	; 142
     7a6:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_transmit, USART_receive);
     7a8:	6a ec       	ldi	r22, 0xCA	; 202
     7aa:	73 e0       	ldi	r23, 0x03	; 3
     7ac:	86 ec       	ldi	r24, 0xC6	; 198
     7ae:	93 e0       	ldi	r25, 0x03	; 3
     7b0:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fdevopen>
     7b4:	08 95       	ret

000007b6 <__vector_3>:
	//enable INT2 in the General Interrupt Control Register (GICR)
	set_bit(GICR, INT2);
	
}

ISR(INT2_vect){
     7b6:	1f 92       	push	r1
     7b8:	0f 92       	push	r0
     7ba:	0f b6       	in	r0, 0x3f	; 63
     7bc:	0f 92       	push	r0
     7be:	11 24       	eor	r1, r1

     7c0:	0f 90       	pop	r0
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	0f 90       	pop	r0
     7c6:	1f 90       	pop	r1
     7c8:	18 95       	reti

000007ca <oled_write_command>:
}

void oled_pos(uint8_t line, uint8_t column){
	oled_goto_line(line);
	oled_goto_column(column);
}
     7ca:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe34>
     7ce:	08 95       	ret

000007d0 <oled_write_data>:
     7d0:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x1034>
     7d4:	08 95       	ret

000007d6 <oled_init_program>:
     7d6:	8e ea       	ldi	r24, 0xAE	; 174
     7d8:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     7dc:	81 ea       	ldi	r24, 0xA1	; 161
     7de:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     7e2:	8a ed       	ldi	r24, 0xDA	; 218
     7e4:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     7e8:	82 e1       	ldi	r24, 0x12	; 18
     7ea:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     7ee:	88 ec       	ldi	r24, 0xC8	; 200
     7f0:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     7f4:	88 ea       	ldi	r24, 0xA8	; 168
     7f6:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     7fa:	8f e3       	ldi	r24, 0x3F	; 63
     7fc:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     800:	85 ed       	ldi	r24, 0xD5	; 213
     802:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     806:	80 e8       	ldi	r24, 0x80	; 128
     808:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     80c:	81 e8       	ldi	r24, 0x81	; 129
     80e:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     812:	80 e5       	ldi	r24, 0x50	; 80
     814:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     818:	89 ed       	ldi	r24, 0xD9	; 217
     81a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     81e:	81 e2       	ldi	r24, 0x21	; 33
     820:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     824:	80 e2       	ldi	r24, 0x20	; 32
     826:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     82a:	82 e0       	ldi	r24, 0x02	; 2
     82c:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     830:	8b ed       	ldi	r24, 0xDB	; 219
     832:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     836:	80 e3       	ldi	r24, 0x30	; 48
     838:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     83c:	8d ea       	ldi	r24, 0xAD	; 173
     83e:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     848:	84 ea       	ldi	r24, 0xA4	; 164
     84a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     84e:	86 ea       	ldi	r24, 0xA6	; 166
     850:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     854:	8f ea       	ldi	r24, 0xAF	; 175
     856:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     85a:	08 95       	ret

0000085c <oled_goto_line>:
     85c:	80 55       	subi	r24, 0x50	; 80
     85e:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     862:	08 95       	ret

00000864 <oled_goto_column>:
     864:	cf 93       	push	r28
     866:	c8 2f       	mov	r28, r24
     868:	8f 70       	andi	r24, 0x0F	; 15
     86a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     86e:	8c 2f       	mov	r24, r28
     870:	82 95       	swap	r24
     872:	8f 70       	andi	r24, 0x0F	; 15
     874:	80 5f       	subi	r24, 0xF0	; 240
     876:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_write_command>
     87a:	cf 91       	pop	r28
     87c:	08 95       	ret

0000087e <oled_clear_line>:

void oled_clear_line(uint8_t line){
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
	oled_goto_line(line);
     882:	0e 94 2e 04 	call	0x85c	; 0x85c <oled_goto_line>
	for(int col = 0; col < 128; col++){
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
     88a:	04 c0       	rjmp	.+8      	; 0x894 <oled_clear_line+0x16>
		oled_write_data(0);
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <oled_write_data>
	oled_goto_column(column);
}

void oled_clear_line(uint8_t line){
	oled_goto_line(line);
	for(int col = 0; col < 128; col++){
     892:	21 96       	adiw	r28, 0x01	; 1
     894:	c0 38       	cpi	r28, 0x80	; 128
     896:	d1 05       	cpc	r29, r1
     898:	cc f3       	brlt	.-14     	; 0x88c <oled_clear_line+0xe>
		oled_write_data(0);
	}
}
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	08 95       	ret

000008a0 <oled_clear_screen>:
}
void oled_goto_column(uint8_t column){
	oled_write_command(column & (0b1111));
	oled_write_command(0x10 + (column >> 4));
}
void oled_clear_screen(){
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
	for(int line = 0; line < 8; line++){
     8a4:	c0 e0       	ldi	r28, 0x00	; 0
     8a6:	d0 e0       	ldi	r29, 0x00	; 0
     8a8:	04 c0       	rjmp	.+8      	; 0x8b2 <oled_clear_screen+0x12>
		oled_clear_line(line);
     8aa:	8c 2f       	mov	r24, r28
     8ac:	0e 94 3f 04 	call	0x87e	; 0x87e <oled_clear_line>
void oled_goto_column(uint8_t column){
	oled_write_command(column & (0b1111));
	oled_write_command(0x10 + (column >> 4));
}
void oled_clear_screen(){
	for(int line = 0; line < 8; line++){
     8b0:	21 96       	adiw	r28, 0x01	; 1
     8b2:	c8 30       	cpi	r28, 0x08	; 8
     8b4:	d1 05       	cpc	r29, r1
     8b6:	cc f3       	brlt	.-14     	; 0x8aa <oled_clear_screen+0xa>
		oled_clear_line(line);
	}
}
     8b8:	df 91       	pop	r29
     8ba:	cf 91       	pop	r28
     8bc:	08 95       	ret

000008be <oled_reset>:

void oled_reset(){
	oled_clear_screen();
     8be:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_clear_screen>
	oled_goto_line(0);
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	0e 94 2e 04 	call	0x85c	; 0x85c <oled_goto_line>
	oled_goto_column(0);
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	0e 94 32 04 	call	0x864	; 0x864 <oled_goto_column>
     8ce:	08 95       	ret

000008d0 <oled_putchar>:
	for(int col = 0; col < 128; col++){
		oled_write_data(0);
	}
}

void oled_putchar(const char ch, uint8_t font_size){
     8d0:	1f 93       	push	r17
     8d2:	cf 93       	push	r28
     8d4:	df 93       	push	r29
     8d6:	d8 2f       	mov	r29, r24
     8d8:	c6 2f       	mov	r28, r22

	if(font_size == 4){
     8da:	64 30       	cpi	r22, 0x04	; 4
     8dc:	a9 f4       	brne	.+42     	; 0x908 <oled_putchar+0x38>
     8de:	10 c0       	rjmp	.+32     	; 0x900 <oled_putchar+0x30>
		for(uint8_t column = 0; column < font_size; column++){
			oled_write_data(pgm_read_byte(&(font4[ch - 32][column])));
     8e0:	ed 2f       	mov	r30, r29
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	b0 97       	sbiw	r30, 0x20	; 32
     8e6:	ee 0f       	add	r30, r30
     8e8:	ff 1f       	adc	r31, r31
     8ea:	ee 0f       	add	r30, r30
     8ec:	ff 1f       	adc	r31, r31
     8ee:	e1 0f       	add	r30, r17
     8f0:	f1 1d       	adc	r31, r1
     8f2:	e0 59       	subi	r30, 0x90	; 144
     8f4:	ff 4f       	sbci	r31, 0xFF	; 255
     8f6:	84 91       	lpm	r24, Z
     8f8:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <oled_write_data>
}

void oled_putchar(const char ch, uint8_t font_size){

	if(font_size == 4){
		for(uint8_t column = 0; column < font_size; column++){
     8fc:	1f 5f       	subi	r17, 0xFF	; 255
     8fe:	01 c0       	rjmp	.+2      	; 0x902 <oled_putchar+0x32>
     900:	10 e0       	ldi	r17, 0x00	; 0
     902:	1c 17       	cp	r17, r28
     904:	68 f3       	brcs	.-38     	; 0x8e0 <oled_putchar+0x10>
     906:	2e c0       	rjmp	.+92     	; 0x964 <oled_putchar+0x94>
			oled_write_data(pgm_read_byte(&(font4[ch - 32][column])));
		}
	}
	else if(font_size == 5){
     908:	65 30       	cpi	r22, 0x05	; 5
     90a:	a9 f0       	breq	.+42     	; 0x936 <oled_putchar+0x66>
     90c:	10 e0       	ldi	r17, 0x00	; 0
     90e:	28 c0       	rjmp	.+80     	; 0x960 <oled_putchar+0x90>
		for(uint8_t column = 0; column < font_size; column++){
			oled_write_data(pgm_read_byte(&(font5[ch - 32][column])));
     910:	8d 2f       	mov	r24, r29
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	80 97       	sbiw	r24, 0x20	; 32
     916:	fc 01       	movw	r30, r24
     918:	ee 0f       	add	r30, r30
     91a:	ff 1f       	adc	r31, r31
     91c:	ee 0f       	add	r30, r30
     91e:	ff 1f       	adc	r31, r31
     920:	e8 0f       	add	r30, r24
     922:	f9 1f       	adc	r31, r25
     924:	e1 0f       	add	r30, r17
     926:	f1 1d       	adc	r31, r1
     928:	e4 51       	subi	r30, 0x14	; 20
     92a:	fe 4f       	sbci	r31, 0xFE	; 254
     92c:	84 91       	lpm	r24, Z
     92e:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <oled_write_data>
		for(uint8_t column = 0; column < font_size; column++){
			oled_write_data(pgm_read_byte(&(font4[ch - 32][column])));
		}
	}
	else if(font_size == 5){
		for(uint8_t column = 0; column < font_size; column++){
     932:	1f 5f       	subi	r17, 0xFF	; 255
     934:	01 c0       	rjmp	.+2      	; 0x938 <oled_putchar+0x68>
     936:	10 e0       	ldi	r17, 0x00	; 0
     938:	1c 17       	cp	r17, r28
     93a:	50 f3       	brcs	.-44     	; 0x910 <oled_putchar+0x40>
     93c:	13 c0       	rjmp	.+38     	; 0x964 <oled_putchar+0x94>
			oled_write_data(pgm_read_byte(&(font5[ch - 32][column])));
		}
	}
	else{
		for(uint8_t column = 0; column < font_size; column++){
			oled_write_data(pgm_read_byte(&(font8[ch - 32][column])));
     93e:	ed 2f       	mov	r30, r29
     940:	f0 e0       	ldi	r31, 0x00	; 0
     942:	b0 97       	sbiw	r30, 0x20	; 32
     944:	ee 0f       	add	r30, r30
     946:	ff 1f       	adc	r31, r31
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	ee 0f       	add	r30, r30
     94e:	ff 1f       	adc	r31, r31
     950:	e1 0f       	add	r30, r17
     952:	f1 1d       	adc	r31, r1
     954:	e9 53       	subi	r30, 0x39	; 57
     956:	fc 4f       	sbci	r31, 0xFC	; 252
     958:	84 91       	lpm	r24, Z
     95a:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <oled_write_data>
		for(uint8_t column = 0; column < font_size; column++){
			oled_write_data(pgm_read_byte(&(font5[ch - 32][column])));
		}
	}
	else{
		for(uint8_t column = 0; column < font_size; column++){
     95e:	1f 5f       	subi	r17, 0xFF	; 255
     960:	1c 17       	cp	r17, r28
     962:	68 f3       	brcs	.-38     	; 0x93e <oled_putchar+0x6e>
			oled_write_data(pgm_read_byte(&(font8[ch - 32][column])));
		}
	}
}
     964:	df 91       	pop	r29
     966:	cf 91       	pop	r28
     968:	1f 91       	pop	r17
     96a:	08 95       	ret

0000096c <oled_print>:

void oled_print(const char* message, uint8_t font_size){
     96c:	ef 92       	push	r14
     96e:	ff 92       	push	r15
     970:	0f 93       	push	r16
     972:	1f 93       	push	r17
     974:	cf 93       	push	r28
     976:	df 93       	push	r29
     978:	7c 01       	movw	r14, r24
     97a:	d6 2f       	mov	r29, r22
	size_t size = strlen(message);
     97c:	fc 01       	movw	r30, r24
     97e:	01 90       	ld	r0, Z+
     980:	00 20       	and	r0, r0
     982:	e9 f7       	brne	.-6      	; 0x97e <oled_print+0x12>
     984:	31 97       	sbiw	r30, 0x01	; 1
     986:	8f 01       	movw	r16, r30
     988:	08 1b       	sub	r16, r24
     98a:	19 0b       	sbc	r17, r25
	
	printf("\n\r%s", message);
     98c:	ff 92       	push	r15
     98e:	8f 93       	push	r24
     990:	89 e1       	ldi	r24, 0x19	; 25
     992:	91 e0       	ldi	r25, 0x01	; 1
     994:	9f 93       	push	r25
     996:	8f 93       	push	r24
     998:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
	
	for(uint8_t index = 0; index < size; index++){
     99c:	0f 90       	pop	r0
     99e:	0f 90       	pop	r0
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	c0 e0       	ldi	r28, 0x00	; 0
     9a6:	08 c0       	rjmp	.+16     	; 0x9b8 <oled_print+0x4c>
		oled_putchar(message[index], font_size);
     9a8:	f7 01       	movw	r30, r14
     9aa:	e8 0f       	add	r30, r24
     9ac:	f9 1f       	adc	r31, r25
     9ae:	6d 2f       	mov	r22, r29
     9b0:	80 81       	ld	r24, Z
     9b2:	0e 94 68 04 	call	0x8d0	; 0x8d0 <oled_putchar>
void oled_print(const char* message, uint8_t font_size){
	size_t size = strlen(message);
	
	printf("\n\r%s", message);
	
	for(uint8_t index = 0; index < size; index++){
     9b6:	cf 5f       	subi	r28, 0xFF	; 255
     9b8:	8c 2f       	mov	r24, r28
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	80 17       	cp	r24, r16
     9be:	91 07       	cpc	r25, r17
     9c0:	98 f3       	brcs	.-26     	; 0x9a8 <oled_print+0x3c>
		oled_putchar(message[index], font_size);
	}
}
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	0f 91       	pop	r16
     9ca:	ff 90       	pop	r15
     9cc:	ef 90       	pop	r14
     9ce:	08 95       	ret

000009d0 <SRAM_test>:
 *  Author: andreurn
 */ 

#include "sram.h"

void SRAM_test(void){
     9d0:	cf 92       	push	r12
     9d2:	df 92       	push	r13
     9d4:	ef 92       	push	r14
     9d6:	ff 92       	push	r15
     9d8:	0f 93       	push	r16
     9da:	1f 93       	push	r17
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	00 d0       	rcall	.+0      	; 0x9e2 <SRAM_test+0x12>
     9e2:	cd b7       	in	r28, 0x3d	; 61
     9e4:	de b7       	in	r29, 0x3e	; 62
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n\r");
     9e6:	8e e1       	ldi	r24, 0x1E	; 30
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	9f 93       	push	r25
     9ec:	8f 93       	push	r24
     9ee:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     9f2:	0e 94 d6 05 	call	0xbac	; 0xbac <rand>
     9f6:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     9f8:	0e 94 db 05 	call	0xbb6	; 0xbb6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     9fc:	0f 90       	pop	r0
     9fe:	0f 90       	pop	r0
     a00:	00 e0       	ldi	r16, 0x00	; 0
     a02:	10 e0       	ldi	r17, 0x00	; 0
#include "sram.h"

void SRAM_test(void){
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
     a04:	e1 2c       	mov	r14, r1
     a06:	f1 2c       	mov	r15, r1
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a08:	12 c0       	rjmp	.+36     	; 0xa2e <SRAM_test+0x5e>
		volatile uint8_t some_value = rand();
     a0a:	0e 94 d6 05 	call	0xbac	; 0xbac <rand>
     a0e:	8a 83       	std	Y+2, r24	; 0x02
		ext_ram[i] = some_value;
     a10:	8a 81       	ldd	r24, Y+2	; 0x02
     a12:	f8 01       	movw	r30, r16
     a14:	f8 5e       	subi	r31, 0xE8	; 232
     a16:	80 83       	st	Z, r24
		volatile uint8_t retreived_value = ext_ram[i];
     a18:	80 81       	ld	r24, Z
     a1a:	89 83       	std	Y+1, r24	; 0x01
		if (retreived_value != some_value) {
     a1c:	99 81       	ldd	r25, Y+1	; 0x01
     a1e:	8a 81       	ldd	r24, Y+2	; 0x02
     a20:	98 17       	cp	r25, r24
     a22:	19 f0       	breq	.+6      	; 0xa2a <SRAM_test+0x5a>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
     a24:	8f ef       	ldi	r24, 0xFF	; 255
     a26:	e8 1a       	sub	r14, r24
     a28:	f8 0a       	sbc	r15, r24
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a2a:	0f 5f       	subi	r16, 0xFF	; 255
     a2c:	1f 4f       	sbci	r17, 0xFF	; 255
     a2e:	01 15       	cp	r16, r1
     a30:	88 e0       	ldi	r24, 0x08	; 8
     a32:	18 07       	cpc	r17, r24
     a34:	50 f3       	brcs	.-44     	; 0xa0a <SRAM_test+0x3a>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
     a36:	c6 01       	movw	r24, r12
     a38:	0e 94 db 05 	call	0xbb6	; 0xbb6 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a3c:	00 e0       	ldi	r16, 0x00	; 0
     a3e:	10 e0       	ldi	r17, 0x00	; 0

void SRAM_test(void){
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
     a40:	c1 2c       	mov	r12, r1
     a42:	d1 2c       	mov	r13, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a44:	0c c0       	rjmp	.+24     	; 0xa5e <SRAM_test+0x8e>
		uint8_t some_value = rand();
     a46:	0e 94 d6 05 	call	0xbac	; 0xbac <rand>
		uint8_t retreived_value = ext_ram[i];
     a4a:	f8 01       	movw	r30, r16
     a4c:	f8 5e       	subi	r31, 0xE8	; 232
     a4e:	90 81       	ld	r25, Z
		if (retreived_value != some_value) {
     a50:	89 17       	cp	r24, r25
     a52:	19 f0       	breq	.+6      	; 0xa5a <SRAM_test+0x8a>
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
     a54:	8f ef       	ldi	r24, 0xFF	; 255
     a56:	c8 1a       	sub	r12, r24
     a58:	d8 0a       	sbc	r13, r24
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a5a:	0f 5f       	subi	r16, 0xFF	; 255
     a5c:	1f 4f       	sbci	r17, 0xFF	; 255
     a5e:	01 15       	cp	r16, r1
     a60:	88 e0       	ldi	r24, 0x08	; 8
     a62:	18 07       	cpc	r17, r24
     a64:	80 f3       	brcs	.-32     	; 0xa46 <SRAM_test+0x76>
		if (retreived_value != some_value) {
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n\r%4d errors in write phase and \n\r%4d errors in retrieval phase\n\n\r", write_errors, retrieval_errors);
     a66:	df 92       	push	r13
     a68:	cf 92       	push	r12
     a6a:	ff 92       	push	r15
     a6c:	ef 92       	push	r14
     a6e:	86 e3       	ldi	r24, 0x36	; 54
     a70:	91 e0       	ldi	r25, 0x01	; 1
     a72:	9f 93       	push	r25
     a74:	8f 93       	push	r24
     a76:	0e 94 31 06 	call	0xc62	; 0xc62 <printf>
}
     a7a:	0f 90       	pop	r0
     a7c:	0f 90       	pop	r0
     a7e:	0f 90       	pop	r0
     a80:	0f 90       	pop	r0
     a82:	0f 90       	pop	r0
     a84:	0f 90       	pop	r0
     a86:	0f 90       	pop	r0
     a88:	0f 90       	pop	r0
     a8a:	df 91       	pop	r29
     a8c:	cf 91       	pop	r28
     a8e:	1f 91       	pop	r17
     a90:	0f 91       	pop	r16
     a92:	ff 90       	pop	r15
     a94:	ef 90       	pop	r14
     a96:	df 90       	pop	r13
     a98:	cf 90       	pop	r12
     a9a:	08 95       	ret

00000a9c <SRAM_init>:

void SRAM_init(){
	set_bit(MCUCR, SRE);
     a9c:	85 b7       	in	r24, 0x35	; 53
     a9e:	80 68       	ori	r24, 0x80	; 128
     aa0:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM2);
     aa2:	80 b7       	in	r24, 0x30	; 48
     aa4:	80 62       	ori	r24, 0x20	; 32
     aa6:	80 bf       	out	0x30, r24	; 48
     aa8:	08 95       	ret

00000aaa <main>:

int main(void){
    // enable global interrupt flags
	//interrupt_init();
	/* Replace with your application code */
	USART_init(MYUBRR);
     aaa:	8f e1       	ldi	r24, 0x1F	; 31
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	0e 94 ce 03 	call	0x79c	; 0x79c <USART_init>
	SRAM_init();
     ab2:	0e 94 4e 05 	call	0xa9c	; 0xa9c <SRAM_init>
	ADC_init();
     ab6:	0e 94 7f 03 	call	0x6fe	; 0x6fe <ADC_init>
	oled_init_program();
     aba:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <oled_init_program>
	SRAM_test();
     abe:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <SRAM_test>

	oled_reset();
     ac2:	0e 94 5f 04 	call	0x8be	; 0x8be <oled_reset>
	
	oled_print("Jeg er stor!", 8);
     ac6:	68 e0       	ldi	r22, 0x08	; 8
     ac8:	82 e9       	ldi	r24, 0x92	; 146
     aca:	91 e0       	ldi	r25, 0x01	; 1
     acc:	0e 94 b6 04 	call	0x96c	; 0x96c <oled_print>
	oled_goto_line(1);
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	0e 94 2e 04 	call	0x85c	; 0x85c <oled_goto_line>
	oled_goto_column(0);
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	0e 94 32 04 	call	0x864	; 0x864 <oled_goto_column>
	oled_print("Jeg er passe stor!", 5);
     adc:	65 e0       	ldi	r22, 0x05	; 5
     ade:	8f e9       	ldi	r24, 0x9F	; 159
     ae0:	91 e0       	ldi	r25, 0x01	; 1
     ae2:	0e 94 b6 04 	call	0x96c	; 0x96c <oled_print>
	oled_goto_line(2);
     ae6:	82 e0       	ldi	r24, 0x02	; 2
     ae8:	0e 94 2e 04 	call	0x85c	; 0x85c <oled_goto_line>
	oled_goto_column(0);
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	0e 94 32 04 	call	0x864	; 0x864 <oled_goto_column>
	oled_print("Jeg er liten :(", 4);
     af2:	64 e0       	ldi	r22, 0x04	; 4
     af4:	82 eb       	ldi	r24, 0xB2	; 178
     af6:	91 e0       	ldi	r25, 0x01	; 1
     af8:	0e 94 b6 04 	call	0x96c	; 0x96c <oled_print>
	
	while(1){
		ADC_test();
     afc:	0e 94 90 03 	call	0x720	; 0x720 <ADC_test>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b00:	2f ef       	ldi	r18, 0xFF	; 255
     b02:	8f ef       	ldi	r24, 0xFF	; 255
     b04:	9e e0       	ldi	r25, 0x0E	; 14
     b06:	21 50       	subi	r18, 0x01	; 1
     b08:	80 40       	sbci	r24, 0x00	; 0
     b0a:	90 40       	sbci	r25, 0x00	; 0
     b0c:	e1 f7       	brne	.-8      	; 0xb06 <main+0x5c>
     b0e:	00 c0       	rjmp	.+0      	; 0xb10 <main+0x66>
     b10:	00 00       	nop
     b12:	f4 cf       	rjmp	.-24     	; 0xafc <main+0x52>

00000b14 <do_rand>:
     b14:	8f 92       	push	r8
     b16:	9f 92       	push	r9
     b18:	af 92       	push	r10
     b1a:	bf 92       	push	r11
     b1c:	cf 92       	push	r12
     b1e:	df 92       	push	r13
     b20:	ef 92       	push	r14
     b22:	ff 92       	push	r15
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	ec 01       	movw	r28, r24
     b2a:	68 81       	ld	r22, Y
     b2c:	79 81       	ldd	r23, Y+1	; 0x01
     b2e:	8a 81       	ldd	r24, Y+2	; 0x02
     b30:	9b 81       	ldd	r25, Y+3	; 0x03
     b32:	61 15       	cp	r22, r1
     b34:	71 05       	cpc	r23, r1
     b36:	81 05       	cpc	r24, r1
     b38:	91 05       	cpc	r25, r1
     b3a:	21 f4       	brne	.+8      	; 0xb44 <do_rand+0x30>
     b3c:	64 e2       	ldi	r22, 0x24	; 36
     b3e:	79 ed       	ldi	r23, 0xD9	; 217
     b40:	8b e5       	ldi	r24, 0x5B	; 91
     b42:	97 e0       	ldi	r25, 0x07	; 7
     b44:	2d e1       	ldi	r18, 0x1D	; 29
     b46:	33 ef       	ldi	r19, 0xF3	; 243
     b48:	41 e0       	ldi	r20, 0x01	; 1
     b4a:	50 e0       	ldi	r21, 0x00	; 0
     b4c:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__divmodsi4>
     b50:	49 01       	movw	r8, r18
     b52:	5a 01       	movw	r10, r20
     b54:	9b 01       	movw	r18, r22
     b56:	ac 01       	movw	r20, r24
     b58:	a7 ea       	ldi	r26, 0xA7	; 167
     b5a:	b1 e4       	ldi	r27, 0x41	; 65
     b5c:	0e 94 3b 0a 	call	0x1476	; 0x1476 <__muluhisi3>
     b60:	6b 01       	movw	r12, r22
     b62:	7c 01       	movw	r14, r24
     b64:	ac ee       	ldi	r26, 0xEC	; 236
     b66:	b4 ef       	ldi	r27, 0xF4	; 244
     b68:	a5 01       	movw	r20, r10
     b6a:	94 01       	movw	r18, r8
     b6c:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulohisi3>
     b70:	dc 01       	movw	r26, r24
     b72:	cb 01       	movw	r24, r22
     b74:	8c 0d       	add	r24, r12
     b76:	9d 1d       	adc	r25, r13
     b78:	ae 1d       	adc	r26, r14
     b7a:	bf 1d       	adc	r27, r15
     b7c:	b7 ff       	sbrs	r27, 7
     b7e:	03 c0       	rjmp	.+6      	; 0xb86 <do_rand+0x72>
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	a1 09       	sbc	r26, r1
     b84:	b0 48       	sbci	r27, 0x80	; 128
     b86:	88 83       	st	Y, r24
     b88:	99 83       	std	Y+1, r25	; 0x01
     b8a:	aa 83       	std	Y+2, r26	; 0x02
     b8c:	bb 83       	std	Y+3, r27	; 0x03
     b8e:	9f 77       	andi	r25, 0x7F	; 127
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	ff 90       	pop	r15
     b96:	ef 90       	pop	r14
     b98:	df 90       	pop	r13
     b9a:	cf 90       	pop	r12
     b9c:	bf 90       	pop	r11
     b9e:	af 90       	pop	r10
     ba0:	9f 90       	pop	r9
     ba2:	8f 90       	pop	r8
     ba4:	08 95       	ret

00000ba6 <rand_r>:
     ba6:	0e 94 8a 05 	call	0xb14	; 0xb14 <do_rand>
     baa:	08 95       	ret

00000bac <rand>:
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	91 e0       	ldi	r25, 0x01	; 1
     bb0:	0e 94 8a 05 	call	0xb14	; 0xb14 <do_rand>
     bb4:	08 95       	ret

00000bb6 <srand>:
     bb6:	a0 e0       	ldi	r26, 0x00	; 0
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     bbe:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bc2:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     bc6:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     bca:	08 95       	ret

00000bcc <fdevopen>:
     bcc:	0f 93       	push	r16
     bce:	1f 93       	push	r17
     bd0:	cf 93       	push	r28
     bd2:	df 93       	push	r29
     bd4:	00 97       	sbiw	r24, 0x00	; 0
     bd6:	31 f4       	brne	.+12     	; 0xbe4 <fdevopen+0x18>
     bd8:	61 15       	cp	r22, r1
     bda:	71 05       	cpc	r23, r1
     bdc:	19 f4       	brne	.+6      	; 0xbe4 <fdevopen+0x18>
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	3a c0       	rjmp	.+116    	; 0xc58 <fdevopen+0x8c>
     be4:	8b 01       	movw	r16, r22
     be6:	ec 01       	movw	r28, r24
     be8:	6e e0       	ldi	r22, 0x0E	; 14
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0e 94 28 08 	call	0x1050	; 0x1050 <calloc>
     bf4:	fc 01       	movw	r30, r24
     bf6:	89 2b       	or	r24, r25
     bf8:	91 f3       	breq	.-28     	; 0xbde <fdevopen+0x12>
     bfa:	80 e8       	ldi	r24, 0x80	; 128
     bfc:	83 83       	std	Z+3, r24	; 0x03
     bfe:	01 15       	cp	r16, r1
     c00:	11 05       	cpc	r17, r1
     c02:	71 f0       	breq	.+28     	; 0xc20 <fdevopen+0x54>
     c04:	13 87       	std	Z+11, r17	; 0x0b
     c06:	02 87       	std	Z+10, r16	; 0x0a
     c08:	81 e8       	ldi	r24, 0x81	; 129
     c0a:	83 83       	std	Z+3, r24	; 0x03
     c0c:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <__data_end>
     c10:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <__data_end+0x1>
     c14:	89 2b       	or	r24, r25
     c16:	21 f4       	brne	.+8      	; 0xc20 <fdevopen+0x54>
     c18:	f0 93 c3 01 	sts	0x01C3, r31	; 0x8001c3 <__data_end+0x1>
     c1c:	e0 93 c2 01 	sts	0x01C2, r30	; 0x8001c2 <__data_end>
     c20:	20 97       	sbiw	r28, 0x00	; 0
     c22:	c9 f0       	breq	.+50     	; 0xc56 <fdevopen+0x8a>
     c24:	d1 87       	std	Z+9, r29	; 0x09
     c26:	c0 87       	std	Z+8, r28	; 0x08
     c28:	83 81       	ldd	r24, Z+3	; 0x03
     c2a:	82 60       	ori	r24, 0x02	; 2
     c2c:	83 83       	std	Z+3, r24	; 0x03
     c2e:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end+0x2>
     c32:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x3>
     c36:	89 2b       	or	r24, r25
     c38:	71 f4       	brne	.+28     	; 0xc56 <fdevopen+0x8a>
     c3a:	f0 93 c5 01 	sts	0x01C5, r31	; 0x8001c5 <__data_end+0x3>
     c3e:	e0 93 c4 01 	sts	0x01C4, r30	; 0x8001c4 <__data_end+0x2>
     c42:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end+0x4>
     c46:	90 91 c7 01 	lds	r25, 0x01C7	; 0x8001c7 <__data_end+0x5>
     c4a:	89 2b       	or	r24, r25
     c4c:	21 f4       	brne	.+8      	; 0xc56 <fdevopen+0x8a>
     c4e:	f0 93 c7 01 	sts	0x01C7, r31	; 0x8001c7 <__data_end+0x5>
     c52:	e0 93 c6 01 	sts	0x01C6, r30	; 0x8001c6 <__data_end+0x4>
     c56:	cf 01       	movw	r24, r30
     c58:	df 91       	pop	r29
     c5a:	cf 91       	pop	r28
     c5c:	1f 91       	pop	r17
     c5e:	0f 91       	pop	r16
     c60:	08 95       	ret

00000c62 <printf>:
     c62:	a0 e0       	ldi	r26, 0x00	; 0
     c64:	b0 e0       	ldi	r27, 0x00	; 0
     c66:	e7 e3       	ldi	r30, 0x37	; 55
     c68:	f6 e0       	ldi	r31, 0x06	; 6
     c6a:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__prologue_saves__+0x20>
     c6e:	ae 01       	movw	r20, r28
     c70:	4b 5f       	subi	r20, 0xFB	; 251
     c72:	5f 4f       	sbci	r21, 0xFF	; 255
     c74:	fa 01       	movw	r30, r20
     c76:	61 91       	ld	r22, Z+
     c78:	71 91       	ld	r23, Z+
     c7a:	af 01       	movw	r20, r30
     c7c:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end+0x2>
     c80:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x3>
     c84:	0e 94 47 06 	call	0xc8e	; 0xc8e <vfprintf>
     c88:	e2 e0       	ldi	r30, 0x02	; 2
     c8a:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__epilogue_restores__+0x20>

00000c8e <vfprintf>:
     c8e:	ab e0       	ldi	r26, 0x0B	; 11
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	ed e4       	ldi	r30, 0x4D	; 77
     c94:	f6 e0       	ldi	r31, 0x06	; 6
     c96:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__prologue_saves__>
     c9a:	6c 01       	movw	r12, r24
     c9c:	7b 01       	movw	r14, r22
     c9e:	8a 01       	movw	r16, r20
     ca0:	fc 01       	movw	r30, r24
     ca2:	17 82       	std	Z+7, r1	; 0x07
     ca4:	16 82       	std	Z+6, r1	; 0x06
     ca6:	83 81       	ldd	r24, Z+3	; 0x03
     ca8:	81 ff       	sbrs	r24, 1
     caa:	cc c1       	rjmp	.+920    	; 0x1044 <vfprintf+0x3b6>
     cac:	ce 01       	movw	r24, r28
     cae:	01 96       	adiw	r24, 0x01	; 1
     cb0:	3c 01       	movw	r6, r24
     cb2:	f6 01       	movw	r30, r12
     cb4:	93 81       	ldd	r25, Z+3	; 0x03
     cb6:	f7 01       	movw	r30, r14
     cb8:	93 fd       	sbrc	r25, 3
     cba:	85 91       	lpm	r24, Z+
     cbc:	93 ff       	sbrs	r25, 3
     cbe:	81 91       	ld	r24, Z+
     cc0:	7f 01       	movw	r14, r30
     cc2:	88 23       	and	r24, r24
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <vfprintf+0x3a>
     cc6:	ba c1       	rjmp	.+884    	; 0x103c <vfprintf+0x3ae>
     cc8:	85 32       	cpi	r24, 0x25	; 37
     cca:	39 f4       	brne	.+14     	; 0xcda <vfprintf+0x4c>
     ccc:	93 fd       	sbrc	r25, 3
     cce:	85 91       	lpm	r24, Z+
     cd0:	93 ff       	sbrs	r25, 3
     cd2:	81 91       	ld	r24, Z+
     cd4:	7f 01       	movw	r14, r30
     cd6:	85 32       	cpi	r24, 0x25	; 37
     cd8:	29 f4       	brne	.+10     	; 0xce4 <vfprintf+0x56>
     cda:	b6 01       	movw	r22, r12
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
     ce2:	e7 cf       	rjmp	.-50     	; 0xcb2 <vfprintf+0x24>
     ce4:	91 2c       	mov	r9, r1
     ce6:	21 2c       	mov	r2, r1
     ce8:	31 2c       	mov	r3, r1
     cea:	ff e1       	ldi	r31, 0x1F	; 31
     cec:	f3 15       	cp	r31, r3
     cee:	d8 f0       	brcs	.+54     	; 0xd26 <vfprintf+0x98>
     cf0:	8b 32       	cpi	r24, 0x2B	; 43
     cf2:	79 f0       	breq	.+30     	; 0xd12 <vfprintf+0x84>
     cf4:	38 f4       	brcc	.+14     	; 0xd04 <vfprintf+0x76>
     cf6:	80 32       	cpi	r24, 0x20	; 32
     cf8:	79 f0       	breq	.+30     	; 0xd18 <vfprintf+0x8a>
     cfa:	83 32       	cpi	r24, 0x23	; 35
     cfc:	a1 f4       	brne	.+40     	; 0xd26 <vfprintf+0x98>
     cfe:	23 2d       	mov	r18, r3
     d00:	20 61       	ori	r18, 0x10	; 16
     d02:	1d c0       	rjmp	.+58     	; 0xd3e <vfprintf+0xb0>
     d04:	8d 32       	cpi	r24, 0x2D	; 45
     d06:	61 f0       	breq	.+24     	; 0xd20 <vfprintf+0x92>
     d08:	80 33       	cpi	r24, 0x30	; 48
     d0a:	69 f4       	brne	.+26     	; 0xd26 <vfprintf+0x98>
     d0c:	23 2d       	mov	r18, r3
     d0e:	21 60       	ori	r18, 0x01	; 1
     d10:	16 c0       	rjmp	.+44     	; 0xd3e <vfprintf+0xb0>
     d12:	83 2d       	mov	r24, r3
     d14:	82 60       	ori	r24, 0x02	; 2
     d16:	38 2e       	mov	r3, r24
     d18:	e3 2d       	mov	r30, r3
     d1a:	e4 60       	ori	r30, 0x04	; 4
     d1c:	3e 2e       	mov	r3, r30
     d1e:	2a c0       	rjmp	.+84     	; 0xd74 <vfprintf+0xe6>
     d20:	f3 2d       	mov	r31, r3
     d22:	f8 60       	ori	r31, 0x08	; 8
     d24:	1d c0       	rjmp	.+58     	; 0xd60 <vfprintf+0xd2>
     d26:	37 fc       	sbrc	r3, 7
     d28:	2d c0       	rjmp	.+90     	; 0xd84 <vfprintf+0xf6>
     d2a:	20 ed       	ldi	r18, 0xD0	; 208
     d2c:	28 0f       	add	r18, r24
     d2e:	2a 30       	cpi	r18, 0x0A	; 10
     d30:	40 f0       	brcs	.+16     	; 0xd42 <vfprintf+0xb4>
     d32:	8e 32       	cpi	r24, 0x2E	; 46
     d34:	b9 f4       	brne	.+46     	; 0xd64 <vfprintf+0xd6>
     d36:	36 fc       	sbrc	r3, 6
     d38:	81 c1       	rjmp	.+770    	; 0x103c <vfprintf+0x3ae>
     d3a:	23 2d       	mov	r18, r3
     d3c:	20 64       	ori	r18, 0x40	; 64
     d3e:	32 2e       	mov	r3, r18
     d40:	19 c0       	rjmp	.+50     	; 0xd74 <vfprintf+0xe6>
     d42:	36 fe       	sbrs	r3, 6
     d44:	06 c0       	rjmp	.+12     	; 0xd52 <vfprintf+0xc4>
     d46:	8a e0       	ldi	r24, 0x0A	; 10
     d48:	98 9e       	mul	r9, r24
     d4a:	20 0d       	add	r18, r0
     d4c:	11 24       	eor	r1, r1
     d4e:	92 2e       	mov	r9, r18
     d50:	11 c0       	rjmp	.+34     	; 0xd74 <vfprintf+0xe6>
     d52:	ea e0       	ldi	r30, 0x0A	; 10
     d54:	2e 9e       	mul	r2, r30
     d56:	20 0d       	add	r18, r0
     d58:	11 24       	eor	r1, r1
     d5a:	22 2e       	mov	r2, r18
     d5c:	f3 2d       	mov	r31, r3
     d5e:	f0 62       	ori	r31, 0x20	; 32
     d60:	3f 2e       	mov	r3, r31
     d62:	08 c0       	rjmp	.+16     	; 0xd74 <vfprintf+0xe6>
     d64:	8c 36       	cpi	r24, 0x6C	; 108
     d66:	21 f4       	brne	.+8      	; 0xd70 <vfprintf+0xe2>
     d68:	83 2d       	mov	r24, r3
     d6a:	80 68       	ori	r24, 0x80	; 128
     d6c:	38 2e       	mov	r3, r24
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <vfprintf+0xe6>
     d70:	88 36       	cpi	r24, 0x68	; 104
     d72:	41 f4       	brne	.+16     	; 0xd84 <vfprintf+0xf6>
     d74:	f7 01       	movw	r30, r14
     d76:	93 fd       	sbrc	r25, 3
     d78:	85 91       	lpm	r24, Z+
     d7a:	93 ff       	sbrs	r25, 3
     d7c:	81 91       	ld	r24, Z+
     d7e:	7f 01       	movw	r14, r30
     d80:	81 11       	cpse	r24, r1
     d82:	b3 cf       	rjmp	.-154    	; 0xcea <vfprintf+0x5c>
     d84:	98 2f       	mov	r25, r24
     d86:	9f 7d       	andi	r25, 0xDF	; 223
     d88:	95 54       	subi	r25, 0x45	; 69
     d8a:	93 30       	cpi	r25, 0x03	; 3
     d8c:	28 f4       	brcc	.+10     	; 0xd98 <vfprintf+0x10a>
     d8e:	0c 5f       	subi	r16, 0xFC	; 252
     d90:	1f 4f       	sbci	r17, 0xFF	; 255
     d92:	9f e3       	ldi	r25, 0x3F	; 63
     d94:	99 83       	std	Y+1, r25	; 0x01
     d96:	0d c0       	rjmp	.+26     	; 0xdb2 <vfprintf+0x124>
     d98:	83 36       	cpi	r24, 0x63	; 99
     d9a:	31 f0       	breq	.+12     	; 0xda8 <vfprintf+0x11a>
     d9c:	83 37       	cpi	r24, 0x73	; 115
     d9e:	71 f0       	breq	.+28     	; 0xdbc <vfprintf+0x12e>
     da0:	83 35       	cpi	r24, 0x53	; 83
     da2:	09 f0       	breq	.+2      	; 0xda6 <vfprintf+0x118>
     da4:	59 c0       	rjmp	.+178    	; 0xe58 <vfprintf+0x1ca>
     da6:	21 c0       	rjmp	.+66     	; 0xdea <vfprintf+0x15c>
     da8:	f8 01       	movw	r30, r16
     daa:	80 81       	ld	r24, Z
     dac:	89 83       	std	Y+1, r24	; 0x01
     dae:	0e 5f       	subi	r16, 0xFE	; 254
     db0:	1f 4f       	sbci	r17, 0xFF	; 255
     db2:	88 24       	eor	r8, r8
     db4:	83 94       	inc	r8
     db6:	91 2c       	mov	r9, r1
     db8:	53 01       	movw	r10, r6
     dba:	13 c0       	rjmp	.+38     	; 0xde2 <vfprintf+0x154>
     dbc:	28 01       	movw	r4, r16
     dbe:	f2 e0       	ldi	r31, 0x02	; 2
     dc0:	4f 0e       	add	r4, r31
     dc2:	51 1c       	adc	r5, r1
     dc4:	f8 01       	movw	r30, r16
     dc6:	a0 80       	ld	r10, Z
     dc8:	b1 80       	ldd	r11, Z+1	; 0x01
     dca:	36 fe       	sbrs	r3, 6
     dcc:	03 c0       	rjmp	.+6      	; 0xdd4 <vfprintf+0x146>
     dce:	69 2d       	mov	r22, r9
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <vfprintf+0x14a>
     dd4:	6f ef       	ldi	r22, 0xFF	; 255
     dd6:	7f ef       	ldi	r23, 0xFF	; 255
     dd8:	c5 01       	movw	r24, r10
     dda:	0e 94 77 09 	call	0x12ee	; 0x12ee <strnlen>
     dde:	4c 01       	movw	r8, r24
     de0:	82 01       	movw	r16, r4
     de2:	f3 2d       	mov	r31, r3
     de4:	ff 77       	andi	r31, 0x7F	; 127
     de6:	3f 2e       	mov	r3, r31
     de8:	16 c0       	rjmp	.+44     	; 0xe16 <vfprintf+0x188>
     dea:	28 01       	movw	r4, r16
     dec:	22 e0       	ldi	r18, 0x02	; 2
     dee:	42 0e       	add	r4, r18
     df0:	51 1c       	adc	r5, r1
     df2:	f8 01       	movw	r30, r16
     df4:	a0 80       	ld	r10, Z
     df6:	b1 80       	ldd	r11, Z+1	; 0x01
     df8:	36 fe       	sbrs	r3, 6
     dfa:	03 c0       	rjmp	.+6      	; 0xe02 <vfprintf+0x174>
     dfc:	69 2d       	mov	r22, r9
     dfe:	70 e0       	ldi	r23, 0x00	; 0
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <vfprintf+0x178>
     e02:	6f ef       	ldi	r22, 0xFF	; 255
     e04:	7f ef       	ldi	r23, 0xFF	; 255
     e06:	c5 01       	movw	r24, r10
     e08:	0e 94 65 09 	call	0x12ca	; 0x12ca <strnlen_P>
     e0c:	4c 01       	movw	r8, r24
     e0e:	f3 2d       	mov	r31, r3
     e10:	f0 68       	ori	r31, 0x80	; 128
     e12:	3f 2e       	mov	r3, r31
     e14:	82 01       	movw	r16, r4
     e16:	33 fc       	sbrc	r3, 3
     e18:	1b c0       	rjmp	.+54     	; 0xe50 <vfprintf+0x1c2>
     e1a:	82 2d       	mov	r24, r2
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	88 16       	cp	r8, r24
     e20:	99 06       	cpc	r9, r25
     e22:	b0 f4       	brcc	.+44     	; 0xe50 <vfprintf+0x1c2>
     e24:	b6 01       	movw	r22, r12
     e26:	80 e2       	ldi	r24, 0x20	; 32
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
     e2e:	2a 94       	dec	r2
     e30:	f4 cf       	rjmp	.-24     	; 0xe1a <vfprintf+0x18c>
     e32:	f5 01       	movw	r30, r10
     e34:	37 fc       	sbrc	r3, 7
     e36:	85 91       	lpm	r24, Z+
     e38:	37 fe       	sbrs	r3, 7
     e3a:	81 91       	ld	r24, Z+
     e3c:	5f 01       	movw	r10, r30
     e3e:	b6 01       	movw	r22, r12
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
     e46:	21 10       	cpse	r2, r1
     e48:	2a 94       	dec	r2
     e4a:	21 e0       	ldi	r18, 0x01	; 1
     e4c:	82 1a       	sub	r8, r18
     e4e:	91 08       	sbc	r9, r1
     e50:	81 14       	cp	r8, r1
     e52:	91 04       	cpc	r9, r1
     e54:	71 f7       	brne	.-36     	; 0xe32 <vfprintf+0x1a4>
     e56:	e8 c0       	rjmp	.+464    	; 0x1028 <vfprintf+0x39a>
     e58:	84 36       	cpi	r24, 0x64	; 100
     e5a:	11 f0       	breq	.+4      	; 0xe60 <vfprintf+0x1d2>
     e5c:	89 36       	cpi	r24, 0x69	; 105
     e5e:	41 f5       	brne	.+80     	; 0xeb0 <vfprintf+0x222>
     e60:	f8 01       	movw	r30, r16
     e62:	37 fe       	sbrs	r3, 7
     e64:	07 c0       	rjmp	.+14     	; 0xe74 <vfprintf+0x1e6>
     e66:	60 81       	ld	r22, Z
     e68:	71 81       	ldd	r23, Z+1	; 0x01
     e6a:	82 81       	ldd	r24, Z+2	; 0x02
     e6c:	93 81       	ldd	r25, Z+3	; 0x03
     e6e:	0c 5f       	subi	r16, 0xFC	; 252
     e70:	1f 4f       	sbci	r17, 0xFF	; 255
     e72:	08 c0       	rjmp	.+16     	; 0xe84 <vfprintf+0x1f6>
     e74:	60 81       	ld	r22, Z
     e76:	71 81       	ldd	r23, Z+1	; 0x01
     e78:	07 2e       	mov	r0, r23
     e7a:	00 0c       	add	r0, r0
     e7c:	88 0b       	sbc	r24, r24
     e7e:	99 0b       	sbc	r25, r25
     e80:	0e 5f       	subi	r16, 0xFE	; 254
     e82:	1f 4f       	sbci	r17, 0xFF	; 255
     e84:	f3 2d       	mov	r31, r3
     e86:	ff 76       	andi	r31, 0x6F	; 111
     e88:	3f 2e       	mov	r3, r31
     e8a:	97 ff       	sbrs	r25, 7
     e8c:	09 c0       	rjmp	.+18     	; 0xea0 <vfprintf+0x212>
     e8e:	90 95       	com	r25
     e90:	80 95       	com	r24
     e92:	70 95       	com	r23
     e94:	61 95       	neg	r22
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	8f 4f       	sbci	r24, 0xFF	; 255
     e9a:	9f 4f       	sbci	r25, 0xFF	; 255
     e9c:	f0 68       	ori	r31, 0x80	; 128
     e9e:	3f 2e       	mov	r3, r31
     ea0:	2a e0       	ldi	r18, 0x0A	; 10
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	a3 01       	movw	r20, r6
     ea6:	0e 94 be 09 	call	0x137c	; 0x137c <__ultoa_invert>
     eaa:	88 2e       	mov	r8, r24
     eac:	86 18       	sub	r8, r6
     eae:	45 c0       	rjmp	.+138    	; 0xf3a <vfprintf+0x2ac>
     eb0:	85 37       	cpi	r24, 0x75	; 117
     eb2:	31 f4       	brne	.+12     	; 0xec0 <vfprintf+0x232>
     eb4:	23 2d       	mov	r18, r3
     eb6:	2f 7e       	andi	r18, 0xEF	; 239
     eb8:	b2 2e       	mov	r11, r18
     eba:	2a e0       	ldi	r18, 0x0A	; 10
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	25 c0       	rjmp	.+74     	; 0xf0a <vfprintf+0x27c>
     ec0:	93 2d       	mov	r25, r3
     ec2:	99 7f       	andi	r25, 0xF9	; 249
     ec4:	b9 2e       	mov	r11, r25
     ec6:	8f 36       	cpi	r24, 0x6F	; 111
     ec8:	c1 f0       	breq	.+48     	; 0xefa <vfprintf+0x26c>
     eca:	18 f4       	brcc	.+6      	; 0xed2 <vfprintf+0x244>
     ecc:	88 35       	cpi	r24, 0x58	; 88
     ece:	79 f0       	breq	.+30     	; 0xeee <vfprintf+0x260>
     ed0:	b5 c0       	rjmp	.+362    	; 0x103c <vfprintf+0x3ae>
     ed2:	80 37       	cpi	r24, 0x70	; 112
     ed4:	19 f0       	breq	.+6      	; 0xedc <vfprintf+0x24e>
     ed6:	88 37       	cpi	r24, 0x78	; 120
     ed8:	21 f0       	breq	.+8      	; 0xee2 <vfprintf+0x254>
     eda:	b0 c0       	rjmp	.+352    	; 0x103c <vfprintf+0x3ae>
     edc:	e9 2f       	mov	r30, r25
     ede:	e0 61       	ori	r30, 0x10	; 16
     ee0:	be 2e       	mov	r11, r30
     ee2:	b4 fe       	sbrs	r11, 4
     ee4:	0d c0       	rjmp	.+26     	; 0xf00 <vfprintf+0x272>
     ee6:	fb 2d       	mov	r31, r11
     ee8:	f4 60       	ori	r31, 0x04	; 4
     eea:	bf 2e       	mov	r11, r31
     eec:	09 c0       	rjmp	.+18     	; 0xf00 <vfprintf+0x272>
     eee:	34 fe       	sbrs	r3, 4
     ef0:	0a c0       	rjmp	.+20     	; 0xf06 <vfprintf+0x278>
     ef2:	29 2f       	mov	r18, r25
     ef4:	26 60       	ori	r18, 0x06	; 6
     ef6:	b2 2e       	mov	r11, r18
     ef8:	06 c0       	rjmp	.+12     	; 0xf06 <vfprintf+0x278>
     efa:	28 e0       	ldi	r18, 0x08	; 8
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	05 c0       	rjmp	.+10     	; 0xf0a <vfprintf+0x27c>
     f00:	20 e1       	ldi	r18, 0x10	; 16
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <vfprintf+0x27c>
     f06:	20 e1       	ldi	r18, 0x10	; 16
     f08:	32 e0       	ldi	r19, 0x02	; 2
     f0a:	f8 01       	movw	r30, r16
     f0c:	b7 fe       	sbrs	r11, 7
     f0e:	07 c0       	rjmp	.+14     	; 0xf1e <vfprintf+0x290>
     f10:	60 81       	ld	r22, Z
     f12:	71 81       	ldd	r23, Z+1	; 0x01
     f14:	82 81       	ldd	r24, Z+2	; 0x02
     f16:	93 81       	ldd	r25, Z+3	; 0x03
     f18:	0c 5f       	subi	r16, 0xFC	; 252
     f1a:	1f 4f       	sbci	r17, 0xFF	; 255
     f1c:	06 c0       	rjmp	.+12     	; 0xf2a <vfprintf+0x29c>
     f1e:	60 81       	ld	r22, Z
     f20:	71 81       	ldd	r23, Z+1	; 0x01
     f22:	80 e0       	ldi	r24, 0x00	; 0
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	0e 5f       	subi	r16, 0xFE	; 254
     f28:	1f 4f       	sbci	r17, 0xFF	; 255
     f2a:	a3 01       	movw	r20, r6
     f2c:	0e 94 be 09 	call	0x137c	; 0x137c <__ultoa_invert>
     f30:	88 2e       	mov	r8, r24
     f32:	86 18       	sub	r8, r6
     f34:	fb 2d       	mov	r31, r11
     f36:	ff 77       	andi	r31, 0x7F	; 127
     f38:	3f 2e       	mov	r3, r31
     f3a:	36 fe       	sbrs	r3, 6
     f3c:	0d c0       	rjmp	.+26     	; 0xf58 <vfprintf+0x2ca>
     f3e:	23 2d       	mov	r18, r3
     f40:	2e 7f       	andi	r18, 0xFE	; 254
     f42:	a2 2e       	mov	r10, r18
     f44:	89 14       	cp	r8, r9
     f46:	58 f4       	brcc	.+22     	; 0xf5e <vfprintf+0x2d0>
     f48:	34 fe       	sbrs	r3, 4
     f4a:	0b c0       	rjmp	.+22     	; 0xf62 <vfprintf+0x2d4>
     f4c:	32 fc       	sbrc	r3, 2
     f4e:	09 c0       	rjmp	.+18     	; 0xf62 <vfprintf+0x2d4>
     f50:	83 2d       	mov	r24, r3
     f52:	8e 7e       	andi	r24, 0xEE	; 238
     f54:	a8 2e       	mov	r10, r24
     f56:	05 c0       	rjmp	.+10     	; 0xf62 <vfprintf+0x2d4>
     f58:	b8 2c       	mov	r11, r8
     f5a:	a3 2c       	mov	r10, r3
     f5c:	03 c0       	rjmp	.+6      	; 0xf64 <vfprintf+0x2d6>
     f5e:	b8 2c       	mov	r11, r8
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <vfprintf+0x2d6>
     f62:	b9 2c       	mov	r11, r9
     f64:	a4 fe       	sbrs	r10, 4
     f66:	0f c0       	rjmp	.+30     	; 0xf86 <vfprintf+0x2f8>
     f68:	fe 01       	movw	r30, r28
     f6a:	e8 0d       	add	r30, r8
     f6c:	f1 1d       	adc	r31, r1
     f6e:	80 81       	ld	r24, Z
     f70:	80 33       	cpi	r24, 0x30	; 48
     f72:	21 f4       	brne	.+8      	; 0xf7c <vfprintf+0x2ee>
     f74:	9a 2d       	mov	r25, r10
     f76:	99 7e       	andi	r25, 0xE9	; 233
     f78:	a9 2e       	mov	r10, r25
     f7a:	09 c0       	rjmp	.+18     	; 0xf8e <vfprintf+0x300>
     f7c:	a2 fe       	sbrs	r10, 2
     f7e:	06 c0       	rjmp	.+12     	; 0xf8c <vfprintf+0x2fe>
     f80:	b3 94       	inc	r11
     f82:	b3 94       	inc	r11
     f84:	04 c0       	rjmp	.+8      	; 0xf8e <vfprintf+0x300>
     f86:	8a 2d       	mov	r24, r10
     f88:	86 78       	andi	r24, 0x86	; 134
     f8a:	09 f0       	breq	.+2      	; 0xf8e <vfprintf+0x300>
     f8c:	b3 94       	inc	r11
     f8e:	a3 fc       	sbrc	r10, 3
     f90:	11 c0       	rjmp	.+34     	; 0xfb4 <vfprintf+0x326>
     f92:	a0 fe       	sbrs	r10, 0
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <vfprintf+0x314>
     f96:	b2 14       	cp	r11, r2
     f98:	88 f4       	brcc	.+34     	; 0xfbc <vfprintf+0x32e>
     f9a:	28 0c       	add	r2, r8
     f9c:	92 2c       	mov	r9, r2
     f9e:	9b 18       	sub	r9, r11
     fa0:	0e c0       	rjmp	.+28     	; 0xfbe <vfprintf+0x330>
     fa2:	b2 14       	cp	r11, r2
     fa4:	60 f4       	brcc	.+24     	; 0xfbe <vfprintf+0x330>
     fa6:	b6 01       	movw	r22, r12
     fa8:	80 e2       	ldi	r24, 0x20	; 32
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
     fb0:	b3 94       	inc	r11
     fb2:	f7 cf       	rjmp	.-18     	; 0xfa2 <vfprintf+0x314>
     fb4:	b2 14       	cp	r11, r2
     fb6:	18 f4       	brcc	.+6      	; 0xfbe <vfprintf+0x330>
     fb8:	2b 18       	sub	r2, r11
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <vfprintf+0x332>
     fbc:	98 2c       	mov	r9, r8
     fbe:	21 2c       	mov	r2, r1
     fc0:	a4 fe       	sbrs	r10, 4
     fc2:	10 c0       	rjmp	.+32     	; 0xfe4 <vfprintf+0x356>
     fc4:	b6 01       	movw	r22, r12
     fc6:	80 e3       	ldi	r24, 0x30	; 48
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
     fce:	a2 fe       	sbrs	r10, 2
     fd0:	17 c0       	rjmp	.+46     	; 0x1000 <vfprintf+0x372>
     fd2:	a1 fc       	sbrc	r10, 1
     fd4:	03 c0       	rjmp	.+6      	; 0xfdc <vfprintf+0x34e>
     fd6:	88 e7       	ldi	r24, 0x78	; 120
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <vfprintf+0x352>
     fdc:	88 e5       	ldi	r24, 0x58	; 88
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	b6 01       	movw	r22, r12
     fe2:	0c c0       	rjmp	.+24     	; 0xffc <vfprintf+0x36e>
     fe4:	8a 2d       	mov	r24, r10
     fe6:	86 78       	andi	r24, 0x86	; 134
     fe8:	59 f0       	breq	.+22     	; 0x1000 <vfprintf+0x372>
     fea:	a1 fe       	sbrs	r10, 1
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <vfprintf+0x364>
     fee:	8b e2       	ldi	r24, 0x2B	; 43
     ff0:	01 c0       	rjmp	.+2      	; 0xff4 <vfprintf+0x366>
     ff2:	80 e2       	ldi	r24, 0x20	; 32
     ff4:	a7 fc       	sbrc	r10, 7
     ff6:	8d e2       	ldi	r24, 0x2D	; 45
     ff8:	b6 01       	movw	r22, r12
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
    1000:	89 14       	cp	r8, r9
    1002:	38 f4       	brcc	.+14     	; 0x1012 <vfprintf+0x384>
    1004:	b6 01       	movw	r22, r12
    1006:	80 e3       	ldi	r24, 0x30	; 48
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
    100e:	9a 94       	dec	r9
    1010:	f7 cf       	rjmp	.-18     	; 0x1000 <vfprintf+0x372>
    1012:	8a 94       	dec	r8
    1014:	f3 01       	movw	r30, r6
    1016:	e8 0d       	add	r30, r8
    1018:	f1 1d       	adc	r31, r1
    101a:	80 81       	ld	r24, Z
    101c:	b6 01       	movw	r22, r12
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
    1024:	81 10       	cpse	r8, r1
    1026:	f5 cf       	rjmp	.-22     	; 0x1012 <vfprintf+0x384>
    1028:	22 20       	and	r2, r2
    102a:	09 f4       	brne	.+2      	; 0x102e <vfprintf+0x3a0>
    102c:	42 ce       	rjmp	.-892    	; 0xcb2 <vfprintf+0x24>
    102e:	b6 01       	movw	r22, r12
    1030:	80 e2       	ldi	r24, 0x20	; 32
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	0e 94 82 09 	call	0x1304	; 0x1304 <fputc>
    1038:	2a 94       	dec	r2
    103a:	f6 cf       	rjmp	.-20     	; 0x1028 <vfprintf+0x39a>
    103c:	f6 01       	movw	r30, r12
    103e:	86 81       	ldd	r24, Z+6	; 0x06
    1040:	97 81       	ldd	r25, Z+7	; 0x07
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <vfprintf+0x3ba>
    1044:	8f ef       	ldi	r24, 0xFF	; 255
    1046:	9f ef       	ldi	r25, 0xFF	; 255
    1048:	2b 96       	adiw	r28, 0x0b	; 11
    104a:	e2 e1       	ldi	r30, 0x12	; 18
    104c:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__epilogue_restores__>

00001050 <calloc>:
    1050:	0f 93       	push	r16
    1052:	1f 93       	push	r17
    1054:	cf 93       	push	r28
    1056:	df 93       	push	r29
    1058:	86 9f       	mul	r24, r22
    105a:	80 01       	movw	r16, r0
    105c:	87 9f       	mul	r24, r23
    105e:	10 0d       	add	r17, r0
    1060:	96 9f       	mul	r25, r22
    1062:	10 0d       	add	r17, r0
    1064:	11 24       	eor	r1, r1
    1066:	c8 01       	movw	r24, r16
    1068:	0e 94 44 08 	call	0x1088	; 0x1088 <malloc>
    106c:	ec 01       	movw	r28, r24
    106e:	00 97       	sbiw	r24, 0x00	; 0
    1070:	29 f0       	breq	.+10     	; 0x107c <calloc+0x2c>
    1072:	a8 01       	movw	r20, r16
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	0e 94 70 09 	call	0x12e0	; 0x12e0 <memset>
    107c:	ce 01       	movw	r24, r28
    107e:	df 91       	pop	r29
    1080:	cf 91       	pop	r28
    1082:	1f 91       	pop	r17
    1084:	0f 91       	pop	r16
    1086:	08 95       	ret

00001088 <malloc>:
    1088:	0f 93       	push	r16
    108a:	1f 93       	push	r17
    108c:	cf 93       	push	r28
    108e:	df 93       	push	r29
    1090:	82 30       	cpi	r24, 0x02	; 2
    1092:	91 05       	cpc	r25, r1
    1094:	10 f4       	brcc	.+4      	; 0x109a <malloc+0x12>
    1096:	82 e0       	ldi	r24, 0x02	; 2
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <__flp>
    109e:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <__flp+0x1>
    10a2:	20 e0       	ldi	r18, 0x00	; 0
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	a0 e0       	ldi	r26, 0x00	; 0
    10a8:	b0 e0       	ldi	r27, 0x00	; 0
    10aa:	30 97       	sbiw	r30, 0x00	; 0
    10ac:	19 f1       	breq	.+70     	; 0x10f4 <malloc+0x6c>
    10ae:	40 81       	ld	r20, Z
    10b0:	51 81       	ldd	r21, Z+1	; 0x01
    10b2:	02 81       	ldd	r16, Z+2	; 0x02
    10b4:	13 81       	ldd	r17, Z+3	; 0x03
    10b6:	48 17       	cp	r20, r24
    10b8:	59 07       	cpc	r21, r25
    10ba:	c8 f0       	brcs	.+50     	; 0x10ee <malloc+0x66>
    10bc:	84 17       	cp	r24, r20
    10be:	95 07       	cpc	r25, r21
    10c0:	69 f4       	brne	.+26     	; 0x10dc <malloc+0x54>
    10c2:	10 97       	sbiw	r26, 0x00	; 0
    10c4:	31 f0       	breq	.+12     	; 0x10d2 <malloc+0x4a>
    10c6:	12 96       	adiw	r26, 0x02	; 2
    10c8:	0c 93       	st	X, r16
    10ca:	12 97       	sbiw	r26, 0x02	; 2
    10cc:	13 96       	adiw	r26, 0x03	; 3
    10ce:	1c 93       	st	X, r17
    10d0:	27 c0       	rjmp	.+78     	; 0x1120 <malloc+0x98>
    10d2:	00 93 ca 01 	sts	0x01CA, r16	; 0x8001ca <__flp>
    10d6:	10 93 cb 01 	sts	0x01CB, r17	; 0x8001cb <__flp+0x1>
    10da:	22 c0       	rjmp	.+68     	; 0x1120 <malloc+0x98>
    10dc:	21 15       	cp	r18, r1
    10de:	31 05       	cpc	r19, r1
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <malloc+0x60>
    10e2:	42 17       	cp	r20, r18
    10e4:	53 07       	cpc	r21, r19
    10e6:	18 f4       	brcc	.+6      	; 0x10ee <malloc+0x66>
    10e8:	9a 01       	movw	r18, r20
    10ea:	bd 01       	movw	r22, r26
    10ec:	ef 01       	movw	r28, r30
    10ee:	df 01       	movw	r26, r30
    10f0:	f8 01       	movw	r30, r16
    10f2:	db cf       	rjmp	.-74     	; 0x10aa <malloc+0x22>
    10f4:	21 15       	cp	r18, r1
    10f6:	31 05       	cpc	r19, r1
    10f8:	f9 f0       	breq	.+62     	; 0x1138 <malloc+0xb0>
    10fa:	28 1b       	sub	r18, r24
    10fc:	39 0b       	sbc	r19, r25
    10fe:	24 30       	cpi	r18, 0x04	; 4
    1100:	31 05       	cpc	r19, r1
    1102:	80 f4       	brcc	.+32     	; 0x1124 <malloc+0x9c>
    1104:	8a 81       	ldd	r24, Y+2	; 0x02
    1106:	9b 81       	ldd	r25, Y+3	; 0x03
    1108:	61 15       	cp	r22, r1
    110a:	71 05       	cpc	r23, r1
    110c:	21 f0       	breq	.+8      	; 0x1116 <malloc+0x8e>
    110e:	fb 01       	movw	r30, r22
    1110:	93 83       	std	Z+3, r25	; 0x03
    1112:	82 83       	std	Z+2, r24	; 0x02
    1114:	04 c0       	rjmp	.+8      	; 0x111e <malloc+0x96>
    1116:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <__flp+0x1>
    111a:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__flp>
    111e:	fe 01       	movw	r30, r28
    1120:	32 96       	adiw	r30, 0x02	; 2
    1122:	44 c0       	rjmp	.+136    	; 0x11ac <malloc+0x124>
    1124:	fe 01       	movw	r30, r28
    1126:	e2 0f       	add	r30, r18
    1128:	f3 1f       	adc	r31, r19
    112a:	81 93       	st	Z+, r24
    112c:	91 93       	st	Z+, r25
    112e:	22 50       	subi	r18, 0x02	; 2
    1130:	31 09       	sbc	r19, r1
    1132:	39 83       	std	Y+1, r19	; 0x01
    1134:	28 83       	st	Y, r18
    1136:	3a c0       	rjmp	.+116    	; 0x11ac <malloc+0x124>
    1138:	20 91 c8 01 	lds	r18, 0x01C8	; 0x8001c8 <__brkval>
    113c:	30 91 c9 01 	lds	r19, 0x01C9	; 0x8001c9 <__brkval+0x1>
    1140:	23 2b       	or	r18, r19
    1142:	41 f4       	brne	.+16     	; 0x1154 <malloc+0xcc>
    1144:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1148:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    114c:	30 93 c9 01 	sts	0x01C9, r19	; 0x8001c9 <__brkval+0x1>
    1150:	20 93 c8 01 	sts	0x01C8, r18	; 0x8001c8 <__brkval>
    1154:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1158:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    115c:	21 15       	cp	r18, r1
    115e:	31 05       	cpc	r19, r1
    1160:	41 f4       	brne	.+16     	; 0x1172 <malloc+0xea>
    1162:	2d b7       	in	r18, 0x3d	; 61
    1164:	3e b7       	in	r19, 0x3e	; 62
    1166:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    116a:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    116e:	24 1b       	sub	r18, r20
    1170:	35 0b       	sbc	r19, r21
    1172:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <__brkval>
    1176:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <__brkval+0x1>
    117a:	e2 17       	cp	r30, r18
    117c:	f3 07       	cpc	r31, r19
    117e:	a0 f4       	brcc	.+40     	; 0x11a8 <malloc+0x120>
    1180:	2e 1b       	sub	r18, r30
    1182:	3f 0b       	sbc	r19, r31
    1184:	28 17       	cp	r18, r24
    1186:	39 07       	cpc	r19, r25
    1188:	78 f0       	brcs	.+30     	; 0x11a8 <malloc+0x120>
    118a:	ac 01       	movw	r20, r24
    118c:	4e 5f       	subi	r20, 0xFE	; 254
    118e:	5f 4f       	sbci	r21, 0xFF	; 255
    1190:	24 17       	cp	r18, r20
    1192:	35 07       	cpc	r19, r21
    1194:	48 f0       	brcs	.+18     	; 0x11a8 <malloc+0x120>
    1196:	4e 0f       	add	r20, r30
    1198:	5f 1f       	adc	r21, r31
    119a:	50 93 c9 01 	sts	0x01C9, r21	; 0x8001c9 <__brkval+0x1>
    119e:	40 93 c8 01 	sts	0x01C8, r20	; 0x8001c8 <__brkval>
    11a2:	81 93       	st	Z+, r24
    11a4:	91 93       	st	Z+, r25
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <malloc+0x124>
    11a8:	e0 e0       	ldi	r30, 0x00	; 0
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	cf 01       	movw	r24, r30
    11ae:	df 91       	pop	r29
    11b0:	cf 91       	pop	r28
    11b2:	1f 91       	pop	r17
    11b4:	0f 91       	pop	r16
    11b6:	08 95       	ret

000011b8 <free>:
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	00 97       	sbiw	r24, 0x00	; 0
    11be:	09 f4       	brne	.+2      	; 0x11c2 <free+0xa>
    11c0:	81 c0       	rjmp	.+258    	; 0x12c4 <free+0x10c>
    11c2:	fc 01       	movw	r30, r24
    11c4:	32 97       	sbiw	r30, 0x02	; 2
    11c6:	13 82       	std	Z+3, r1	; 0x03
    11c8:	12 82       	std	Z+2, r1	; 0x02
    11ca:	a0 91 ca 01 	lds	r26, 0x01CA	; 0x8001ca <__flp>
    11ce:	b0 91 cb 01 	lds	r27, 0x01CB	; 0x8001cb <__flp+0x1>
    11d2:	10 97       	sbiw	r26, 0x00	; 0
    11d4:	81 f4       	brne	.+32     	; 0x11f6 <free+0x3e>
    11d6:	20 81       	ld	r18, Z
    11d8:	31 81       	ldd	r19, Z+1	; 0x01
    11da:	82 0f       	add	r24, r18
    11dc:	93 1f       	adc	r25, r19
    11de:	20 91 c8 01 	lds	r18, 0x01C8	; 0x8001c8 <__brkval>
    11e2:	30 91 c9 01 	lds	r19, 0x01C9	; 0x8001c9 <__brkval+0x1>
    11e6:	28 17       	cp	r18, r24
    11e8:	39 07       	cpc	r19, r25
    11ea:	51 f5       	brne	.+84     	; 0x1240 <free+0x88>
    11ec:	f0 93 c9 01 	sts	0x01C9, r31	; 0x8001c9 <__brkval+0x1>
    11f0:	e0 93 c8 01 	sts	0x01C8, r30	; 0x8001c8 <__brkval>
    11f4:	67 c0       	rjmp	.+206    	; 0x12c4 <free+0x10c>
    11f6:	ed 01       	movw	r28, r26
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	ce 17       	cp	r28, r30
    11fe:	df 07       	cpc	r29, r31
    1200:	40 f4       	brcc	.+16     	; 0x1212 <free+0x5a>
    1202:	4a 81       	ldd	r20, Y+2	; 0x02
    1204:	5b 81       	ldd	r21, Y+3	; 0x03
    1206:	9e 01       	movw	r18, r28
    1208:	41 15       	cp	r20, r1
    120a:	51 05       	cpc	r21, r1
    120c:	f1 f0       	breq	.+60     	; 0x124a <free+0x92>
    120e:	ea 01       	movw	r28, r20
    1210:	f5 cf       	rjmp	.-22     	; 0x11fc <free+0x44>
    1212:	d3 83       	std	Z+3, r29	; 0x03
    1214:	c2 83       	std	Z+2, r28	; 0x02
    1216:	40 81       	ld	r20, Z
    1218:	51 81       	ldd	r21, Z+1	; 0x01
    121a:	84 0f       	add	r24, r20
    121c:	95 1f       	adc	r25, r21
    121e:	c8 17       	cp	r28, r24
    1220:	d9 07       	cpc	r29, r25
    1222:	59 f4       	brne	.+22     	; 0x123a <free+0x82>
    1224:	88 81       	ld	r24, Y
    1226:	99 81       	ldd	r25, Y+1	; 0x01
    1228:	84 0f       	add	r24, r20
    122a:	95 1f       	adc	r25, r21
    122c:	02 96       	adiw	r24, 0x02	; 2
    122e:	91 83       	std	Z+1, r25	; 0x01
    1230:	80 83       	st	Z, r24
    1232:	8a 81       	ldd	r24, Y+2	; 0x02
    1234:	9b 81       	ldd	r25, Y+3	; 0x03
    1236:	93 83       	std	Z+3, r25	; 0x03
    1238:	82 83       	std	Z+2, r24	; 0x02
    123a:	21 15       	cp	r18, r1
    123c:	31 05       	cpc	r19, r1
    123e:	29 f4       	brne	.+10     	; 0x124a <free+0x92>
    1240:	f0 93 cb 01 	sts	0x01CB, r31	; 0x8001cb <__flp+0x1>
    1244:	e0 93 ca 01 	sts	0x01CA, r30	; 0x8001ca <__flp>
    1248:	3d c0       	rjmp	.+122    	; 0x12c4 <free+0x10c>
    124a:	e9 01       	movw	r28, r18
    124c:	fb 83       	std	Y+3, r31	; 0x03
    124e:	ea 83       	std	Y+2, r30	; 0x02
    1250:	49 91       	ld	r20, Y+
    1252:	59 91       	ld	r21, Y+
    1254:	c4 0f       	add	r28, r20
    1256:	d5 1f       	adc	r29, r21
    1258:	ec 17       	cp	r30, r28
    125a:	fd 07       	cpc	r31, r29
    125c:	61 f4       	brne	.+24     	; 0x1276 <free+0xbe>
    125e:	80 81       	ld	r24, Z
    1260:	91 81       	ldd	r25, Z+1	; 0x01
    1262:	84 0f       	add	r24, r20
    1264:	95 1f       	adc	r25, r21
    1266:	02 96       	adiw	r24, 0x02	; 2
    1268:	e9 01       	movw	r28, r18
    126a:	99 83       	std	Y+1, r25	; 0x01
    126c:	88 83       	st	Y, r24
    126e:	82 81       	ldd	r24, Z+2	; 0x02
    1270:	93 81       	ldd	r25, Z+3	; 0x03
    1272:	9b 83       	std	Y+3, r25	; 0x03
    1274:	8a 83       	std	Y+2, r24	; 0x02
    1276:	e0 e0       	ldi	r30, 0x00	; 0
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	12 96       	adiw	r26, 0x02	; 2
    127c:	8d 91       	ld	r24, X+
    127e:	9c 91       	ld	r25, X
    1280:	13 97       	sbiw	r26, 0x03	; 3
    1282:	00 97       	sbiw	r24, 0x00	; 0
    1284:	19 f0       	breq	.+6      	; 0x128c <free+0xd4>
    1286:	fd 01       	movw	r30, r26
    1288:	dc 01       	movw	r26, r24
    128a:	f7 cf       	rjmp	.-18     	; 0x127a <free+0xc2>
    128c:	8d 91       	ld	r24, X+
    128e:	9c 91       	ld	r25, X
    1290:	11 97       	sbiw	r26, 0x01	; 1
    1292:	9d 01       	movw	r18, r26
    1294:	2e 5f       	subi	r18, 0xFE	; 254
    1296:	3f 4f       	sbci	r19, 0xFF	; 255
    1298:	82 0f       	add	r24, r18
    129a:	93 1f       	adc	r25, r19
    129c:	20 91 c8 01 	lds	r18, 0x01C8	; 0x8001c8 <__brkval>
    12a0:	30 91 c9 01 	lds	r19, 0x01C9	; 0x8001c9 <__brkval+0x1>
    12a4:	28 17       	cp	r18, r24
    12a6:	39 07       	cpc	r19, r25
    12a8:	69 f4       	brne	.+26     	; 0x12c4 <free+0x10c>
    12aa:	30 97       	sbiw	r30, 0x00	; 0
    12ac:	29 f4       	brne	.+10     	; 0x12b8 <free+0x100>
    12ae:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <__flp+0x1>
    12b2:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <__flp>
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <free+0x104>
    12b8:	13 82       	std	Z+3, r1	; 0x03
    12ba:	12 82       	std	Z+2, r1	; 0x02
    12bc:	b0 93 c9 01 	sts	0x01C9, r27	; 0x8001c9 <__brkval+0x1>
    12c0:	a0 93 c8 01 	sts	0x01C8, r26	; 0x8001c8 <__brkval>
    12c4:	df 91       	pop	r29
    12c6:	cf 91       	pop	r28
    12c8:	08 95       	ret

000012ca <strnlen_P>:
    12ca:	fc 01       	movw	r30, r24
    12cc:	05 90       	lpm	r0, Z+
    12ce:	61 50       	subi	r22, 0x01	; 1
    12d0:	70 40       	sbci	r23, 0x00	; 0
    12d2:	01 10       	cpse	r0, r1
    12d4:	d8 f7       	brcc	.-10     	; 0x12cc <strnlen_P+0x2>
    12d6:	80 95       	com	r24
    12d8:	90 95       	com	r25
    12da:	8e 0f       	add	r24, r30
    12dc:	9f 1f       	adc	r25, r31
    12de:	08 95       	ret

000012e0 <memset>:
    12e0:	dc 01       	movw	r26, r24
    12e2:	01 c0       	rjmp	.+2      	; 0x12e6 <memset+0x6>
    12e4:	6d 93       	st	X+, r22
    12e6:	41 50       	subi	r20, 0x01	; 1
    12e8:	50 40       	sbci	r21, 0x00	; 0
    12ea:	e0 f7       	brcc	.-8      	; 0x12e4 <memset+0x4>
    12ec:	08 95       	ret

000012ee <strnlen>:
    12ee:	fc 01       	movw	r30, r24
    12f0:	61 50       	subi	r22, 0x01	; 1
    12f2:	70 40       	sbci	r23, 0x00	; 0
    12f4:	01 90       	ld	r0, Z+
    12f6:	01 10       	cpse	r0, r1
    12f8:	d8 f7       	brcc	.-10     	; 0x12f0 <strnlen+0x2>
    12fa:	80 95       	com	r24
    12fc:	90 95       	com	r25
    12fe:	8e 0f       	add	r24, r30
    1300:	9f 1f       	adc	r25, r31
    1302:	08 95       	ret

00001304 <fputc>:
    1304:	0f 93       	push	r16
    1306:	1f 93       	push	r17
    1308:	cf 93       	push	r28
    130a:	df 93       	push	r29
    130c:	fb 01       	movw	r30, r22
    130e:	23 81       	ldd	r18, Z+3	; 0x03
    1310:	21 fd       	sbrc	r18, 1
    1312:	03 c0       	rjmp	.+6      	; 0x131a <fputc+0x16>
    1314:	8f ef       	ldi	r24, 0xFF	; 255
    1316:	9f ef       	ldi	r25, 0xFF	; 255
    1318:	2c c0       	rjmp	.+88     	; 0x1372 <fputc+0x6e>
    131a:	22 ff       	sbrs	r18, 2
    131c:	16 c0       	rjmp	.+44     	; 0x134a <fputc+0x46>
    131e:	46 81       	ldd	r20, Z+6	; 0x06
    1320:	57 81       	ldd	r21, Z+7	; 0x07
    1322:	24 81       	ldd	r18, Z+4	; 0x04
    1324:	35 81       	ldd	r19, Z+5	; 0x05
    1326:	42 17       	cp	r20, r18
    1328:	53 07       	cpc	r21, r19
    132a:	44 f4       	brge	.+16     	; 0x133c <fputc+0x38>
    132c:	a0 81       	ld	r26, Z
    132e:	b1 81       	ldd	r27, Z+1	; 0x01
    1330:	9d 01       	movw	r18, r26
    1332:	2f 5f       	subi	r18, 0xFF	; 255
    1334:	3f 4f       	sbci	r19, 0xFF	; 255
    1336:	31 83       	std	Z+1, r19	; 0x01
    1338:	20 83       	st	Z, r18
    133a:	8c 93       	st	X, r24
    133c:	26 81       	ldd	r18, Z+6	; 0x06
    133e:	37 81       	ldd	r19, Z+7	; 0x07
    1340:	2f 5f       	subi	r18, 0xFF	; 255
    1342:	3f 4f       	sbci	r19, 0xFF	; 255
    1344:	37 83       	std	Z+7, r19	; 0x07
    1346:	26 83       	std	Z+6, r18	; 0x06
    1348:	14 c0       	rjmp	.+40     	; 0x1372 <fputc+0x6e>
    134a:	8b 01       	movw	r16, r22
    134c:	ec 01       	movw	r28, r24
    134e:	fb 01       	movw	r30, r22
    1350:	00 84       	ldd	r0, Z+8	; 0x08
    1352:	f1 85       	ldd	r31, Z+9	; 0x09
    1354:	e0 2d       	mov	r30, r0
    1356:	09 95       	icall
    1358:	89 2b       	or	r24, r25
    135a:	e1 f6       	brne	.-72     	; 0x1314 <fputc+0x10>
    135c:	d8 01       	movw	r26, r16
    135e:	16 96       	adiw	r26, 0x06	; 6
    1360:	8d 91       	ld	r24, X+
    1362:	9c 91       	ld	r25, X
    1364:	17 97       	sbiw	r26, 0x07	; 7
    1366:	01 96       	adiw	r24, 0x01	; 1
    1368:	17 96       	adiw	r26, 0x07	; 7
    136a:	9c 93       	st	X, r25
    136c:	8e 93       	st	-X, r24
    136e:	16 97       	sbiw	r26, 0x06	; 6
    1370:	ce 01       	movw	r24, r28
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	08 95       	ret

0000137c <__ultoa_invert>:
    137c:	fa 01       	movw	r30, r20
    137e:	aa 27       	eor	r26, r26
    1380:	28 30       	cpi	r18, 0x08	; 8
    1382:	51 f1       	breq	.+84     	; 0x13d8 <__ultoa_invert+0x5c>
    1384:	20 31       	cpi	r18, 0x10	; 16
    1386:	81 f1       	breq	.+96     	; 0x13e8 <__ultoa_invert+0x6c>
    1388:	e8 94       	clt
    138a:	6f 93       	push	r22
    138c:	6e 7f       	andi	r22, 0xFE	; 254
    138e:	6e 5f       	subi	r22, 0xFE	; 254
    1390:	7f 4f       	sbci	r23, 0xFF	; 255
    1392:	8f 4f       	sbci	r24, 0xFF	; 255
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	af 4f       	sbci	r26, 0xFF	; 255
    1398:	b1 e0       	ldi	r27, 0x01	; 1
    139a:	3e d0       	rcall	.+124    	; 0x1418 <__ultoa_invert+0x9c>
    139c:	b4 e0       	ldi	r27, 0x04	; 4
    139e:	3c d0       	rcall	.+120    	; 0x1418 <__ultoa_invert+0x9c>
    13a0:	67 0f       	add	r22, r23
    13a2:	78 1f       	adc	r23, r24
    13a4:	89 1f       	adc	r24, r25
    13a6:	9a 1f       	adc	r25, r26
    13a8:	a1 1d       	adc	r26, r1
    13aa:	68 0f       	add	r22, r24
    13ac:	79 1f       	adc	r23, r25
    13ae:	8a 1f       	adc	r24, r26
    13b0:	91 1d       	adc	r25, r1
    13b2:	a1 1d       	adc	r26, r1
    13b4:	6a 0f       	add	r22, r26
    13b6:	71 1d       	adc	r23, r1
    13b8:	81 1d       	adc	r24, r1
    13ba:	91 1d       	adc	r25, r1
    13bc:	a1 1d       	adc	r26, r1
    13be:	20 d0       	rcall	.+64     	; 0x1400 <__ultoa_invert+0x84>
    13c0:	09 f4       	brne	.+2      	; 0x13c4 <__ultoa_invert+0x48>
    13c2:	68 94       	set
    13c4:	3f 91       	pop	r19
    13c6:	2a e0       	ldi	r18, 0x0A	; 10
    13c8:	26 9f       	mul	r18, r22
    13ca:	11 24       	eor	r1, r1
    13cc:	30 19       	sub	r19, r0
    13ce:	30 5d       	subi	r19, 0xD0	; 208
    13d0:	31 93       	st	Z+, r19
    13d2:	de f6       	brtc	.-74     	; 0x138a <__ultoa_invert+0xe>
    13d4:	cf 01       	movw	r24, r30
    13d6:	08 95       	ret
    13d8:	46 2f       	mov	r20, r22
    13da:	47 70       	andi	r20, 0x07	; 7
    13dc:	40 5d       	subi	r20, 0xD0	; 208
    13de:	41 93       	st	Z+, r20
    13e0:	b3 e0       	ldi	r27, 0x03	; 3
    13e2:	0f d0       	rcall	.+30     	; 0x1402 <__ultoa_invert+0x86>
    13e4:	c9 f7       	brne	.-14     	; 0x13d8 <__ultoa_invert+0x5c>
    13e6:	f6 cf       	rjmp	.-20     	; 0x13d4 <__ultoa_invert+0x58>
    13e8:	46 2f       	mov	r20, r22
    13ea:	4f 70       	andi	r20, 0x0F	; 15
    13ec:	40 5d       	subi	r20, 0xD0	; 208
    13ee:	4a 33       	cpi	r20, 0x3A	; 58
    13f0:	18 f0       	brcs	.+6      	; 0x13f8 <__ultoa_invert+0x7c>
    13f2:	49 5d       	subi	r20, 0xD9	; 217
    13f4:	31 fd       	sbrc	r19, 1
    13f6:	40 52       	subi	r20, 0x20	; 32
    13f8:	41 93       	st	Z+, r20
    13fa:	02 d0       	rcall	.+4      	; 0x1400 <__ultoa_invert+0x84>
    13fc:	a9 f7       	brne	.-22     	; 0x13e8 <__ultoa_invert+0x6c>
    13fe:	ea cf       	rjmp	.-44     	; 0x13d4 <__ultoa_invert+0x58>
    1400:	b4 e0       	ldi	r27, 0x04	; 4
    1402:	a6 95       	lsr	r26
    1404:	97 95       	ror	r25
    1406:	87 95       	ror	r24
    1408:	77 95       	ror	r23
    140a:	67 95       	ror	r22
    140c:	ba 95       	dec	r27
    140e:	c9 f7       	brne	.-14     	; 0x1402 <__ultoa_invert+0x86>
    1410:	00 97       	sbiw	r24, 0x00	; 0
    1412:	61 05       	cpc	r22, r1
    1414:	71 05       	cpc	r23, r1
    1416:	08 95       	ret
    1418:	9b 01       	movw	r18, r22
    141a:	ac 01       	movw	r20, r24
    141c:	0a 2e       	mov	r0, r26
    141e:	06 94       	lsr	r0
    1420:	57 95       	ror	r21
    1422:	47 95       	ror	r20
    1424:	37 95       	ror	r19
    1426:	27 95       	ror	r18
    1428:	ba 95       	dec	r27
    142a:	c9 f7       	brne	.-14     	; 0x141e <__ultoa_invert+0xa2>
    142c:	62 0f       	add	r22, r18
    142e:	73 1f       	adc	r23, r19
    1430:	84 1f       	adc	r24, r20
    1432:	95 1f       	adc	r25, r21
    1434:	a0 1d       	adc	r26, r0
    1436:	08 95       	ret

00001438 <__divmodsi4>:
    1438:	05 2e       	mov	r0, r21
    143a:	97 fb       	bst	r25, 7
    143c:	1e f4       	brtc	.+6      	; 0x1444 <__divmodsi4+0xc>
    143e:	00 94       	com	r0
    1440:	0e 94 33 0a 	call	0x1466	; 0x1466 <__negsi2>
    1444:	57 fd       	sbrc	r21, 7
    1446:	07 d0       	rcall	.+14     	; 0x1456 <__divmodsi4_neg2>
    1448:	0e 94 85 0a 	call	0x150a	; 0x150a <__udivmodsi4>
    144c:	07 fc       	sbrc	r0, 7
    144e:	03 d0       	rcall	.+6      	; 0x1456 <__divmodsi4_neg2>
    1450:	4e f4       	brtc	.+18     	; 0x1464 <__divmodsi4_exit>
    1452:	0c 94 33 0a 	jmp	0x1466	; 0x1466 <__negsi2>

00001456 <__divmodsi4_neg2>:
    1456:	50 95       	com	r21
    1458:	40 95       	com	r20
    145a:	30 95       	com	r19
    145c:	21 95       	neg	r18
    145e:	3f 4f       	sbci	r19, 0xFF	; 255
    1460:	4f 4f       	sbci	r20, 0xFF	; 255
    1462:	5f 4f       	sbci	r21, 0xFF	; 255

00001464 <__divmodsi4_exit>:
    1464:	08 95       	ret

00001466 <__negsi2>:
    1466:	90 95       	com	r25
    1468:	80 95       	com	r24
    146a:	70 95       	com	r23
    146c:	61 95       	neg	r22
    146e:	7f 4f       	sbci	r23, 0xFF	; 255
    1470:	8f 4f       	sbci	r24, 0xFF	; 255
    1472:	9f 4f       	sbci	r25, 0xFF	; 255
    1474:	08 95       	ret

00001476 <__muluhisi3>:
    1476:	0e 94 a7 0a 	call	0x154e	; 0x154e <__umulhisi3>
    147a:	a5 9f       	mul	r26, r21
    147c:	90 0d       	add	r25, r0
    147e:	b4 9f       	mul	r27, r20
    1480:	90 0d       	add	r25, r0
    1482:	a4 9f       	mul	r26, r20
    1484:	80 0d       	add	r24, r0
    1486:	91 1d       	adc	r25, r1
    1488:	11 24       	eor	r1, r1
    148a:	08 95       	ret

0000148c <__mulshisi3>:
    148c:	b7 ff       	sbrs	r27, 7
    148e:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <__muluhisi3>

00001492 <__mulohisi3>:
    1492:	0e 94 3b 0a 	call	0x1476	; 0x1476 <__muluhisi3>
    1496:	82 1b       	sub	r24, r18
    1498:	93 0b       	sbc	r25, r19
    149a:	08 95       	ret

0000149c <__prologue_saves__>:
    149c:	2f 92       	push	r2
    149e:	3f 92       	push	r3
    14a0:	4f 92       	push	r4
    14a2:	5f 92       	push	r5
    14a4:	6f 92       	push	r6
    14a6:	7f 92       	push	r7
    14a8:	8f 92       	push	r8
    14aa:	9f 92       	push	r9
    14ac:	af 92       	push	r10
    14ae:	bf 92       	push	r11
    14b0:	cf 92       	push	r12
    14b2:	df 92       	push	r13
    14b4:	ef 92       	push	r14
    14b6:	ff 92       	push	r15
    14b8:	0f 93       	push	r16
    14ba:	1f 93       	push	r17
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29
    14c0:	cd b7       	in	r28, 0x3d	; 61
    14c2:	de b7       	in	r29, 0x3e	; 62
    14c4:	ca 1b       	sub	r28, r26
    14c6:	db 0b       	sbc	r29, r27
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    14d2:	09 94       	ijmp

000014d4 <__epilogue_restores__>:
    14d4:	2a 88       	ldd	r2, Y+18	; 0x12
    14d6:	39 88       	ldd	r3, Y+17	; 0x11
    14d8:	48 88       	ldd	r4, Y+16	; 0x10
    14da:	5f 84       	ldd	r5, Y+15	; 0x0f
    14dc:	6e 84       	ldd	r6, Y+14	; 0x0e
    14de:	7d 84       	ldd	r7, Y+13	; 0x0d
    14e0:	8c 84       	ldd	r8, Y+12	; 0x0c
    14e2:	9b 84       	ldd	r9, Y+11	; 0x0b
    14e4:	aa 84       	ldd	r10, Y+10	; 0x0a
    14e6:	b9 84       	ldd	r11, Y+9	; 0x09
    14e8:	c8 84       	ldd	r12, Y+8	; 0x08
    14ea:	df 80       	ldd	r13, Y+7	; 0x07
    14ec:	ee 80       	ldd	r14, Y+6	; 0x06
    14ee:	fd 80       	ldd	r15, Y+5	; 0x05
    14f0:	0c 81       	ldd	r16, Y+4	; 0x04
    14f2:	1b 81       	ldd	r17, Y+3	; 0x03
    14f4:	aa 81       	ldd	r26, Y+2	; 0x02
    14f6:	b9 81       	ldd	r27, Y+1	; 0x01
    14f8:	ce 0f       	add	r28, r30
    14fa:	d1 1d       	adc	r29, r1
    14fc:	0f b6       	in	r0, 0x3f	; 63
    14fe:	f8 94       	cli
    1500:	de bf       	out	0x3e, r29	; 62
    1502:	0f be       	out	0x3f, r0	; 63
    1504:	cd bf       	out	0x3d, r28	; 61
    1506:	ed 01       	movw	r28, r26
    1508:	08 95       	ret

0000150a <__udivmodsi4>:
    150a:	a1 e2       	ldi	r26, 0x21	; 33
    150c:	1a 2e       	mov	r1, r26
    150e:	aa 1b       	sub	r26, r26
    1510:	bb 1b       	sub	r27, r27
    1512:	fd 01       	movw	r30, r26
    1514:	0d c0       	rjmp	.+26     	; 0x1530 <__udivmodsi4_ep>

00001516 <__udivmodsi4_loop>:
    1516:	aa 1f       	adc	r26, r26
    1518:	bb 1f       	adc	r27, r27
    151a:	ee 1f       	adc	r30, r30
    151c:	ff 1f       	adc	r31, r31
    151e:	a2 17       	cp	r26, r18
    1520:	b3 07       	cpc	r27, r19
    1522:	e4 07       	cpc	r30, r20
    1524:	f5 07       	cpc	r31, r21
    1526:	20 f0       	brcs	.+8      	; 0x1530 <__udivmodsi4_ep>
    1528:	a2 1b       	sub	r26, r18
    152a:	b3 0b       	sbc	r27, r19
    152c:	e4 0b       	sbc	r30, r20
    152e:	f5 0b       	sbc	r31, r21

00001530 <__udivmodsi4_ep>:
    1530:	66 1f       	adc	r22, r22
    1532:	77 1f       	adc	r23, r23
    1534:	88 1f       	adc	r24, r24
    1536:	99 1f       	adc	r25, r25
    1538:	1a 94       	dec	r1
    153a:	69 f7       	brne	.-38     	; 0x1516 <__udivmodsi4_loop>
    153c:	60 95       	com	r22
    153e:	70 95       	com	r23
    1540:	80 95       	com	r24
    1542:	90 95       	com	r25
    1544:	9b 01       	movw	r18, r22
    1546:	ac 01       	movw	r20, r24
    1548:	bd 01       	movw	r22, r26
    154a:	cf 01       	movw	r24, r30
    154c:	08 95       	ret

0000154e <__umulhisi3>:
    154e:	a2 9f       	mul	r26, r18
    1550:	b0 01       	movw	r22, r0
    1552:	b3 9f       	mul	r27, r19
    1554:	c0 01       	movw	r24, r0
    1556:	a3 9f       	mul	r26, r19
    1558:	70 0d       	add	r23, r0
    155a:	81 1d       	adc	r24, r1
    155c:	11 24       	eor	r1, r1
    155e:	91 1d       	adc	r25, r1
    1560:	b2 9f       	mul	r27, r18
    1562:	70 0d       	add	r23, r0
    1564:	81 1d       	adc	r24, r1
    1566:	11 24       	eor	r1, r1
    1568:	91 1d       	adc	r25, r1
    156a:	08 95       	ret

0000156c <_exit>:
    156c:	f8 94       	cli

0000156e <__stop_program>:
    156e:	ff cf       	rjmp	.-2      	; 0x156e <__stop_program>
